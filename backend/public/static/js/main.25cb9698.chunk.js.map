{"version":3,"sources":["services/board-service.js","services/card-service.js","assets/imgs/homenew.jpg","assets/imgs/logo.png","store/actions/board-actions.js","cmps/groups/AddNewGroup.jsx","cmps/cards/card-sidebar/LabelEditModal.jsx","cmps/cards/card-sidebar/LabelPalette.jsx","cmps/cards/CardMenu.jsx","cmps/cards/CardPreviewDueDate.jsx","cmps/cards/CardLabels.jsx","cmps/BoardHeader/MemberPreview.jsx","cmps/cards/CardPreview.jsx","cmps/NewItem.jsx","cmps/groups/GroupMenu.jsx","cmps/groups/GroupPreview.jsx","cmps/groups/GroupList.jsx","cmps/cards/CardDescription.jsx","cmps/cards/CardAddComment.jsx","cmps/cards/card-sidebar/ActivityLog.jsx","cmps/cards/CardTitle.jsx","cmps/cards/CardDueDateSetter.jsx","cmps/cards/CardChecklistTodo.jsx","cmps/cards/CardChecklist.jsx","cmps/cards/CardChecklistContainer.jsx","cmps/cards/CardNewChecklist.jsx","services/storage-service.js","services/user-service.js","store/actions/user-actions.js","cmps/BoardHeader/AddMemberModal.jsx","cmps/BoardHeader/MemberList.jsx","cmps/cards/card-sidebar/CardSidebar.jsx","cmps/cards/CardDetailsAttachment.jsx","cmps/cards/CardImagesList.jsx","services/cloudService.js","cmps/cards/CardImgUpload.jsx","cmps/cards/CoverSelector.jsx","cmps/cards/CardDetails.jsx","cmps/BoardHeader/BoardTitle.jsx","cmps/BoardNav.jsx","cmps/BoardHeader/SideBar/ColorsGallery.jsx","cmps/BoardHeader/SideBar/PhotosGallery.jsx","cmps/BoardHeader/SideBar/ChangeBackground.jsx","cmps/BoardHeader/SideBar/SideBar.jsx","pages/BoardApp.jsx","cmps/BoardPreview.jsx","pages/Boards.jsx","routes.js","pages/Home.jsx","cmps/AppHeader.jsx","App.jsx","reportWebVitals.js","store/reducers/board-reducer.js","store/reducers/user-reducer.js","store/store.js","index.js","services/utils-service.js","services/socket-service.js","services/http-service.js"],"names":["boardService","getBoardById","updateBoard","createActivity","partialActivity","activity","utils","makeId","txt","commentTxt","Date","now","card","id","title","group","getCardTitleById","cardId","board","cardTitle","groups","forEach","cards","query","createImage","imgRef","type","src","createdAt","a","httpService","get","newBoard","socketService","emit","put","_id","cardService","addCard","cardTxt","groupId","console","log","JSON","parse","stringify","newCard","description","archivedAt","members","labels","dueDate","attachments","timeAnalysis","timeInGroupsMap","currGroup","enteredAt","byMember","map","push","require","loadBoard","dispatch","off","on","setStyle","style","onRemoveGroup","groupIdx","findIndex","splice","updateCard","find","cardIdx","activities","unshift","addActivity","_AddNewGroup","state","newGroupTitle","handleChange","event","target","value","setState","onSubmit","ev","preventDefault","props","onAddNewGroup","this","className","onBlur","setNotEditing","closeNewGroup","placeholder","autoFocus","onChange","onMouseDown","onClick","Component","mapDispatchToProps","groupTitle","groupToPush","AddNewGroup","connect","boardModule","currBoard","LabelEditModal","label","action","setLabelEditId","onRemoveLabel","IconButton","size","name","defaultValue","color","Fragment","required","hidden","defaultChecked","htmlFor","_LabelPalette","labelEditId","onAddLabel","newLabel","labelName","newColor","addLabel","onEditLabel","labelColor","updatedLabel","updateLabel","labelId","removeLabel","onToggleLabelToCard","labelIdx","slice","isShownOnBoard","cardLabel","fontSize","updatedlabel","LabelPalette","_CardMenu","isOpen","offsetTop","offsetLeft","width","txtValue","isMemberListOpen","isLabelPaletteShown","ref","React","createRef","submitCard","Promise","resolve","then","onClose","getParentPos","pos","anchorEl","current","parentElement","getBoundingClientRect","top","left","onKeyPress","key","onUpdateHeader","onDeleteCard","deleteddAt","onRemoveCard","onToggleLabelPaletteShown","getCurrTitle","Dialog","open","stopPropagation","position","Button","CardMenu","CardPreviewDueDate","daysRemaining","date","month","toLocaleString","day","getDate","parsedDate","Math","abs","year","getFullYear","displayTime","hour","toLocaleTimeString","dueDateClass","CardLabels","cardLabels","boardLabels","displayLabel","boardLabel","preview","isFull","idx","onClickLabel","MemberPreview","imgUrl","testImage","url","callback","timer","timeout","timedOut","img","Image","onerror","onabort","clearTimeout","onload","setTimeout","setImgResult","res","getStyle","backgroundImage","getName","newName","split","firstLetter","charAt","toUpperCase","secondLetter","length","_className","showBig","Tooltip","getInitials","_CardPreview","isEditing","componentDidMount","getCardPreviewAttachments","cardAtt","Object","keys","getCardPreviewHoldDesc","cardDesc","getCardPreviewComments","cardComm","filter","getCardPreviewChecklist","checklists","doneTodos","totalTodos","doneClass","checklist","todos","todo","isDone","getCardPreviewMembers","cardMembers","cardMembersEl","member","fullName","getCardPreviewAttrs","attrs","every","item","att","onDetails","history","onOpenCardActions","onSetEditing","onToggleLabels","toggleFullLabels","onSetNotEditing","getCardCover","cardCover","cover","backgroundColor","cardAttachStyle","draggableId","index","provided","draggableProps","dragHandleProps","innerRef","fullLabel","CardPreview","NewItem","setEditing","getIsEditing","onKeyDown","placeHolderTxt","addBtnTxt","addItemTxt","onAdd","border","_GroupMenu","removeGroup","toggleMenu","ClickAwayListener","onClickAway","GroupMenu","_GroupPreview","currGroupName","currGroupId","isMenuShown","isChangeGroupShown","onAddCard","getAddItemTxt","handleChangeGroupName","setNewGroupName","isShown","closeChangeGroupName","openHeadrEdit","onOpenChangeGroupName","groupName","spellCheck","autoComplete","onFocus","select","droppableId","droppableProps","trim","newGroupName","replace","GroupPreview","GroupList","isNewGroupShown","onAddGroup","direction","CardDescription","setDescriptionFromProps","onSave","onUpdateDesc","getDescriptionTxt","prevProps","prevState","CardAddComment","onAddComment","getNewCommentDisplay","placeholer","Accordion","expanded","classes","root","AccordionSummary","aria-controls","AccordionDetails","disabled","ActivityLog","boardId","displayMode","to","timeago","CircularProgress","CardTitle","onChangeText","onUpdate","titleTxt","CardDueDateSetter","isPopperOpen","anchor","setDefaultDate","openModal","closeModal","onSetDueDate","formDate","timestamp","getTime","submitDueDate","onUpdateDueDate","onRemoveDueDate","getDisplayDateBtn","alwaysShowButton","parseDate","timeArray","getMonth","getHours","getMinutes","i","toString","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onBackdropClick","noValidate","TextField","InputLabelProps","shrink","CardChecklistTodo","isNew","removeText","getNewTodoDisplay","getTodoClassName","getTextBox","Checkbox","checked","onCheck","onRemove","updateChecklist","updateTodo","checkStatus","getActivityTxt","activityTxt","displayCompleted","CardChecklist","showDialog","tasksCompleted","totalTasks","setTasksStatus","toggleDisplayCompleted","getDisplayCheckedBtn","btnContent","onRemoveChecklist","closeDialog","openDialog","getTotalTasks","getCompletedTasks","checklistItem","getPercentCompleted","round","onUpdateChecklist","newTodo","todoIdx","LinearProgress","variant","DialogTitle","DialogContent","DialogContentText","DialogActions","CardChecklistContainer","CardNewChecklist","getNewChecklistDisplay","storageService","load","localStorage","getItem","save","val","setItem","clear","gUsers","email","username","password","userService","login","logout","signup","getLoggedinUser","getUsers","remove","update","credentials","user","_saveLocalUser","userInfo","sessionStorage","userId","userIndex","indexOf","_user","loadAllUsers","users","onLogout","_AddMemberModal","searchLetters","toggleUser","removeCardMember","onRemoveCardMember","removeMember","addCardMember","onAddCardMember","addToMembers","getMembers","search","allUsers","onCloseModal","autoCorrect","includes","userToPush","memberIdx","AddMemberModal","userModule","MemberList","isModalShown","onShowModal","renderMemberList","allExistingUsers","renderCardDetailsMemberList","class","CardSidebar","toggleLabelPalette","onUpdateChecklists","isUploading","toggleUploadDropzone","anchorRef","toggleCoverSelector","CardDetailsAttachment","updateAttFromProps","attachment","bool","CardImagesList","cloudService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","method","body","json","data","secure_url","CardImgUpload","setUploading","submitImage","onAddImage","files","acceptedFiles","cancelButtonText","submitButtonText","maxFileSize","toggleOpen","showPreviews","showFileNamesInPreview","CoverSelector","setCoverFromProps","colors","onSelectCover","onRemoveCover","getImageEls","imageEls","el","getColorEls","toggleList","_CardDetails","commentsOnly","isLabelPaletteShowing","isCoverSelectorShown","isUploadZoneOpen","getCardDetails","foundCard","onCloseCard","onUpdateCover","onChangeMembers","aria-label","newActivity","toggleCommentsOnly","getFilteredActivities","cardActivities","onUpdateTitle","newChecklist","getLabels","openEditLabelsModal","renderAttachments","urlImg","newImg","onUpdateAttachments","newAttachment","displayDate","toggleDisplayMembers","onArchiveCard","CardDetails","withRouter","BoardTitle","_BoardNav","onUpdateBoardTitle","updateBoardTitle","onToggleSidebar","boardTitle","BoardNav","_ColorsGallery","colorSelected","bgImg","boardColor","ColorsGallery","_PhotosGallery","imgSelected","PhotosGallery","_ChangeBackground","chooseBackground","onSelect","ChangeBackground","_SideBar","sideBarTitle","titleClicked","DynamicCmp","SideBar","_BoardApp","lastReceivedUpdateAt","isSidebarShowing","match","params","setup","lastUpdate","BoardApp","BoardPreview","boardImg","_Boards","loadBoards","boards","addNewBoard","removeBoard","routes","path","component","Logo","HeroImg","href","_AppHeader","isNewBoardModalShown","isLoginDrawerShown","isUserDetailsOpen","loggedinUser","toggleModal","redirectPath","showLoginDrawer","nativeEvent","stopImmediatePropagation","hideLoginDrawer","onOpenUserDetails","onCloseUserDetails","AppHeader","_App","onDragStart","resetFilterBy","onDragEnd","result","destination","source","startGroupIndex","endGroupIndex","currCard","newCardsGroup","Array","from","newGroup","newGroups","updatePosition","destinationGroup","formerGroup","formerCardIndex","newCardsArray","currCardTime","newGroupsOrder","route","exact","newBoardPositioning","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","defaultStyle","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","currBoardId","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","possible","floor","random","delay","ms","getRandomInt","min","max","ceil","socket","io","reconnection","eventName","cb","removeAllListeners","terminate","createSocketService","BASE_URL","axios","Axios","create","withCredentials","endpoint","ajax","post","delete","dir","response","status","location","assign"],"mappings":"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","file":"static/js/main.25cb9698.chunk.js","sourcesContent":["import { httpService } from './http-service'\r\nimport { socketService } from './socket-service'\r\n// var cloudinary = require('cloudinary').v2;\r\nimport { utils } from './utils-service'\r\n\r\nexport const boardService = {\r\n    getBoardById,\r\n    updateBoard,\r\n    createActivity,\r\n    getCardTitleById,\r\n    query,\r\n    createImage\r\n}\r\n\r\nasync function getBoardById(id) {\r\n    return await httpService.get(`board/${id}`)\r\n}\r\n\r\nasync function query() {\r\n    return await httpService.get(`board`)\r\n}\r\n\r\nasync function updateBoard(newBoard) {\r\n    socketService.emit('updated board', newBoard) \r\n    return await httpService.put(`board/${newBoard._id}`, newBoard)\r\n}\r\n\r\nfunction createActivity(partialActivity) {\r\n    // const user = userService.getLoggedInUser()\r\n\r\n    const activity = {\r\n        \"id\": utils.makeId(),\r\n        \"txt\": partialActivity.txt,\r\n        \"commentTxt\": partialActivity.commentTxt,\r\n        \"createdAt\": Date.now(),\r\n        \"byMember\": {\r\n            // \"_id\": user._id,\r\n            // \"fullName\": user.fullName,\r\n            // \"imgUrl\": user.imgUrl\r\n        }\r\n    }\r\n    if (partialActivity.card) {\r\n        activity.card = {\r\n            \"id\": partialActivity.card.id,\r\n            \"title\": partialActivity.card.title\r\n        }\r\n    }\r\n    if (!partialActivity.group) {\r\n        activity.group = { ...partialActivity.group }\r\n    }\r\n\r\n    return activity\r\n}\r\n\r\nfunction getCardTitleById(cardId, board) {\r\n    let cardTitle;\r\n    board.groups.forEach(group => group.cards.forEach(card => {\r\n        if (card.id === cardId) {\r\n            cardTitle = card.title\r\n        }\r\n    }))\r\n    return cardTitle\r\n}\r\n\r\nfunction createImage(imgRef) {\r\n    const attachment = {\r\n        type: 'img',\r\n        id: utils.makeId(),\r\n        src: imgRef,\r\n        title: 'Image',\r\n        createdAt: Date.now()\r\n    }\r\n    return attachment\r\n}","\r\nimport { utils } from './utils-service'\r\nimport { boardService } from './board-service';\r\n\r\nexport const cardService = {\r\n    addCard\r\n}\r\n\r\n\r\nasync function addCard(board, cardTxt, groupId) {\r\n    console.log('groupId',groupId);\r\n    const newBoard = JSON.parse(JSON.stringify(board))\r\n    const newCard = {\r\n        id: utils.makeId(),\r\n        title: cardTxt,\r\n        description: '',\r\n        archivedAt: null,\r\n        members: [],\r\n        labels: [],\r\n        createdAt: Date.now(),\r\n        dueDate: null,\r\n        attachments: null,\r\n        timeAnalysis:{ \r\n            timeInGroupsMap:{},\r\n            currGroup: {\r\n                groupId,\r\n                enteredAt: Date.now()\r\n            }\r\n         },\r\n        byMember: {\r\n            // add user info here from session storage:\r\n            //                         \"byMember\": {\r\n            //                             \"_id\": \"u101\",\r\n            //                             \"username\": \"Tal\",\r\n            //                             \"fullname\": \"Tal Tarablus\",\r\n            //                             \"imgUrl\": \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n            //                         },\r\n        }\r\n    }\r\n    newBoard.groups.map(group => {\r\n        if (group.id === groupId) {\r\n            group.cards.push(newCard)\r\n            return group\r\n        }\r\n        return group\r\n    })\r\n\r\n    // const partialActivity = {\r\n    //     \"txt\": 'create this card',\r\n    //     \"commentTxt\": '',\r\n    //     \"card\": {\r\n    //       \"id\": newCard.id,\r\n    //       \"title\": cardTxt\r\n    //     }\r\n    //   }\r\n\r\n      \r\n    // const activity = boardService.createActivity(partialActivity)\r\n    //   if (!newBoard.activities) newBoard.activities = []\r\n    //   newBoard.activities.push(activity)\r\n    // await boardService.updateBoard(newBoard)\r\n    return newBoard\r\n}\r\n","export default __webpack_public_path__ + \"static/media/homenew.eed7a37b.jpg\";","export default __webpack_public_path__ + \"static/media/logo.5e046566.png\";","import { boardService } from '../../services/board-service'\r\nimport { socketService } from '../../services/socket-service';\r\nimport { utils } from '../../services/utils-service'\r\nconst { cardService } = require(\"../../services/card-service\");\r\n\r\n\r\nexport function loadBoard(id) {\r\n    return async dispatch => {\r\n\r\n        try {\r\n            const board = await boardService.getBoardById(id);\r\n            dispatch({ type: 'SET_BOARD', board })\r\n            socketService.emit('join board', id) // join('u101')\r\n            socketService.off('updated board')\r\n            socketService.on('updated board', board => {\r\n                console.log('koral', board);\r\n                dispatch({ type: 'SET_BOARD', board })\r\n            })\r\n            // socketService.on('task-updated', task => {\r\n            //     dispatch({ type: 'saveTask', task })\r\n            // })\r\n\r\n        } catch (err) {\r\n            console.log('boardStore: Error in loadBoard', err)\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoards() {\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.query()\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('ReviewActions: err in loadBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addNewBoard(){\r\n    \r\n    console.log('add new board');\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            dispatch({ type: 'REMOVE_REVIEW', boardId })\r\n        } catch (err) {\r\n            console.log('ReviewActions: err in removeBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setStyle(style) {\r\n    return async dispatch => {\r\n        dispatch({ type: 'SET_STYLE', style })\r\n    }\r\n}\r\n\r\nexport function setDefaultStyle() {\r\n    return async dispatch => {\r\n        dispatch({ type: 'SET_DEFAULT_STYLE' })\r\n    }\r\n}\r\n\r\nexport function updateBoard(board) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onRemoveGroup(board, groupId) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const groupIdx = newBoard.groups.findIndex(group => groupId === group.id)\r\n            newBoard.groups.splice(groupIdx, 1)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error deleting card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onAddNewGroup(board, groupTitle) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const groupToPush = {\r\n                id: utils.makeId(),\r\n                title: groupTitle,\r\n                cards: [],\r\n                archivedAt: false,\r\n                style: {}\r\n            }\r\n            newBoard.groups.push(groupToPush)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('error adding new group', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addCard(board, cardTxt, groupId) {\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = await cardService.addCard(board, cardTxt, groupId)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard });\r\n            boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('ReviewActions: err in addCard', err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function updateCard(board, newCard, activity) {\r\n    return async dispatch => {\r\n        try {\r\n            // replicate board\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            // find the group idx\r\n            const groupIdx = newBoard.groups.findIndex(group => group.cards.find(card => card.id === newCard.id))\r\n            // find the card idx\r\n            const cardIdx = newBoard.groups[groupIdx].cards.findIndex(card => card.id === newCard.id)\r\n            // replace the card content\r\n            newBoard.groups[groupIdx].cards[cardIdx] = newCard\r\n\r\n            if (activity) {\r\n                if (!newBoard.activities) {\r\n                    newBoard.activities = []\r\n                }\r\n                newBoard.activities.unshift(activity)\r\n            }\r\n\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n\r\n        } catch (err) {\r\n            console.log('error updating card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onRemoveCard(board, cardId) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const groupIdx = newBoard.groups.findIndex(group => group.cards.find(card => card.id === cardId))\r\n            const cardIdx = newBoard.groups[groupIdx].cards.findIndex(card => card.id === cardId)\r\n            newBoard.groups[groupIdx].cards.splice(cardIdx, 1)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error deleting card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setNewGroupName(groupId, groupName, board) {\r\n    return async dispatch => {\r\n        try {\r\n            const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n            if (groupName === board.groups[groupIdx].title || !groupName.trim()) return\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const newGroupName = groupName.replace(/\\s+/g, \" \")\r\n            newBoard.groups[groupIdx].title = newGroupName.trim()\r\n            dispatch({\r\n                type: 'SET_BOARD',\r\n                board: newBoard\r\n            })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('error setting group name', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addActivity(board, activity) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            if (!newBoard.activities) newBoard.activities = []\r\n            newBoard.activities.unshift(activity)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n            console.log(newBoard)\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function toggleFullLabels() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_FULL_LABEL' })\r\n    }\r\n}\r\n\r\nexport function addLabel(board, newLabel) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            newLabel.id = utils.makeId()\r\n            if (!newBoard.labels) newBoard.labels = [];\r\n            newBoard.labels.push(newLabel)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error adding label', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeLabel(board, labelId) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const labelIdx = newBoard.labels.findIndex(label => label.id === labelId)\r\n            newBoard.labels.splice(labelIdx, 1)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error removing label', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateLabel(board, updatedlabel) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            newBoard.labels = newBoard.labels.map(label => {\r\n                if (label.id === updatedlabel.id) label = updatedlabel\r\n                return label\r\n            })\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error updating label', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeCardMember(board, card, id) {\r\n    return async dispatch => {\r\n        const newCard = JSON.parse(JSON.stringify(card))\r\n\r\n        if (!newCard.members) newCard.members = []\r\n\r\n        newCard.members = newCard.members.filter(user => user._id != id)\r\n\r\n        // replicate board\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        // find the group idx\r\n        const groupIdx = newBoard.groups.findIndex(group => group.cards.find(card => card.id === newCard.id))\r\n        // find the card idx\r\n        const cardIdx = newBoard.groups[groupIdx].cards.findIndex(card => card.id === newCard.id)\r\n        // replace the card content\r\n\r\n        newBoard.groups[groupIdx].cards[cardIdx] = newCard\r\n\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\nexport function addCardMember(board, card, { _id, fullName, imgUrl }) {\r\n    return async dispatch => {\r\n        const userToPush = {\r\n            _id,\r\n            fullName,\r\n            imgUrl\r\n        }\r\n\r\n        const newCard = JSON.parse(JSON.stringify(card))\r\n\r\n        if (!newCard.members) newCard.members = []\r\n\r\n        newCard.members.push(userToPush)\r\n\r\n        // replicate board\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        // find the group idx\r\n        const groupIdx = newBoard.groups.findIndex(group => group.cards.find(card => card.id === newCard.id))\r\n        // find the card idx\r\n        const cardIdx = newBoard.groups[groupIdx].cards.findIndex(card => card.id === newCard.id)\r\n        // replace the card content\r\n\r\n        newBoard.groups[groupIdx].cards[cardIdx] = newCard\r\n\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\nexport function addToMembers({ _id, fullName, imgUrl }, board) {\r\n    return async dispatch => {\r\n        const userToPush = {\r\n            _id,\r\n            fullName,\r\n            imgUrl\r\n        }\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        newBoard.members.unshift(userToPush)\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\nexport function removeMember(id, board) {\r\n    return async dispatch => {\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        const memberIdx = newBoard.members.findIndex(member => member._id === id)\r\n        newBoard.members.splice(memberIdx, 1)\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\nexport function resetFilterBy(boardId) {\r\n    return async dispatch => {\r\n        const board = await boardService.getBoardById(boardId);\r\n        dispatch({ type: 'SET_BOARD', board });\r\n        dispatch({ type: 'RESET_FILTER_BY' })\r\n    }\r\n}\r\n\r\nexport function updatePosition(newBoardPositioning, cardId) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_BOARD', board: newBoardPositioning })\r\n            let newBoard = JSON.parse(JSON.stringify(newBoardPositioning))\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoardTitle(board, boardTitle) {\r\n    return async dispatch => {\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        newBoard.title = boardTitle\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////\r\n// function makeId(length = 8) {\r\n//     let text = '';\r\n//     const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n//     for (let i = 0; i < length; i++) {\r\n//         text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n//     }\r\n\r\n//     return text;\r\n// }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { onAddNewGroup } from '../../store/actions/board-actions.js';\r\n\r\nexport class _AddNewGroup extends Component {\r\n\r\n    state = {\r\n        newGroupTitle: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ newGroupTitle: '' })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const title = event.target.value        \r\n        this.setState({ newGroupTitle: title })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.newGroupTitle) return\r\n        this.props.onAddNewGroup(this.props.board ,this.state.newGroupTitle)\r\n        this.setState({ newGroupTitle: '' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"new-group-form\">\r\n                    <form onBlur={this.setNotEditing} onSubmit={this.onSubmit} >\r\n                    <input onBlur={() => this.props.closeNewGroup()} \r\n                    placeholder=\"Enter list title\" \r\n                    type=\"text\" autoFocus onChange={this.handleChange} \r\n                        value={this.state.newGroupTitle ? this.state.newGroupTitle : ''}\r\n                    />\r\n                        <div className=\"save-btn-container\">\r\n                            <button className=\"save-btn\" onMouseDown={this.onSubmit}>Add List</button>\r\n                        <button onClick={ ()=> this.props.closeNewGroup() } >close</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onAddNewGroup\r\n};\r\n\r\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nexport function LabelEditModal({ label, action, setLabelEditId, onRemoveLabel, card }) {\r\n    const colors = ['green', 'yellow', 'orange', 'red', 'purple', 'blue', 'pink'];\r\n    return (\r\n        <div className=\"label-edit-modal\">\r\n            <IconButton className=\"close-modal\" size=\"small\"\r\n                onClick={() => setLabelEditId()}>\r\n                <CloseOutlinedIcon />\r\n            </IconButton>\r\n            <form onSubmit={(ev) => action(ev, label)}>\r\n                <input type=\"text\" name=\"labelName\"\r\n                    defaultValue={label ? label.name : ''}\r\n                    placeholder=\"Enter label's name...\" />\r\n                <div className=\"color-palette color-picker-container\">\r\n                    {colors.map(color => <React.Fragment key={color}>\r\n                        <input required hidden type=\"radio\" id={color} name=\"newColor\"\r\n                            value={color}\r\n                            defaultChecked={label ? color === label.color : 'pink'} />\r\n                        <label htmlFor={color}>\r\n                            <div className={`color-picker ${color}`}></div>\r\n                        </label>\r\n                    </React.Fragment>)}\r\n                </div>\r\n                <div className=\"save-cancel-btns\">\r\n                    <button className=\"save-btn\">Save</button>\r\n                    {label && <button className=\"cancel-btn\" onClick={() => onRemoveLabel(label.id)}>Delete</button>}\r\n                </div>\r\n            </form>\r\n        </div >\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { IconButton } from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { addLabel, updateLabel, removeLabel, updateCard } from '../../../store/actions/board-actions.js';\r\nimport { LabelEditModal } from './LabelEditModal.jsx';\r\n\r\n\r\nclass _LabelPalette extends Component {\r\n\r\n    state = {\r\n        labelEditId: null\r\n    }\r\n\r\n    setLabelEditId = (labelEditId = null) => {\r\n        this.setState({ labelEditId });\r\n    }\r\n\r\n    onAddLabel = (ev) => {\r\n        ev.preventDefault();\r\n        const newLabel = {\r\n            name: ev.target.labelName.value,\r\n            color: ev.target.newColor.value\r\n        }\r\n        this.props.addLabel(this.props.board, newLabel);\r\n        this.setLabelEditId();\r\n    }\r\n\r\n    onEditLabel = (ev, label) => {\r\n        ev.preventDefault();\r\n        const labelName = ev.target.labelName.value;\r\n        const labelColor = ev.target.newColor.value;\r\n        const updatedLabel = { ...label, name: labelName, color: labelColor }\r\n        this.props.updateLabel(this.props.board, updatedLabel);\r\n        this.setLabelEditId();\r\n    }\r\n\r\n    onRemoveLabel = (labelId) => {\r\n        this.props.removeLabel(this.props.board, labelId);\r\n        this.setLabelEditId();\r\n    }\r\n\r\n    onToggleLabelToCard = (card, labelId) => {\r\n        // console.log('card\\'s labels before:', card.labels);\r\n        const labelIdx = card.labels.findIndex(label => label.id === labelId);\r\n        card.labels = (labelIdx === -1)\r\n            ? [...card.labels, { id: labelId }]\r\n            : [...card.labels.slice(0, labelIdx), ...card.labels.slice(labelIdx + 1)];\r\n        // console.log('card\\'s labels after:', card.labels);\r\n\r\n        const activity = this.props.createActivity('updated a label')\r\n        this.props.updateCard(this.props.board, card, activity);\r\n    }\r\n\r\n    render() {\r\n        const { board, card } = this.props;\r\n        return <div className={this.props.isShownOnBoard ? \"card-preview-label-palette\" : \"card-details-label-palette\"}>\r\n        <ul className=\"clean-list\">\r\n            <div className=\"labels-modal flex column\">\r\n            <span className=\"labels-modal-header\">Labels</span>\r\n            {board.labels && board.labels.map(label => <li key={label.id} className=\"label\">\r\n                <div className=\"flex justify-space-between label\">\r\n                    <div className={`label-color ${label.color} flex justify-space-between`}\r\n                        onClick={card\r\n                            ? () => this.onToggleLabelToCard(card, label.id)\r\n                            : () => this.setLabelEditId(\r\n                                this.state.labelEditId === label.id\r\n                                    ? null\r\n                                    : label.id\r\n                            )}>\r\n                        <span>{label.name}</span>\r\n                        {card && card.labels.find(cardLabel => cardLabel.id === label.id) && <CheckIcon className=\"tick-symbol\" fontSize=\"small\" />}\r\n                    </div>\r\n                    <IconButton className=\"edit-label-btn\" onClick={() => this.setLabelEditId(\r\n                        this.state.labelEditId === label.id\r\n                            ? null\r\n                            : label.id\r\n                    )}>\r\n                        <EditOutlinedIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    {!card && <IconButton className=\"remove-label-btn\" onClick={() => this.onRemoveLabel(label.id)}>\r\n                        <DeleteOutlinedIcon fontSize=\"small\" />\r\n                    </IconButton>}\r\n                    {this.state.labelEditId === label.id && <LabelEditModal\r\n                        label={label}\r\n                        action={this.onEditLabel}\r\n                        onRemoveLabel={this.onRemoveLabel}\r\n                        setLabelEditId={this.setLabelEditId} />}\r\n                </div>\r\n            </li>)}\r\n            <li className=\"label add-label\">\r\n                <div className=\"label-color add-label\"\r\n                    onClick={() => this.setLabelEditId(\r\n                        this.state.labelEditId === 'addLabel'\r\n                            ? null\r\n                            : 'addLabel'\r\n                    )}>\r\n                    <div className=\"new-label-button btn\">Create a new label</div>\r\n                </div>\r\n                {this.state.labelEditId === 'addLabel' && <LabelEditModal\r\n                    action={this.onAddLabel}\r\n                    setLabelEditId={this.setLabelEditId} />}\r\n            </li>\r\n            </div>\r\n        </ul>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addLabel,\r\n    updateLabel,\r\n    removeLabel,\r\n    updateCard\r\n}\r\n\r\nexport const LabelPalette = connect(mapStateToProps, mapDispatchToProps)(_LabelPalette);","// // Edit card preivew - should have edit labels, change memebers change due date and archive\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateCard, onRemoveCard, addActivity } from '../../store/actions/board-actions.js'\r\nimport { boardService } from '../../services/board-service.js'\r\nimport { Button, Dialog } from '@material-ui/core';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport { LabelPalette } from '../cards/card-sidebar/LabelPalette';\r\n\r\nclass _CardMenu extends Component {\r\n\r\n    state = {\r\n        isOpen: false,\r\n        offsetTop: null,\r\n        offsetLeft: null,\r\n        width: null,\r\n        txtValue: '',\r\n        isMemberListOpen: false,\r\n        isLabelPaletteShown: false\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    submitCard = (card) => {\r\n        return new Promise(resolve => {\r\n            this.props.updateCard(this.props.board, card).then(() => {\r\n                this.onClose()\r\n            })\r\n        })\r\n    }\r\n\r\n    getParentPos = () => {\r\n        const pos = this.props.anchorEl.current.parentElement.getBoundingClientRect()\r\n        console.log('pos',pos);\r\n        this.setState({ offsetTop: pos.top, offsetLeft: pos.left, width: pos.width })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getParentPos()\r\n        this.getCurrTitle()\r\n    }\r\n\r\n\r\n    onChange = (ev) => {\r\n        const txtValue = ev.target.value\r\n        this.setState({ txtValue })\r\n    }\r\n\r\n    onKeyPress = (ev) => {\r\n        if (ev.key === 'Enter') return this.onUpdateHeader()\r\n    }\r\n\r\n    onUpdateHeader = () => {\r\n        let card = { ...this.props.props.card }\r\n        card.title = this.state.txtValue\r\n        this.submitCard(card)\r\n    }\r\n\r\n    onDeleteCard = () => {\r\n        let card = { ...this.props.props.card }\r\n        card.deleteddAt = Date.now()\r\n        this.props.onRemoveCard(this.props.board, card.id)\r\n    }\r\n\r\n\r\n    getCurrTitle() {\r\n        const txtValue = this.props.props.card.title\r\n        this.setState({ txtValue })\r\n    }\r\n\r\n    createActivity = (txt) => {\r\n        const activity = {\r\n            \"txt\": txt,\r\n            \"commentTxt\": '',\r\n            \"card\": {\r\n                \"id\": this.props.props.card.id,\r\n                \"title\": this.props.props.card.title\r\n            }\r\n        }\r\n\r\n        console.log('CREATING ACTIVITY FOR CARD ' + JSON.stringify(activity))\r\n\r\n        return boardService.createActivity(activity)\r\n    }\r\n\r\n    onToggleLabelPaletteShown = () => {\r\n        this.setState({isLabelPaletteShown: !this.state.isLabelPaletteShown})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Dialog onClose={this.props.onClose} open={true} >\r\n\r\n                    <div className=\"card-edit-container\" onClick={(ev) => ev.stopPropagation()} style={{\r\n                        left: `${this.state.offsetLeft}px`,\r\n                        top: `${this.state.offsetTop}px`,\r\n                        position: 'fixed'\r\n                    }}>\r\n                        <div className=\"card-edit-left\">\r\n                            <div className=\"card-preview\" style={{ width: `${this.state.width}px` }}>\r\n\r\n                                <form>\r\n                                    <textarea className=\"card-preview-title-edit\" autoFocus onKeyPress={this.onKeyPress} onChange={this.onChange} value={this.state.txtValue} />\r\n                                </form>\r\n                            </div>\r\n                            <button className=\"save-btn\" onClick={this.onUpdateHeader}>Save</button>\r\n                        </div>\r\n\r\n                        \r\n\r\n                        <div className=\"card-edit-right\">\r\n                            <div className=\"card-preview-edit-actions-container\">\r\n\r\n                                <Button onClick={this.onDeleteCard}><ArchiveOutlinedIcon /> <span>Delete Card</span></Button>\r\n                                <Button onClick={this.onToggleLabelPaletteShown}><LabelIcon /><span>EDIT LABELS</span></Button>\r\n                                <Button><PeopleAltOutlinedIcon /><span>EDIT MEMBERS</span></Button>\r\n                                <Button><AccessTimeIcon /><span>SET DUE DATE</span></Button>\r\n                                <Button><ShareIcon /><span>SHARE</span></Button>\r\n                                <Button onClick={this.onClose}><CloseRoundedIcon /><span>CLOSE</span></Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                        { this.state.isLabelPaletteShown && <LabelPalette createActivity={this.createActivity} card={this.props.props.card} isShownOnBoard={true}/>}\r\n                    </div>\r\n            </Dialog >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    updateCard,\r\n    onRemoveCard,\r\n    addActivity\r\n};\r\n\r\nexport const CardMenu = connect(mapStateToProps, mapDispatchToProps)(_CardMenu);\r\n","import React from 'react'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\r\n\r\nexport function CardPreviewDueDate(props) {\r\n    if (!props.dueDate) return <React.Fragment />\r\n    let daysRemaining = (props.dueDate - Date.now()) / 1000 / 60 / 60 / 24\r\n    \r\n    const date = new Date(props.dueDate)\r\n    \r\n    let month = date.toLocaleString(\"en-US\", { month: \"short\" })\r\n    let day = date.getDate()\r\n    \r\n    let parsedDate = `${month} ${day}`\r\n    if (Math.abs(daysRemaining) > 365) {\r\n        let year = date.getFullYear()\r\n        parsedDate += `, ${year}`\r\n    }\r\n    if (props.displayTime) {\r\n        let hour = date.toLocaleTimeString()\r\n        parsedDate += ` at ${hour}`\r\n     \r\n    }\r\n\r\n    let dueDateClass = 'card-preview-due-date-container card-preview-due-date-container-'\r\n    switch (true) {\r\n        case (daysRemaining > 7):\r\n            dueDateClass += 'long'\r\n            break\r\n        case (daysRemaining > 3):\r\n            dueDateClass += 'medium'\r\n            break\r\n        case (daysRemaining >= 0):\r\n            dueDateClass += 'due-soon'\r\n            break\r\n        default:\r\n            dueDateClass += 'overdue'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {dueDateClass}>\r\n            <AccessTimeIcon fontSize=\"inherit\" />\r\n            {parsedDate}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function CardLabels(props) {\r\n    if (!props.cardLabels || !props.boardLabels) return <React.Fragment />\r\n    \r\n    function displayLabel(label) {\r\n        const boardLabel = props.boardLabels.find(boardLabel => boardLabel.id === label.id)\r\n        if (!props.preview) return (\r\n            <div className={`card-details-label ${boardLabel?.color}`}>\r\n                    {boardLabel?.name}\r\n            </div>\r\n        )\r\n        if (props.isFull) return (\r\n            <div className={`card-preview-full-label ${boardLabel?.color}`}>\r\n                    {boardLabel?.name}\r\n            </div>\r\n        )\r\n        return (\r\n            <div className={`card-preview-collapsed-label ${boardLabel?.color}`}>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-preview-labels flex\">\r\n            {props.cardLabels.map((label, idx) => {\r\n                return <div onClick={props.onClickLabel} key={idx} > {displayLabel(label)} </div>\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}","\r\nimport { Tooltip } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n\r\nexport class MemberPreview extends Component {\r\n\r\n    state = {\r\n        imgUrl: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.testImage(this.props.imgUrl, this.setImgResult)\r\n    }\r\n\r\n    testImage = (url, callback, timeout = 5000) => {\r\n\r\n        var timedOut = false, timer;\r\n        var img = new Image();\r\n        img.onerror = img.onabort = function () {\r\n            if (!timedOut) {\r\n                clearTimeout(timer);\r\n                callback(url, \"error\");\r\n            }\r\n        };\r\n        img.onload = function () {\r\n            if (!timedOut) {\r\n                clearTimeout(timer);\r\n                callback(url, \"success\");\r\n            }\r\n        };\r\n        img.src = url;\r\n        timer = setTimeout(function () {\r\n            timedOut = true;\r\n            // reset .src to invalid URL so it stops previous\r\n            // loading, but doesn't trigger new load\r\n            img.src = \"//!!!!/test.jpg\";\r\n            callback(url, \"timeout\");\r\n        }, timeout);\r\n    }\r\n\r\n    \r\n    getInitials(name) {\r\n        if (!name) return\r\n        const newName = name.split(' ')\r\n        const firstLetter = newName[0].charAt(0).toUpperCase()\r\n        let secondLetter = ''\r\n        if (newName.length > 1) {\r\n            secondLetter = newName[1].charAt(0).toUpperCase()\r\n        }\r\n        const initials = firstLetter + secondLetter\r\n        return initials\r\n    }\r\n\r\n    setImgResult = (url, res) => {\r\n        if (res === 'success') this.setState({ imgUrl: url })\r\n    }\r\n\r\n    getStyle = () => {\r\n        if (this.state.imgUrl) return { backgroundImage: `url(${this.props.imgUrl})` }\r\n        return {}\r\n    }\r\n\r\n    getName = () => {\r\n        if (this.props.name) return this.props.name\r\n        return ''\r\n    }\r\n\r\n    render() {\r\n        let _className = \"member-preview\" + (this.props.showBig ? \" member-preview-big\" : \"\")\r\n\r\n        return (\r\n            <Tooltip title={this.getName()}>\r\n                <div className={_className} style={this.getStyle()}>\r\n                    {(this.state.imgUrl) ? <React.Fragment /> : this.getInitials(this.props.name)}\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CardMenu } from './CardMenu'\r\nimport { CardPreviewDueDate } from './CardPreviewDueDate';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { CardLabels } from './CardLabels'\r\nimport { toggleFullLabels } from '../../store/actions/board-actions.js';\r\nimport { MemberPreview } from '../BoardHeader/MemberPreview';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport AttachFileOutlinedIcon from '@material-ui/icons/AttachFileOutlined';\r\nimport SubjectOutlinedIcon from '@material-ui/icons/SubjectOutlined';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\n\r\n\r\nclass _CardPreview extends Component {\r\n    state = {\r\n        isEditing: false\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    componentDidMount = () => {\r\n        console.log('des', this.props.card.attachments);\r\n\r\n    }\r\n    getCardPreviewAttachments = () => {\r\n        const cardAtt = this.props.card.attachments\r\n        if (!cardAtt || !Object.keys(cardAtt) || !cardAtt.length) return null\r\n        return <div key=\"0\" className=\"card-preview-attr\"><AttachFileOutlinedIcon style={{ fontSize: 16 }} /></div>\r\n    }\r\n\r\n    getCardPreviewHoldDesc = () => {\r\n        const cardDesc = this.props.card.description\r\n        if (!cardDesc || !Object.keys(cardDesc)) return null\r\n        return <div key=\"1\" className=\"card-preview-attr\"><SubjectOutlinedIcon style={{ fontSize: 16 }} /></div>\r\n    }\r\n\r\n    getCardPreviewComments = () => {\r\n        let activities = this.props.board.activities\r\n        if (!activities) return null\r\n        let cardComm = activities.filter(activity => activity.card.id === this.props.card.id)\r\n        cardComm = cardComm.filter(activity => {\r\n            if (activity.commentTxt) return activity\r\n            return null\r\n        })\r\n        if (!cardComm || !cardComm.length) return null\r\n\r\n        return <div key=\"3\" className=\"card-preview-attr\"><ChatBubbleOutlineRoundedIcon style={{ fontSize: 16 }} /> {cardComm.length}</div>\r\n    }\r\n\r\n    getCardPreviewChecklist = () => {\r\n        const checklists = this.props.card.checklists\r\n        if (!checklists || !checklists.length) return null\r\n\r\n        let doneTodos = 0\r\n        let totalTodos = 0\r\n\r\n        let doneClass = ''\r\n\r\n        checklists.forEach(checklist => {\r\n            checklist.todos.forEach(todo => {\r\n                if (todo.isDone) {\r\n                    doneTodos += 1\r\n                }\r\n                totalTodos += 1\r\n            })\r\n        })\r\n\r\n        if (!totalTodos) return null\r\n        if (doneTodos === totalTodos) {\r\n            doneClass = \" card-preview-checklist-counter-done\"\r\n        }\r\n        return <div key=\"2\" className={`card-preview-attr card-preview-checklist-counter${doneClass}`}><CheckBoxOutlinedIcon style={{ fontSize: 16 }} /> <span>{doneTodos}/{totalTodos}</span> </div>\r\n    }\r\n\r\n    getCardPreviewMembers = () => {\r\n        const cardMembers = this.props.card.members\r\n        if (!cardMembers || !cardMembers.length) return <React.Fragment />\r\n\r\n        const cardMembersEl = cardMembers.map((member, idx) => {\r\n            return <MemberPreview key={idx} name={member.fullName} imgUrl={member.imgUrl} />\r\n        })\r\n\r\n        return <div className=\"card-preview-members\">{cardMembersEl}</div>\r\n    }\r\n\r\n    getCardPreviewAttrs = () => {\r\n        // test all attributes\r\n        const attrs = [\r\n            this.getCardPreviewAttachments(),\r\n            this.getCardPreviewHoldDesc(),\r\n            this.getCardPreviewChecklist(),\r\n            this.getCardPreviewComments()\r\n        ]\r\n        // if at least one of them is true OR there are members assing to this card - render the card-preview-attrs div\r\n        if (this.getCardPreviewMembers() || !attrs.every(item => !item)) {\r\n            return (<div className=\"card-preview-attrs\">\r\n                {attrs.map((att, idx) => {\r\n                    if (att) return att\r\n                    return <React.Fragment key={idx} />\r\n                })}\r\n            </div>)\r\n        }\r\n    }\r\n\r\n\r\n    onDetails = (ev) => {\r\n        this.props.history.push(`/board/${this.props.board._id}/card/${this.props.card.id}`)\r\n    }\r\n\r\n    onOpenCardActions = (ev) => {\r\n        ev.stopPropagation()\r\n        this.onSetEditing()\r\n    }\r\n\r\n    onToggleLabels = (ev) => {\r\n        ev.stopPropagation()\r\n        return this.props.toggleFullLabels()\r\n    }\r\n\r\n    onSetEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    onSetNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    getCardCover = () => {\r\n\r\n        const cardCover = this.props.card.cover\r\n        if (!cardCover) return <React.Fragment />\r\n        if (!cardCover.src) return (\r\n            // if there is no src - this is a color\r\n            <div className=\"card-preview-cover-color\" style={{backgroundColor:cardCover.color}} />\r\n        )\r\n        return (\r\n            <div className=\"card-preview-cover-image\" style={{backgroundImage:`url(${cardCover.src})`}} /> \r\n        )\r\n    }\r\n\r\n    render() {\r\n        const card = this.props.card\r\n        const strStyle=\"url(\"+card.attachments+\")\"\r\n\r\n        const cardAttachStyle = {\r\n            \"background-image\": strStyle,\r\n        }\r\n\r\n        return (\r\n            <Draggable\r\n                draggableId={this.props.card.id}\r\n                index={this.props.index}>\r\n                {(provided) => (\r\n                    <section className=\"card-preview\"\r\n                        onClick={this.onDetails}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"attach-div\">\r\n                            <div className=\"card-preview-start\">\r\n                            {this.getCardCover()}\r\n                            {card.attachments && <img className=\"img-attach\" style={cardAttachStyle}/>}\r\n                                <CardLabels onClickLabel={this.onToggleLabels}\r\n                                    isFull={this.props.fullLabel}\r\n                                    cardLabels={card.labels}\r\n                                    boardLabels={this.props.board.labels}\r\n                                    preview={true}\r\n                                />\r\n                                <div className=\"card-preview-header\">\r\n                                    {card.title}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-preview-attrs\">\r\n                                <CardPreviewDueDate dueDate={card.dueDate} />\r\n                                {this.getCardPreviewAttrs()}\r\n                                {this.getCardPreviewMembers()}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"card-btn\" ref={this.ref} onClick={this.onOpenCardActions}>\r\n                            <EditOutlinedIcon fontSize=\"inherit\" />\r\n                            {(this.state.isEditing) ? <CardMenu anchorEl={this.ref} props={this.props} onClose={this.onSetNotEditing} /> : <React.Fragment />}\r\n                        </div>\r\n                        {provided.placeholder}\r\n                    </section>\r\n                )\r\n                }\r\n            </Draggable>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        fullLabel: state.boardModule.fullLabel\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleFullLabels\r\n};\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);","import React, { Component } from 'react'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport class NewItem extends Component {\r\n\r\n    state = {\r\n        isEditing: false,\r\n        txtValue: ''\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        const txtValue = ev.target.value\r\n        this.setState({ txtValue })\r\n    }\r\n\r\n    onKeyPress = (ev) => {\r\n        if (ev.key === 'Enter') this.onSubmit(ev)\r\n    }\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    getIsEditing = () => {\r\n        if (!this.state.isEditing) return (\r\n            <div className=\"new-item-btn\" onClick={this.setEditing}><AddIcon style={{ fontSize: \"20px\" }} />{this.props.addItemTxt}</div>\r\n        )\r\n\r\n        return (\r\n            <div className=\"new-item-form\">\r\n                <form\r\n                    onKeyDown={this.onKeyPress}\r\n                    onBlur={this.setNotEditing}\r\n                    onSubmit={this.onSubmit} >\r\n                    <textarea\r\n                    id=\"add-new-card\"\r\n                        placeholder={this.props.placeHolderTxt}\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        value={this.state.txtValue} />\r\n                    <div className=\"save-btn-container\">\r\n                        <button\r\n                            className=\"save-btn\"\r\n                            onMouseDown={this.onSubmit}>\r\n                            {this.props.addBtnTxt}\r\n                        </button>\r\n                        <CloseIcon className=\"close\" onClick={this.setNotEditing} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.txtValue) return\r\n        await this.props.onAdd(this.state.txtValue)\r\n        const isEditing = false\r\n        const txtValue = ''\r\n        this.setState({ isEditing, txtValue })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ border: \"0px\" }} className=\"new-item-container\">\r\n                {this.getIsEditing()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {onRemoveGroup} from '../../store/actions/board-actions.js'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nexport class _GroupMenu extends Component {\r\n\r\n    addCard = (ev) => {\r\n        // currently adding without moving to focus to new card\r\n        // need to focus on \"NewItem\" and set its state with the help of parent element (same parent)\r\n        ev.stopPropagation()\r\n        this.props.onAdd('New Card..')\r\n    }\r\n\r\n    removeGroup=(ev)=>{\r\n        ev.stopPropagation()\r\n        this.props.onRemoveGroup(this.props.board,this.props.groupId)\r\n        this.props.toggleMenu()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ClickAwayListener onClickAway={() => this.props.toggleMenu()}>\r\n                <div className=\"group-menu-container\">\r\n                    <div>List Actions</div>\r\n                    <div><hr /></div>\r\n                    <div onClick={this.addCard}  className=\"group-menu-item\">+ Add Card...</div>\r\n                    <div className=\"group-menu-item\" >Delete All Cards...</div>\r\n                    <div><hr /></div>\r\n                    <div className=\"group-menu-item\" onClick={this.removeGroup}>Delete This Group...</div>\r\n                </div>\r\n            </ClickAwayListener>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    onRemoveGroup,\r\n};\r\n\r\nexport const GroupMenu = connect(mapStateToProps, mapDispatchToProps)(_GroupMenu);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { CardPreview } from '../cards/CardPreview'\r\nimport { addCard, setNewGroupName } from '../../store/actions/board-actions.js'\r\nimport { NewItem } from '../NewItem'\r\nimport { GroupMenu } from '../groups/GroupMenu'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nclass _GroupPreview extends Component {\r\n    state = {\r\n        currGroupName: '',\r\n        currGroupId: null,\r\n        isMenuShown: false,\r\n        isChangeGroupShown: false\r\n    }\r\n\r\n    onAddCard = (txt) => {\r\n        console.log('group preview',this.props.group);\r\n        return this.props.addCard(this.props.board, txt, this.props.group.id)\r\n    }\r\n\r\n    getAddItemTxt = (txt) => {\r\n        if (this.props.group.cards.length) return 'Add another card'\r\n        return 'Add a card'\r\n    }\r\n\r\n    handleChangeGroupName = (ev) => {\r\n        this.setState({ currGroupName: ev.target.value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { currGroupId, currGroupName } = this.state\r\n        this.props.setNewGroupName(currGroupId, currGroupName, this.props.board)\r\n        this.setState({ isChangeGroupShown: false })\r\n    }\r\n\r\n    toggleMenu = (ev = null) => {\r\n        if (ev) ev.stopPropagation()\r\n        const isShown = !this.state.isMenuShown\r\n        this.setState({ isMenuShown: isShown })\r\n    }\r\n\r\n    onKeyPress = (ev) => {\r\n        if (ev === 'Enter') {\r\n            this.closeChangeGroupName(ev)\r\n        }\r\n    }\r\n\r\n    openHeadrEdit = (ev = null) => {\r\n        if (ev) ev.stopPropagation()\r\n        this.setState({ isChangeGroupShown: true })\r\n    }\r\n\r\n    closeChangeGroupName = (ev) => {\r\n        this.setState({ isChangeGroupShown: false })\r\n        this.onSubmit(ev)\r\n    }\r\n\r\n    onOpenChangeGroupName = (id, groupName) => {\r\n        this.setState({ currGroupId: id, currGroupName: groupName, isChangeGroupShown: true })\r\n    }\r\n    render() {\r\n        const group = this.props.group\r\n\r\n        return (\r\n            <Draggable draggableId={group.id} index={this.props.index}>\r\n                {(provided) => (\r\n                    <section\r\n                        className=\"card-list\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}>\r\n                        <div className=\"group-preview-header\" {...provided.dragHandleProps} >\r\n                            {!this.state.isChangeGroupShown\r\n                                && <div onClick={() =>\r\n                                    this.onOpenChangeGroupName(group.id, group.title)}>{group.title}</div>}\r\n                            {(this.state.isChangeGroupShown) ?\r\n                                <ClickAwayListener onClickAway={this.closeChangeGroupName}>\r\n                                    <form onSubmit={this.onSubmit} className=\"change-group-name\">\r\n                                        <input className=\"change-group-name-input\"\r\n                                            type=\"text\"\r\n                                            name=\"group-name\"\r\n                                            onKeyPress={this.onKeyPress}\r\n                                            onChange={this.handleChangeGroupName}\r\n                                            defaultValue={group.title}\r\n                                            autoFocus spellCheck=\"false\" autoComplete=\"off\"\r\n                                            onFocus={ev => ev.target.select()} />\r\n                                    </form>\r\n                                </ClickAwayListener> : ''}\r\n                            <span onClick={this.toggleMenu} className=\"list-header-extras material-icons dots-icon\">more_horiz</span>\r\n                            {this.state.isMenuShown\r\n                                && <GroupMenu\r\n                                    toggleMenu={this.toggleMenu}\r\n                                    groupId={group.id}\r\n                                    onAdd={this.onAddCard} />}\r\n                        </div>\r\n  \r\n                        <Droppable droppableId={group.id} type=\"card\">\r\n                            {(provided) => (\r\n                                <div className=\"cards-content-wrapper\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}>\r\n                                    {group.cards.map((card, index) => {\r\n                                        if (!card.archivedAt) {\r\n                                            return <CardPreview key={card.id} card={card} index={index} history={this.props.history} />\r\n                                        }\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                        <div className=\"new-card-btn-container\" id=\"add-btn\">\r\n                            <NewItem addItemTxt={this.getAddItemTxt()} placeHolderTxt='Add a card title..' addBtnTxt=\"Add Card\" onAdd={this.onAddCard} />\r\n                        </div>\r\n                    </section>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addCard,\r\n    setNewGroupName\r\n};\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview);","import React, { Component } from 'react'\r\nimport { AddNewGroup } from './AddNewGroup';\r\nimport { GroupPreview } from \"./GroupPreview\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\n\r\n\r\n\r\nexport class GroupList extends Component {\r\n    state = {\r\n        isNewGroupShown: false,\r\n        groups: null,\r\n    }\r\n\r\n    closeNewGroup = () => {\r\n        this.setState({ isNewGroupShown: false })\r\n    }\r\n\r\n    render() {\r\n        const { groups, onAddGroup } = this.props\r\n        if (!groups) return <h1>Loading...</h1>\r\n\r\n        return (\r\n            <section className=\"group-list flex\">\r\n                <Droppable droppableId=\"droppableGroupId\" direction=\"horizontal\" type=\"group\">\r\n                    {(provided) => (\r\n                        <div className=\"flex cards\"\r\n                        {...provided.droppableProps}\r\n                            ref={provided.innerRef}>\r\n\r\n                            {groups.map((group, index) =>\r\n                                <GroupPreview\r\n                                    key={group.id}\r\n                                    id={group.id}\r\n                                    group={group}\r\n                                    index={index}\r\n                                    history={this.props.history} />)}\r\n                            {/* whitespace that stays when we drag something out */}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )\r\n                    }\r\n                </Droppable>\r\n                <div className=\"new-group\" >\r\n                    {!this.state.isNewGroupShown &&\r\n                        <div className=\"add-new-group-text btn\"\r\n                            onClick={() => this.setState({ isNewGroupShown: true })}>\r\n                            <span className=\"material-icons\">add</span>Add another list</div>}\r\n\r\n                    {this.state.isNewGroupShown &&\r\n                        <AddNewGroup\r\n                            // groupId={groupId}\r\n                            closeNewGroup={this.closeNewGroup} />}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport SubjectIcon from '@material-ui/icons/Subject'\r\nexport class CardDescription extends Component {\r\n\r\n    state = {\r\n        description: '',\r\n        isEditing: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setDescriptionFromProps()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.description !== this.props.description) {\r\n            this.setDescriptionFromProps()\r\n        }\r\n    }\r\n\r\n    setDescriptionFromProps = () => {\r\n        let description = this.props.description\r\n        if (!description) description = ''\r\n        this.setState({ description })\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        const description = ev.target.value\r\n        this.setState({ description })\r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    onSave = () => {\r\n        this.props.onUpdateDesc(this.state.description)\r\n        this.setNotEditing()\r\n    }\r\n\r\n    getDescriptionTxt = () => {\r\n        if (!this.state.description) return 'Add a more detailed description…'\r\n        return this.state.description\r\n    }\r\n    ///\r\n\r\n    //description-text-box\r\n    ///\r\n    getIsEditing = () => {\r\n        if (!this.state.isEditing) return (\r\n            <pre className=\"description-text-box\" onClick={this.setEditing}>{this.getDescriptionTxt()}</pre>\r\n        )\r\n        return (\r\n            <div className=\"flex column\">\r\n                <textarea value={this.state.description} autoFocus onChange={this.onChange}\r\n                    onBlur={this.onSave} placeholder=\"Enter a more details description here...\"\r\n                    className=\"modal-desc-textarea\" />\r\n                <button onClick={this.onSave}>Save</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // \r\n    render() {\r\n        // if (!this.state.isReady) return <div>Loading...</div>\r\n        return (\r\n            <div className=\"modal-description flex\">\r\n                <SubjectIcon />\r\n                <div className=\"description-txt flex column\">\r\n                    <h3 className=\"description-title\">Description</h3>\r\n                    {this.getIsEditing()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Accordion, AccordionDetails, AccordionSummary, Button } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport class CardAddComment extends Component {\r\n\r\n    state = {\r\n        isEditing: false,\r\n        txtValue: ''\r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n    onChange = (ev) => {\r\n        this.setState({ txtValue: ev.target.value })\r\n    }\r\n\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (this.state.txtValue) {\r\n            this.props.onAddComment(this.state.txtValue)\r\n            this.setNotEditing()\r\n            this.setState({txtValue:''})\r\n        }\r\n    }\r\n\r\n    onBlur = () => {\r\n        if (!this.state.txtValue) return this.setNotEditing()\r\n        \r\n    }\r\n\r\n    onSave = (ev) => {\r\n        this.onSubmit(ev)\r\n    }\r\n\r\n    getNewCommentDisplay = () => {\r\n        if (this.state.isEditing) return (\r\n            <div className=\"add-comment-editing-container\">\r\n                <form onBlur={this.onBlur} onSubmit={this.onSubmit}>\r\n                    <input className=\"add-comment-input\" type=\"text\" placeholer=\"Write a comment...\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                </form>\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"add-comment-editing-closed\">Write a comment...</div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editing-section-container\" >\r\n            <Accordion expanded={this.state.isEditing} onClick={this.setEditing}  classes={{expanded:'editing-container-expanded', root:'editing-container-collapsed'}}>\r\n                <AccordionSummary\r\n                          aria-controls=\"panel1a-content\"\r\n                          id=\"panel1a-header\"\r\n                        >\r\n                {this.getNewCommentDisplay()}\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n          <div>\r\n          <button className=\"save-btn\" disabled={!this.state.txtValue.length} onClick={this.onSave}>Add Comment</button>\r\n          </div>\r\n        </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as timeago from 'timeago.js';\r\nimport { MemberPreview } from '../../BoardHeader/MemberPreview';\r\n\r\nexport function ActivityLog({ boardId, displayMode, activities }) {\r\n    if (!activities) return <div><CircularProgress /></div>;\r\n    if (activities && activities.length > 15) activities = activities.slice(0, 14);\r\n\r\n\r\n\r\n    return (\r\n        <ul className=\"activity-list clean-list\">\r\n            {activities.map(activity => {\r\n                const byMember = activity.byMember\r\n\r\n                return <li className=\"whole-activity flex align-center\" key={activity.id}>\r\n                    {console.log(byMember)}\r\n                    {(displayMode !== 'user') ? <MemberPreview name={(byMember && byMember.fullName) ? byMember.fullName : \"Guest\"} imgUrl={byMember ? byMember.imgUrl : \"\"} /> : <React.Fragment />}\r\n                    <pre className=\"activity-details\">\r\n                        <div className=\"flex activity-text-box-text\">\r\n                            {(displayMode === 'user') ? <React.Fragment /> : (boardId) ? (<Link to={`/board/${boardId}`}>{byMember.fullName ? byMember.fullName : \"Guest\" + \" \"}</Link>) : `${byMember.fullName ? byMember.fullName : 'Guest'} `}\r\n                            <span>{activity.commentTxt ? 'commented:' : '' + activity.txt}</span>\r\n                            {activity.commentTxt && <div>\r\n                                {activity.commentTxt}\r\n                            </div>}\r\n                            {displayMode !== 'card' && <span>\r\n                                {'in '}\r\n                                {(boardId) ? <Link to={`/board/${boardId}/${activity.card.id}/`}>\r\n                                    {activity.card.title}\r\n                                </Link> : `${activity.card.title}`}\r\n                            </span>}\r\n                        </div>\r\n                        <span>{timeago.format(activity.createdAt)}</span>\r\n                    </pre>\r\n                </li>\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class CardTitle extends Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        isEditing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const txt=this.props.titleTxt\r\n        this.setState({txt})\r\n    }\r\n\r\n    onChangeText = (ev) => {\r\n        const txt = ev.target.value\r\n        this.setState({txt})\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.txt) return\r\n        this.setNotEditing()\r\n        this.props.onUpdate(this.state.txt)\r\n        \r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    getIsEditing = () => {\r\n        if (this.state.isEditing) return (\r\n            <form onBlur={this.setNotEditing} onSubmit={this.onSubmit}>\r\n                <input name=\"header\" type=\"text\" autoFocus value={this.state.txt} onChange={this.onChangeText}/>\r\n            </form>\r\n        )\r\n        return <div onClick={this.setEditing}><h2>{this.state.txt}</h2></div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getIsEditing()}\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport { Popover, TextField } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n// import { DatePicker } from '@material-ui/pickers'\r\nimport { CardPreviewDueDate } from './CardPreviewDueDate';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nexport class CardDueDateSetter extends Component {\r\n\r\n    state = {\r\n        date: null,\r\n        isPopperOpen: false,\r\n        anchor: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.anchor = React.createRef();\r\n        this.setState({ anchor: this.anchor })\r\n        this.setDefaultDate()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.dueDate !== this.props.dueDate) return this.setDefaultDate()\r\n    }\r\n\r\n    setDefaultDate = () => {\r\n        this.setState({ date: this.props.dueDate })\r\n    }\r\n    openModal = () => {\r\n        this.setState({ isPopperOpen: true })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isPopperOpen: false })\r\n    }\r\n\r\n    onSetDueDate = (ev) => {\r\n        const formDate = ev.target.value\r\n        const timestamp = new Date(formDate).getTime()\r\n        this.setState({ date: timestamp })\r\n    }\r\n\r\n    submitDueDate = () => {\r\n        this.props.onUpdateDueDate(this.state.date)\r\n    }\r\n\r\n    onRemoveDueDate = (ev) => {\r\n        this.setState({ date: null }, this.submitDueDate)\r\n        this.closeModal()\r\n    }\r\n\r\n    getDisplayDateBtn = () => {\r\n        if (!this.state.date || this.props.alwaysShowButton) return <button className=\"flex\" onClick={this.openModal} ref={this.anchor}><ScheduleIcon /><span className=\"sidebar-button-text\">Set Due Date</span></button>\r\n\r\n        return (\r\n            <div onClick={this.openModal} ref={this.anchor} className=\"set-due-date-expanded\">\r\n                <CardPreviewDueDate dueDate={this.state.date} displayTime={this.props.displayTime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    parseDate = () => {\r\n        let date = new Date(this.state.date)\r\n        if (!this.state.date) date = new Date(Date.now())\r\n        let year = date.getFullYear()\r\n        let month = (date.getMonth() + 1)\r\n        let day = date.getDate()\r\n        let hour = date.getHours()\r\n        let minute = date.getMinutes()\r\n        let timeArray = [year, month, day, hour, minute]\r\n        timeArray = timeArray.map(i => {\r\n            i = i.toString()\r\n            if (i.length === 1) i = `0${i}`\r\n            return i\r\n        })\r\n        const parsedDate = `${year}-${timeArray[1]}-${timeArray[2]}T${timeArray[3]}:${timeArray[4]}`\r\n        return parsedDate\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.anchor) return <React.Fragment />\r\n        return (\r\n            <>\r\n                {this.getDisplayDateBtn()}\r\n                {(!this.state.anchor.current) ? <React.Fragment /> :\r\n                    <Popover\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={this.state.isPopperOpen}\r\n                        anchorEl={this.state.anchor.current}\r\n                        onClose={this.closeModal}\r\n                        onBackdropClick={this.closeModal}\r\n                    >\r\n                        <form noValidate>\r\n                            <TextField\r\n                                onBlur={this.submitDueDate}\r\n                                onChange={this.onSetDueDate}\r\n                                id=\"datetime-local\"\r\n                                label=\"Set Due Date\"\r\n                                type=\"datetime-local\"\r\n                                value={this.parseDate()}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </form>\r\n                        <div className=\"remove-date-btn-container\">\r\n                            <button className=\"cancel-btn\" onClick={this.onRemoveDueDate}>Remove Due Date</button>\r\n                        </div>\r\n                    </Popover>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import { Button, Checkbox } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport { utils } from '../../services/utils-service'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nexport class CardChecklistTodo extends Component {\r\n\r\n    state = {\r\n        isDone: false,\r\n        isEditing: false,\r\n        txtValue: '',\r\n        isNew: false\r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    removeText = () => {\r\n        this.setState({ txtValue: '' })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.title !== this.props.title || prevProps.isDone !== this.props.isDone) this.updateTodo()\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isNew) this.setState({ isNew: true })\r\n        this.updateTodo()\r\n    }\r\n\r\n    getNewTodoDisplay = () => {\r\n        if (this.state.isEditing) {\r\n            return (\r\n                <form onBlur={this.setNotEditing} onSubmit={this.onSubmit}>\r\n                    <input className=\"checkbox-text-edit\" type=\"text\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                </form>\r\n            )\r\n        }\r\n        return (\r\n            <button className=\"flex checklist-add-todo\" onClick={this.setEditing}>\r\n                <AddIcon className=\"add-icon\" />\r\n                Add an item\r\n            </button>\r\n        )\r\n    }\r\n\r\n    getTodoClassName = () => {\r\n        const doneClass = (this.state.isDone) ? 'todo-done' : 'todo-not-done'\r\n        return `flex justify-space-between checklist-todo-title ${doneClass}`\r\n    }\r\n    getTextBox = () => {\r\n        if (this.state.isEditing) return (\r\n            <React.Fragment>\r\n                <form onBlur={this.setNotEditing} onSubmit={this.onSubmit}>\r\n                    <Checkbox checked={this.state.isDone} onChange={this.onCheck} className=\"checkbox-todo\" />\r\n                    <input className=\"checkbox-text-edit\" type=\"text\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                    <button className=\"save-btn\" type=\"submit\">Save</button>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                <div className={this.getTodoClassName()} onClick={this.setEditing}>\r\n                    <div>\r\n                        <Checkbox checked={this.state.isDone} onChange={this.onCheck} className=\"checkbox-todo\" />\r\n                        {this.state.txtValue}\r\n                    </div>\r\n                    <Button onClick={this.onRemove}>\r\n                        <DeleteOutlineOutlinedIcon className=\"trash-bin-icon\" />\r\n                    </Button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        this.updateChecklist()\r\n    }\r\n\r\n    updateTodo = () => {\r\n\r\n        const todo = this.props.todo\r\n        if (!todo) return\r\n        const txtValue = todo.title\r\n        const isDone = todo.isDone\r\n\r\n        this.setState({ isDone, txtValue })\r\n    }\r\n\r\n    onChange = (ev) => {\r\n\r\n        this.setState({ txtValue: ev.target.value })\r\n    }\r\n\r\n    onCheck = (ev) => {\r\n        let checkStatus = ev.target.checked\r\n        this.setState({ isDone: checkStatus }, () => {\r\n            this.updateChecklist()\r\n        })\r\n    }\r\n\r\n    getActivityTxt = () => {\r\n        let txt;\r\n        if (this.state.isDone) {\r\n            txt = `completed ${this.state.txtValue}`\r\n        } else {\r\n            txt = `marked ${this.state.txtValue} incomplete`\r\n        }\r\n        return txt\r\n    }\r\n    onRemove = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ txtValue: '' }, this.updateChecklist)\r\n    }\r\n\r\n    updateChecklist = () => {\r\n        let id;\r\n        if (this.props.todo) {\r\n            id = this.props.todo.id\r\n        } else {\r\n            id = utils.makeId()\r\n        }\r\n        const todo = {\r\n            id,\r\n            isDone: this.state.isDone,\r\n            title: this.state.txtValue\r\n        }\r\n\r\n        const activityTxt = this.getActivityTxt()\r\n        if (this.state.isNew) {\r\n            this.props.onUpdate(todo)\r\n            this.setState({ txtValue: '' })\r\n        } else {\r\n            this.props.onUpdate(todo, activityTxt)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.displayCompleted && this.state.isDone) return <React.Fragment />\r\n        return (\r\n            <div className=\"checklist-todo\">\r\n                {(this.state.isNew) ? this.getNewTodoDisplay() : this.getTextBox()}\r\n            </div>\r\n        )\r\n    }\r\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, LinearProgress } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport { CardChecklistTodo } from './CardChecklistTodo'\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\nexport class CardChecklist extends Component {\r\n\r\n    state = {\r\n        displayCompleted: true,\r\n        showDialog: false,\r\n        tasksCompleted: 0,\r\n        totalTasks: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTasksStatus()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.checklist !== prevProps.checklist) this.setTasksStatus()\r\n    }\r\n\r\n    setTasksStatus = () => {\r\n        let tasksCompleted = 0\r\n        let totalTasks = 0\r\n\r\n        this.props.checklist.todos.forEach(todo => {\r\n            if (todo.isDone) tasksCompleted += 1\r\n            totalTasks += 1\r\n        });\r\n\r\n        this.setState({ tasksCompleted, totalTasks })\r\n    }\r\n\r\n    toggleDisplayCompleted = () => {\r\n        if (this.state.displayCompleted) return this.setState({ displayCompleted: false })\r\n        return this.setState({ displayCompleted: true })\r\n    }\r\n\r\n    getDisplayCheckedBtn = () => {\r\n        if (!this.state.tasksCompleted) return <React.Fragment />\r\n        let btnContent;\r\n        if (this.state.displayCompleted) {\r\n            btnContent = 'Hide Completed Items'\r\n        } else {\r\n            btnContent = `Show Checked Items (${this.state.tasksCompleted})`\r\n        }\r\n\r\n        return (\r\n            <button onClick={this.toggleDisplayCompleted}>{btnContent}</button>\r\n        )\r\n    }\r\n\r\n    onRemoveChecklist = async () => {\r\n        const checklist = { ...this.props.checklist }\r\n        checklist.title = ''\r\n        let activityTxt = `removed ${this.props.checklist.title}`\r\n        this.props.onUpdate(checklist, activityTxt)\r\n        this.closeDialog()\r\n\r\n    }\r\n\r\n\r\n    openDialog = () => {\r\n        this.setState({ showDialog: true })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ showDialog: false })\r\n    }\r\n\r\n    getTotalTasks = (checklist) => {\r\n        return checklist.todos.length\r\n    }\r\n\r\n    getCompletedTasks = (checklist) => {\r\n        return checklist.todos.filter(checklistItem => checklistItem.isDone).length\r\n    }\r\n\r\n    getPercentCompleted = (checklist) => {\r\n        if (this.getTotalTasks(checklist) == 0) return 100\r\n        const percent = Math.round((this.getCompletedTasks(checklist) / this.getTotalTasks(checklist)) * 100)\r\n        return percent\r\n    }\r\n\r\n    onUpdateChecklist = (newTodo, activityTxt) => {\r\n        // take the updated todo and insert it into the list\r\n        let todos = [...this.props.checklist.todos]\r\n        // find the todo index\r\n        const todoIdx = todos.findIndex(todo => todo.id === newTodo.id)\r\n        // if new title is blank - remove todo\r\n        if (!newTodo.title) {\r\n            todos.splice(todoIdx, 1)\r\n        } else if (todoIdx < 0) { //if the index is less than 0 - this is a new item\r\n            todos.push(newTodo)\r\n        } else {\r\n            todos[todoIdx] = newTodo\r\n        }\r\n        const checklist = { ...this.props.checklist }\r\n        checklist.todos = todos\r\n        this.props.onUpdate(checklist, activityTxt)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"flex justify-space-between\">\r\n                    <div className=\"flex\">\r\n                        <CheckBoxOutlinedIcon />\r\n                        <h3>{this.props.checklist.title}</h3>\r\n                    </div>\r\n                    <div>\r\n                        {this.getDisplayCheckedBtn()}\r\n                        <button className=\"checklist-delete-button\" onClick={this.openDialog}>Delete</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>%{this.getPercentCompleted(this.props.checklist)}</div>\r\n                    <LinearProgress value={this.getPercentCompleted(this.props.checklist)} variant=\"determinate\" />\r\n                </div>\r\n                <main>\r\n                    {this.props.checklist.todos.map(todo => <CardChecklistTodo key={todo.id} displayCompleted={this.state.displayCompleted} todo={todo} onUpdate={this.onUpdateChecklist} />)}\r\n                    <CardChecklistTodo isNew={true} onUpdate={this.onUpdateChecklist} />\r\n                </main>\r\n                <Dialog onClose={this.closeDialog} open={this.state.showDialog}>\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Remove this checklist?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Deleting a checklist is permanent.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.closeDialog} color=\"primary\">\r\n                            Disagree\r\n                        </Button>\r\n                        <Button onClick={this.onRemoveChecklist} color=\"primary\" autoFocus>\r\n                            Agree\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { CardChecklist } from './CardChecklist'\r\n\r\nexport function CardChecklistContainer(props) {\r\n    if (!props.checklists || !props.checklists.length) return <React.Fragment/>\r\n    return (\r\n        <div className=\"checklists-container\">\r\n           {props.checklists.map(checklist => <CardChecklist key={checklist.id} checklist={checklist} addActivity={props.addActivity} onUpdate={props.onUpdate}/>)} \r\n        </div>\r\n    )\r\n}","import { Button } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport { utils } from '../../services/utils-service'\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\n\r\nexport class CardNewChecklist extends Component {\r\n\r\n    state = {\r\n        isEditing: false,\r\n        txtValue: ''\r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n    onChange = (ev) => {\r\n        this.setState({ txtValue: ev.target.value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.txtValue) return this.setNotEditing()\r\n        const checklist = {\r\n            id: utils.makeId(),\r\n            \"title\": this.state.txtValue,\r\n            \"todos\": []\r\n        }\r\n        // const activity =  this.props.addActivity(`added the checklist ${this.state.txtValue}`)\r\n        const activity = `added the checklist ${this.state.txtValue}`\r\n        this.props.onUpdate(checklist, activity)\r\n        this.setState({ txtValue: '' })\r\n        this.setNotEditing()\r\n    }\r\n\r\n\r\n    getNewChecklistDisplay = () => {\r\n        if (this.state.isEditing) return (\r\n            <form className=\"new-checklist-form\" onBlur={this.setNotEditing} onSubmit={this.onSubmit} >\r\n                <input className=\"new-checklist-text\" type=\"text\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                <button className=\"save-btn\" onMouseDown={this.onSubmit}>Save</button>\r\n            </form>\r\n        )\r\n        return (\r\n            <button className=\"flex\" onClick={this.setEditing}><CheckBoxOutlinedIcon /><span className=\"sidebar-button-text\">New Checklist</span></button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.getNewChecklistDisplay()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","export const storageService = {\r\n\tload,\r\n\tsave,\r\n\tclear\r\n}\r\n\r\nfunction load(key) {\r\n\treturn JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nfunction save(key, val) {\r\n\tlocalStorage.setItem(key, JSON.stringify(val));\r\n}\r\n\r\nfunction clear(key){\r\n\tlocalStorage.clear(key)\r\n}","\r\nimport { storageService } from './storage-service'\r\nimport { httpService } from './http-service'\r\n\r\nvar gUsers = [\r\n    {\r\n        _id: '1',\r\n        email: 'miri@gmail.com',\r\n        username: 'miri',\r\n        password: 'miri123',\r\n        imgUrl: 'img.png'\r\n    }\r\n]\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getUsers,\r\n    // getById,\r\n    remove,\r\n    update,\r\n    // increaseScore\r\n}\r\n\r\n\r\nasync function login(credentials) {\r\n    try {\r\n        //await httpService.post('auth/login', credentials)\r\n        const user = gUsers.find(user => user.username === credentials.username)\r\n        if (user) return _saveLocalUser(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function signup(userInfo) {\r\n    try {\r\n        const user = {}//await httpService.post('auth/signup', userInfo)\r\n        return _saveLocalUser(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        sessionStorage.clear()\r\n        return //await httpService.post('auth/logout')\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser') || 'null')\r\n}\r\n\r\nasync function getUsers() {\r\n    return gUsers;\r\n    return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nasync function getById(userId) {\r\n    return gUsers.find(user => user._id === userId)\r\n\r\n    return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nasync function remove(userId) {\r\n    gUsers = gUsers.filter(user => user._id !== userId)\r\n\r\n    return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    let userIndex = gUsers.indexOf(_user => _user._id !== user.id);\r\n    gUsers.splice(userIndex, 1, user);\r\n\r\n    return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}","import { userService } from '../../services/user-service.js'\r\n\r\nexport function onLogin(credentials) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('UserActions: err in login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadAllUsers(){\r\n    return async dispatch=>{\r\n        const users = await userService.getUsers()\r\n        dispatch({ type: 'SET_USERS', users })\r\n    }\r\n}\r\n\r\nexport function onSignup(userInfo) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userInfo)\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('UserActions: err in signup', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.logout()\r\n            dispatch({ type: 'SET_USER', user: null })\r\n        } catch (err) {\r\n            console.log('UserActions: err in logout', err)\r\n        }\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { MemberPreview } from './MemberPreview'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { addToMembers, removeMember, addCardMember, removeCardMember } from '../../store/actions/board-actions.js';\r\nimport { loadAllUsers } from '../../store/actions/user-actions.js';\r\n\r\n\r\nexport class _AddMemberModal extends Component {\r\n\r\n    state = {\r\n        searchLetters: ''\r\n    }\r\n\r\n    toggleUser=(user)=>{\r\n        // Not a member\r\n        if (!this.props.members.find(member => member._id === user._id)) {\r\n            if (!this.props.card) {\r\n                this.props.addToMembers(user, this.props.board)\r\n            }\r\n            else {\r\n                this.props.addCardMember(this.props.board, this.props.card, user)\r\n                this.props.onAddCardMember(user)\r\n            }\r\n        } else {\r\n            \r\n            if (!this.props.card) {\r\n                this.props.removeMember(user._id, this.props.board)\r\n            }\r\n            else {\r\n                this.props.removeCardMember(this.props.board, this.props.card, user._id)\r\n                this.props.onRemoveCardMember(user)\r\n            }   \r\n        }\r\n    }\r\n \r\n    getMembers=(id)=>{\r\n        return this.props.members.find(member => {\r\n            if (member._id === id) return true\r\n            else return false\r\n        })\r\n    }\r\n\r\n    handleChange = ({ target }) =>{\r\n        const search = target.value\r\n        this.setState({ searchLetters: search })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { members, allUsers } = this.props\r\n        \r\n        if(!members) return <div>loading</div>\r\n        return (\r\n            <ClickAwayListener onClickAway={this.props.onCloseModal}>\r\n                <div className=\"add-member-modal\">\r\n                    <h3>Members</h3>\r\n                    <input type=\"search\" onChange={this.handleChange} name=\"search-member\" id=\"\" autoCorrect=\"off\" autoComplete=\"off\"/>\r\n                    <div className=\"add-members-container\">\r\n                        {allUsers.filter(user => \r\n                        !this.state.searchLetters ? true : user.fullName.includes(this.state.searchLetters)).map(user => {\r\n                                return <div key={user._id} className=\"member-container\" onClick={() => this.toggleUser(user)}>\r\n                                    <MemberPreview name={user.fullName} /> \r\n                                    <p>{user.fullName}</p>\r\n                                    {this.getMembers(user._id) && <div><CheckIcon /></div>}\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ClickAwayListener>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        allUsers: state.userModule.users\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadAllUsers,\r\n    addToMembers,\r\n    addCardMember,\r\n    removeMember,\r\n    removeCardMember\r\n};\r\n\r\nexport const AddMemberModal = connect(mapStateToProps, mapDispatchToProps)(_AddMemberModal);\r\n","import React, { Component } from 'react'\r\nimport { MemberPreview } from './MemberPreview';\r\nimport { AddMemberModal } from './AddMemberModal';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\n\r\nexport class MemberList extends Component {\r\n\r\n    state = {\r\n        isModalShown: false\r\n    }\r\n\r\n    onShowModal = () => {\r\n        this.setState({ isModalShown: true })\r\n    }\r\n    \r\n    onCloseModal = () => {        \r\n        this.setState({ isModalShown: false })\r\n    }\r\n\r\n    renderMemberList = (members) => { \r\n        return (<div className=\"members-container\">\r\n                    <div className={\"member-preview add-member-btn\" + (this.props.showBig ? \" member-preview-big\" : \"\")} onClick={() => this.onShowModal()}><AddIcon className=\"members-list-add-button\"/></div>\r\n                    <div className=\"add-member-modal-container\">\r\n                        { this.state.isModalShown && <AddMemberModal onCloseModal={this.onCloseModal} allExistingUsers={this.props.allUsers} card={this.props.card} members={this.props.members}/>}\r\n                    </div>\r\n                    {members.map(member => {\r\n                        return <MemberPreview key={member._id}\r\n                            name={member.fullName} \r\n                            imgUrl={member.imgUrl}\r\n                            showBig={this.props.showBig}/>\r\n                    })}\r\n                </div>)}\r\n\r\n    renderCardDetailsMemberList = (members) => {\r\n        return (\r\n        <>\r\n            {this.state.isModalShown && <AddMemberModal onCloseModal={this.onCloseModal} allExistingUsers={this.props.allUsers} card={this.props.card} members={this.props.members} onAddCardMember={this.props.onAddCardMember} onRemoveCardMember={this.props.onRemoveCardMember}/>}\r\n            <button class=\"flex sidebar-button\" onClick={() => this.onShowModal()}>\r\n            <PeopleAltIcon/>\r\n            <span class=\"sidebar-button-text\">Members</span>\r\n            </button>\r\n        </>)\r\n    }\r\n    \r\n    render(){\r\n        const members = this.props.card ? this.props.card.members : this.props.members\r\n        if (!members) return <h4>Loading...</h4>\r\n        return !this.props.card ? this.renderMemberList(members) : this.renderCardDetailsMemberList(members)\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { CardDueDateSetter } from \"../CardDueDateSetter\"\r\nimport { CardNewChecklist } from \"../CardNewChecklist\"\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined'\r\nimport { MemberList } from '../../BoardHeader/MemberList'\r\nimport WebAssetOutlinedIcon from '@material-ui/icons/WebAssetOutlined'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile'\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nexport function CardSidebar(props) {\r\n    return (\r\n        <div className=\"card-sidebar flex column\">\r\n            <h3>Add to card</h3>\r\n            <MemberList members={props.card.members} onAddCardMember={props.onAddCardMember} onRemoveCardMember={props.onRemoveCardMember} allUsers={props.allUsers} card={props.card} showBig={true} />\r\n            <button className=\"flex sidebar-button\" onClick={props.toggleLabelPalette}><LabelOutlinedIcon /><span className=\"sidebar-button-text\">Labels</span></button>\r\n            <CardNewChecklist addActivity={props.addActivity} onUpdate={props.onUpdateChecklists} />\r\n            <CardDueDateSetter dueDate={props.dueDate} onUpdateDueDate={props.onUpdateDueDate} alwaysShowButton={true} />\r\n            {(props.isUploading) ? <button disabled><CircularProgress size='14px' /></button> : <button className=\"flex\" onClick={props.toggleUploadDropzone}><AttachFileIcon /><span>Attachment</span></button>}\r\n            { !props.card.cover && <button className=\"sidebar-button\" ref={props.anchorRef} onClick={props.toggleCoverSelector}><WebAssetOutlinedIcon /><span>Cover</span></button>}\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport * as timeago from 'timeago.js';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nexport class CardDetailsAttachment extends Component {\r\n    state = {\r\n        isEditing: false,\r\n        att: null,\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateAttFromProps()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.attachment !== prevProps.attachment) {\r\n            this.updateAttFromProps()\r\n        }\r\n        if (this.state.att !== prevState.att) {\r\n\r\n        }\r\n    }\r\n\r\n    updateAttFromProps = () => {\r\n        const att = { ...this.props.attachment }\r\n        const title = this.props.attachment.title\r\n\r\n        this.setState({ att, title })\r\n    }\r\n\r\n    setEditing = (bool) => {\r\n        if (bool) return this.setState({ isEditing: true })\r\n        return this.setState({ isEditing: false })\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        this.setState({ title: ev.target.value })\r\n    }\r\n\r\n    onRemove = (ev) => {\r\n        // if the update function receives a blank title - it removes the item\r\n        this.setState({ title: '' }, () => {\r\n            this.updateCard().then(() => {\r\n                this.setState({ att: null })\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        this.updateCard()\r\n    }\r\n\r\n    updateCard = () => {\r\n        return new Promise(resolve => {\r\n\r\n            const att = { ...this.state.att }\r\n            att.title = this.state.title\r\n            // console.log()\r\n            this.props.onUpdate(att)\r\n            this.setEditing(false)\r\n            resolve()\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const att = this.state.att\r\n        if (!att) return <React.Fragment />\r\n        return (\r\n            <div className=\"card-attachment flex\">\r\n                <div className=\"att-image\" style={{ backgroundImage: `url(${att.src})` }} />\r\n                <div className=\"att-details-container\">\r\n                    <div className=\"att-title\">\r\n                        {(this.state.isEditing) ?\r\n                            <form onSubmit={this.onSubmit} onBlur={() => { this.setEditing(false) }}><input autoFocus onChange={this.onChange} type=\"text\" value={this.state.title} required /></form>\r\n                            : <h5 onClick={() => { this.setEditing(true) }}>{this.state.title}</h5>}\r\n                    </div>\r\n                    <div className=\"att-date-added\">\r\n                        {timeago.format(att.createdAt)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"att-remove\">\r\n                    <IconButton onClick={this.onRemove}>\r\n                        <DeleteOutlineOutlinedIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { CardDetailsAttachment } from './CardDetailsAttachment'\r\n\r\nexport function CardImagesList(props) {\r\n    console.log(props)\r\n    \r\n    if (!props.attachments) return <React.Fragment />\r\n    return (\r\n        <div className=\"card-attachments-container\">\r\n            {props.attachments.map(att => <CardDetailsAttachment key={att.id} onUpdate={props.onUpdate} attachment={att} />)}\r\n        </div>\r\n    )\r\n}","export const cloudService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(file) {\r\n    const CLOUD_NAME = \"dahthio8n\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n    // const file = ev.target.files[0]\r\n    console.log(file)\r\n    formData.append('file', file)\r\n    formData.append('upload_preset', 'ml_default');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        console.log(data)\r\n        return data.secure_url\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { cloudService } from '../../services/cloudService'\r\nimport { DropzoneDialog } from 'material-ui-dropzone'\r\n\r\nexport class CardImgUpload extends Component {\r\n\r\n    state = {\r\n        item: null\r\n    }\r\n\r\n    uploadImg = async (file) => {\r\n\r\n        await this.props.setUploading()\r\n        const imgUrl = await cloudService.uploadImg(file)\r\n        this.setState({ item: imgUrl }, this.submitImage)\r\n\r\n    }\r\n\r\n\r\n    submitImage = async () => {\r\n        // if no item - do nothing\r\n        if (!this.state.item) return\r\n        // else - wait for the image to be added to the array\r\n        await this.props.onAddImage(this.state.item)\r\n        // set the state back to null\r\n        this.setState({ item: null })\r\n    }\r\n    handleChange(files) {\r\n        this.uploadImg(files[0])\r\n    }\r\n    render() {\r\n        return (\r\n            <DropzoneDialog\r\n                acceptedFiles={['image/*']}\r\n                cancelButtonText={\"cancel\"}\r\n                submitButtonText={\"submit\"}\r\n                maxFileSize={512000}\r\n                open={this.props.isOpen}\r\n                onClose={() => this.props.toggleOpen()}\r\n                onSave={(files) => {\r\n                    this.handleChange(files)\r\n                    this.props.toggleOpen();\r\n                }}\r\n                showPreviews={true}\r\n                showFileNamesInPreview={false}\r\n            />\r\n        )\r\n    }\r\n}","import { Popover } from '@material-ui/core'\r\nimport { CloseOutlined } from '@material-ui/icons'\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport class CoverSelector extends Component {\r\n\r\n    state = {\r\n        cover: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setCoverFromProps()\r\n    }\r\n\r\n    setCoverFromProps = () => {\r\n        let cover = this.props.card.cover\r\n        if (!cover) cover = { id: null, value: null }\r\n        this.setState({ cover })\r\n    }\r\n\r\n    colors = [\r\n        { id: 101, value: '#cd9fcb' },\r\n        { id: 102, value: '#a7ead1' },\r\n        { id: 103, value: '#ffb787' },\r\n        { id: 104, value: '#f6c1d2' },\r\n        { id: 105, value: '#fd7967' },\r\n        { id: 106, value: '#8f79a8' },\r\n        { id: 107, value: '#b5daf6' },\r\n        { id: 108, value: '#a7a7a7' },\r\n        { id: 109, value: '#ab8597' },\r\n    ]\r\n\r\n    onSelectCover = async (value) => {\r\n\r\n        let cover = {\r\n            id: value.id,\r\n            color: value.value,\r\n            src: value.src\r\n        }\r\n\r\n        this.setState({ cover },\r\n            this.props.onUpdate(cover))\r\n    }\r\n\r\n    onRemoveCover = () => {\r\n        this.setState({ cover: null }, () => {\r\n            console.log(this.state.cover)\r\n            this.props.onUpdate(this.state.cover)\r\n        })\r\n    }\r\n\r\n    getImageEls = () => {\r\n        const att = this.props.card.attachments\r\n\r\n        if (!att)\r\n            return <React.Fragment />\r\n        const imageEls = att.map(el => {\r\n            let txt = \"single-image-choice\"\r\n            if (this.state.cover.id === el.id) {\r\n                txt += ' selected'\r\n            }\r\n            return <div key={el.id} className={txt} onClick={() => this.onSelectCover(el)} style={{ backgroundImage: `url(${el.src})` }}></div>\r\n        })\r\n\r\n        return <React.Fragment><h6>Images</h6><div className=\"image-choice\">{imageEls}</div></React.Fragment>\r\n    }\r\n\r\n    getColorEls = () => {\r\n        const colorEls = this.colors.map(el => {\r\n            let txt = \"color-choice\"\r\n            if (this.state.cover.id === el.id) {\r\n                txt += ' selected'\r\n            }\r\n\r\n            return <div key={el.id} className={txt} onClick={() => this.onSelectCover(el)} style={{ backgroundColor: el.value }}></div>\r\n        })\r\n        return colorEls\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.cover) return <React.Fragment />\r\n        return (\r\n            <Popover\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={true}\r\n                anchorEl={this.props.anchorEl.current}\r\n                onClose={this.props.toggleList}\r\n                onBackdropClick={this.props.toggleList}\r\n            >\r\n                <div className=\"cover-selector-container\">\r\n                    <div className=\"cover-selector-header flex justify-center\">\r\n                        <h5>Cover</h5>\r\n                        <CloseOutlined className=\"close-cover-modal\" onClick={this.props.toggleList} />\r\n                    </div>\r\n                    <div className=\"cover-selector-colors\">\r\n                        <h6>Colors</h6>\r\n                        <div className=\"color-selection\">\r\n                            {this.getColorEls()}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"cover-selector-images\">\r\n                        {this.getImageEls()}\r\n                    </div>\r\n                    <div className=\"cover-remove-container\">\r\n                        <button className=\"cancel-btn\" onClick={this.onRemoveCover}>Remove Cover</button>\r\n                    </div>\r\n                </div>\r\n            </Popover>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoard, updateCard, addActivity } from '../../store/actions/board-actions'\r\nimport { boardService } from '../../services/board-service'\r\nimport { CardDescription } from './CardDescription'\r\nimport { CardAddComment } from './CardAddComment'\r\nimport { ActivityLog } from './card-sidebar/ActivityLog'\r\nimport { CardTitle } from './CardTitle'\r\nimport { CardDueDateSetter } from './CardDueDateSetter'\r\nimport { CardChecklistContainer } from './CardChecklistContainer.jsx'\r\nimport { CardSidebar } from './card-sidebar/CardSidebar'\r\nimport { CardLabels } from './CardLabels'\r\nimport { LabelPalette } from './card-sidebar/LabelPalette'\r\nimport { CardImagesList } from './CardImagesList'\r\nimport { CardImgUpload } from './CardImgUpload';\r\nimport { withRouter } from 'react-router'\r\nimport { IconButton, Popover } from '@material-ui/core'\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListIcon from '@material-ui/icons/List'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport { CoverSelector } from './CoverSelector'\r\nimport WebAssetOutlinedIcon from '@material-ui/icons/WebAssetOutlined'\r\nclass _CardDetails extends Component {\r\n\r\n    state = {\r\n        card: null,\r\n        groupId: null,\r\n        groupName: null,\r\n        commentsOnly: false,\r\n        isLabelPaletteShowing: false,\r\n        isCoverSelectorShown: false,\r\n        isUploading: false,\r\n        isUploadZoneOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Did mount boardId: ' + this.props.boardId + ' cardId' + this.props.cardId)\r\n        if (this.props.boardId && this.props.cardId) {\r\n            this.props.loadBoard(this.props.boardId).then(() => {\r\n                console.log('After then')\r\n                this.getCardDetails()\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.cardId !== this.props.cardId) {\r\n            this.getCardDetails()\r\n        }\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    getCardDetails = () => {\r\n        console.log('Get card details ' + this.props.cardId)\r\n        let foundCard = false;\r\n        this.props.board.groups.forEach(group => {\r\n            group.cards.forEach(card => {\r\n                if (card.id === this.props.cardId) {\r\n                    const groupId = group.id\r\n                    const groupName = group.title\r\n                    foundCard = true\r\n                    console.log('Found card ' + this.props.cardId)\r\n                    this.setState({ groupId, groupName, card })\r\n                    return\r\n                }\r\n            })\r\n        })\r\n\r\n        if (!foundCard) {\r\n            console.log('Could not find card')\r\n        }\r\n    }\r\n\r\n    toggleCoverSelector = () => {\r\n        if (this.state.isCoverSelectorShown) return this.setState({ isCoverSelectorShown: false })\r\n        return this.setState({ isCoverSelectorShown: true })\r\n    }\r\n\r\n    onCloseCard = () => {\r\n        this.props.history.push(`/board/${this.props.board._id}`)\r\n    }\r\n\r\n    submitCard = (card, activity) => {\r\n        return new Promise(resolve => {\r\n            this.props.updateCard(this.props.board, card, activity).then(() => resolve())\r\n        })\r\n    }\r\n\r\n    onUpdateDesc = async (description) => {\r\n        const card = { ...this.state.card }\r\n        card.description = description\r\n\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated the description')\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    onUpdateCover = (cover) => {\r\n        const card = { ...this.state.card }\r\n        card.cover = cover\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated the cover')\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    onAddCardMember = (user) => {\r\n        var members = JSON.parse(JSON.stringify(this.state.card.members))\r\n        members.unshift(user)\r\n        this.onChangeMembers(members, \"added a member\")\r\n    }\r\n\r\n    onRemoveCardMember = (user) => {\r\n        var members = JSON.parse(JSON.stringify(this.state.card.members))\r\n        members = members.filter(_user => _user._id != user._id)\r\n        this.onChangeMembers(members, \"removed a member\")\r\n    }\r\n\r\n    onChangeMembers = (members, txt) => {\r\n        const card = { ...this.state.card }\r\n\r\n        card.members = members;\r\n        console.log(members)\r\n        this.setState({ card }, () => {\r\n            const activity = this.createActivity(txt)\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    getCardCover = () => {\r\n        const cover = this.state.card.cover\r\n        if (!cover) return <React.Fragment />\r\n\r\n        if (!cover.src) return (\r\n            // if there is no src - this is a color\r\n            <div className=\"card-details-cover-color\" style={{ backgroundColor: cover.color }}>\r\n                { cover &&\r\n                    <IconButton onClick={this.onCloseCard} aria-label=\"close\" className=\"card-details-cover-modal-close\">\r\n                        <CloseIcon />\r\n                    </IconButton>}\r\n                { cover && <button className=\"sidebar-button-with-cover\" ref={this.ref} onClick={this.toggleCoverSelector}><WebAssetOutlinedIcon /><span>Cover</span></button>}\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"card-details-cover-image\" style={{ backgroundImage: `url(${cover.src})` }} >\r\n                { cover &&\r\n                    <IconButton onClick={this.onCloseCard} aria-label=\"close\" className=\"card-details-cover-modal-close\">\r\n                        <CloseIcon />\r\n                    </IconButton>}\r\n                { cover && <button className=\"sidebar-button-with-cover\" ref={this.ref} onClick={this.toggleCoverSelector}><WebAssetOutlinedIcon /><span>Cover</span></button>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onAddComment = (txt) => {\r\n        const activity = {\r\n            \"txt\": \"\",\r\n            \"commentTxt\": txt,\r\n            \"card\": {\r\n                \"id\": this.state.card.id,\r\n                \"title\": this.state.card.title\r\n            }\r\n        }\r\n        const newActivity = boardService.createActivity(activity)\r\n        this.props.addActivity(this.props.board, newActivity)\r\n    }\r\n\r\n    createActivity = (txt) => {\r\n        const activity = {\r\n            \"txt\": txt,\r\n            \"commentTxt\": '',\r\n            \"card\": {\r\n                \"id\": this.state.card.id,\r\n                \"title\": this.state.card.title\r\n            }\r\n        }\r\n\r\n        console.log('CREATING ACTIVITY FOR CARD ' + JSON.stringify(activity))\r\n\r\n        return boardService.createActivity(activity)\r\n    }\r\n\r\n    toggleCommentsOnly = () => {\r\n        if (this.state.commentsOnly) return this.setState({ commentsOnly: false })\r\n        return this.setState({ commentsOnly: true })\r\n    }\r\n\r\n    getFilteredActivities = () => {\r\n        const card = this.state.card\r\n        const activities = this.props.board.activities\r\n        if (!activities) return []\r\n        let cardActivities = activities.filter(activity => activity.card.id === card.id)\r\n        if (this.state.commentsOnly) cardActivities = cardActivities.filter(activity => {\r\n            console.log(JSON.stringify(activity))\r\n            if (activity.commentTxt) return activity\r\n        })\r\n        // console.log(JSON.stringify(cardActivities))\r\n        return cardActivities\r\n    }\r\n\r\n    onUpdateTitle = async (txt) => {\r\n        let card = { ...this.state.card }\r\n        card.title = txt\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated the title')\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    onUpdateDueDate = async (dueDate) => {\r\n        let card = { ...this.state.card }\r\n        card.dueDate = dueDate\r\n\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated due date')\r\n            await this.submitCard(card, activity)\r\n\r\n        })\r\n    }\r\n\r\n    onUpdateChecklists = (newChecklist, activityTxt) => {\r\n\r\n        const card = { ...this.state.card }\r\n        if (!card.checklists) {\r\n            card.checklists = []\r\n        }\r\n        // updating\r\n        const checklistIdx = card.checklists.findIndex(checklist => checklist.id === newChecklist.id)\r\n        if (checklistIdx >= 0) {\r\n            card.checklists = card.checklists.map(checklist => {\r\n                if (checklist.id === newChecklist.id) return newChecklist\r\n                return checklist\r\n            })\r\n        } else {\r\n            card.checklists.push(newChecklist)\r\n        }\r\n\r\n        // removing excess checklists\r\n        card.checklists = card.checklists.filter(checklist => {\r\n            if (checklist.title) return checklist\r\n        })\r\n\r\n        this.setState({ card }, () => {\r\n            if (activityTxt) {\r\n                let activity = this.createActivity(activityTxt)\r\n\r\n                this.submitCard(card, activity)\r\n            } else {\r\n                this.submitCard(card)\r\n            }\r\n        })\r\n    }\r\n\r\n    getLabels = () => {\r\n        const labels = this.state.card.labels\r\n        if (labels && labels.length) return (\r\n            <div className=\"card-details-label-container\">\r\n                <h5>Labels</h5>\r\n                <CardLabels\r\n                    onClickLabel={this.openEditLabelsModal}\r\n                    cardLabels={labels}\r\n                    boardLabels={this.props.board.labels}\r\n                    preview={false}\r\n                />\r\n            </div>\r\n        )\r\n        return <React.Fragment />\r\n    }\r\n\r\n    toggleLabelPalette = () => {\r\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\r\n    }\r\n\r\n    renderAttachments = (urlImg) => {\r\n        return (\r\n            <div>\r\n                <section class=\"flex justify-space-between\"><div class=\"flex\">\r\n                    <FileCopyIcon />\r\n                    <h3>Attachments</h3></div></section>\r\n                <img className=\"card-details-img-attach\" src={urlImg} />\r\n            </div>)\r\n    }\r\n\r\n    setUploading = () => {\r\n        return new Promise(resolve => {\r\n            this.setState({ isUploading: true }, resolve(true))\r\n        })\r\n    }\r\n\r\n    onAddImage = (imgRef) => {\r\n        const newImg = boardService.createImage(imgRef)\r\n        const card = { ...this.state.card }\r\n        if (!card.attachments) card.attachments = []\r\n        card.attachments.push(newImg)\r\n        const activity = this.createActivity('added an image')\r\n        this.setState({ card }, async () => {\r\n            await this.submitCard(card, activity)\r\n            this.setState({ isUploading: false })\r\n        })\r\n    }\r\n\r\n    onUpdateAttachments = async (newAttachment) => {\r\n        const card = { ...this.state.card }\r\n        const idx = card.attachments.findIndex(att => att.id === newAttachment.id)\r\n\r\n        if (!newAttachment.title.length) {\r\n\r\n            card.attachments.splice(idx, 1)\r\n        } else {\r\n            card.attachments[idx] = newAttachment\r\n        }\r\n\r\n        const activity = (newAttachment.title.length) ? this.createActivity('edited the title of an image') : this.createActivity('removed an image')\r\n\r\n        this.setState({ card }, () => {\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    toggleUploadDropzone = () => {\r\n        if (this.state.isUploadZoneOpen) return this.setState({ isUploadZoneOpen: false })\r\n        return this.setState({ isUploadZoneOpen: true })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.card) {\r\n            return \"\"\r\n        }\r\n        // (this.state.card && this.state.card.attachments) ?\r\n\r\n        //         const urlImg = \"url(\" + (this.state.card && this.state.card.attachments) ? this.state.card.attachments : \"\" + \")\"\r\n\r\n        // console.log(this.state.card)\r\n        return (\r\n            <section className=\"card-details-modal flex column\">\r\n                <div className=\"modal-content\">\r\n                    {this.getCardCover()}\r\n                    <div className=\"card-details-modal-container\">\r\n                        <div className=\"card-modal-title flex justify-space-between\">\r\n                            <div className=\"card-details-title flex\">\r\n                                <SubtitlesIcon />\r\n                                <div>\r\n                                    <CardTitle titleTxt={this.state.card.title} onUpdate={this.onUpdateTitle} />\r\n                                    <div className=\"in-list\">\r\n                                    <span className=\"group-name\">in list <u>{this.state.groupName}</u></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {!this.state.card.cover &&\r\n                                <IconButton onClick={this.onCloseCard} aria-label=\"close\" id=\"modal-close\" className=\"modal-close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>}\r\n                        </div>\r\n                        <div className=\"flex justify-space-between modal-content-wrapper\">\r\n                            <section className=\"main-modal-section\">\r\n\r\n                                <div className=\"labels-and-due-date\">\r\n                                    {this.getLabels()}\r\n                                    {(this.state.card.dueDate ? <div>\r\n                                        <h5>Due Date</h5>\r\n                                        <CardDueDateSetter onUpdateDueDate={this.onUpdateDueDate} dueDate={this.state.card.dueDate} displayDate={true} displayTime={true} />\r\n                                    </div> : <React.Fragment />)}\r\n                                </div>\r\n                                <div>\r\n                                    {/* { this.state.card.attachments ? JSON.stringify(this.state.card.attachments) : \"\"} */}\r\n                                    {/* {(this.state.card && this.state.card.attachments) ? this.renderAttachments(urlImg) : \"\"} */}\r\n                                    <CardImagesList onUpdate={this.onUpdateAttachments} attachments={this.state.card.attachments} />\r\n                                    <CardDescription onUpdateDesc={this.onUpdateDesc} description={this.state.card.description} />\r\n                                    <CardChecklistContainer checklists={this.state.card.checklists} onUpdate={this.onUpdateChecklists} />\r\n                                    <CardImgUpload onAddImage={this.onAddImage} setUploading={this.setUploading} toggleOpen={this.toggleUploadDropzone} isOpen={this.state.isUploadZoneOpen} />\r\n                                </div>\r\n                            </section>\r\n                            <CardSidebar\r\n                                anchorRef={this.ref}\r\n                                ref={this.ref}\r\n                                addActivity={this.createActivity}\r\n                                isUploading={this.state.isUploading}\r\n                                toggleCoverSelector={this.toggleCoverSelector}\r\n                                toggleUploadDropzone={this.toggleUploadDropzone}\r\n                                toggleDisplayMembers={this.toggleDisplayMembers}\r\n                                dueDate={this.state.card.dueDate}\r\n                                toggleLabelPalette={this.toggleLabelPalette}\r\n                                onUpdateDueDate={this.onUpdateDueDate}\r\n                                onArchiveCard={this.onArchiveCard}\r\n                                onUpdateChecklists={this.onUpdateChecklists}\r\n                                members={this.state.card.members}\r\n                                onAddCardMember={this.onAddCardMember} onRemoveCardMember={this.onRemoveCardMember}\r\n                                allUsers={this.props.allUsers}\r\n                                card={this.state.card}\r\n\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <section className=\"flex justify-space-between\">\r\n                                <div className=\"flex\">\r\n                                    <ListIcon />\r\n                                    <h3>Activity</h3>\r\n                                </div>\r\n                                <button onClick={this.toggleCommentsOnly}>{(this.state.commentsOnly) ? 'Show Details' : 'Hide Details'}</button>\r\n                            </section>\r\n                            <CardAddComment onAddComment={this.onAddComment} />\r\n                            <ActivityLog\r\n                                boardId={this.props.board._id}\r\n                                displayMode=\"card\"\r\n                                activities={this.getFilteredActivities()} />\r\n                        </div>\r\n                        <Popover\r\n                            anchorOrigin={{\r\n                                vertical: 'center',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'center',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            open={this.state.isLabelPaletteShowing}\r\n                            anchorEl={this.ref.current}\r\n                            onClose={this.toggleLabelPalette}\r\n                            onBackdropClick={this.toggleLabelPalette}>\r\n                            <LabelPalette createActivity={this.createActivity} card={this.state.card} />\r\n                        </Popover>\r\n                        {this.state.isCoverSelectorShown && <CoverSelector card={this.state.card} anchorEl={this.ref} onUpdate={this.onUpdateCover} toggleList={this.toggleCoverSelector} />}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        allUsers: state.userModule.users,\r\n        members: state.boardModule.currBoard.members\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateCard,\r\n    addActivity\r\n};\r\n\r\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(connect(withRouter)(_CardDetails))\r\n","import React, { Component } from 'react'\r\n\r\nexport class BoardTitle extends Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        isEditing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const txt=this.props.titleTxt\r\n        this.setState({txt})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) { \r\n        if (prevProps.titleTxt != this.props.titleTxt) {\r\n            this.setState({txt: this.props.titleTxt})\r\n        }\r\n    }\r\n\r\n    onChangeText = (ev) => {\r\n        const txt = ev.target.value\r\n        this.setState({txt})\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.txt) return\r\n        this.setNotEditing()\r\n        this.props.onUpdate(this.state.txt)\r\n        \r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    getIsEditing = () => {\r\n        if (this.state.isEditing) return (\r\n            <form onBlur={this.setNotEditing} onSubmit={this.onSubmit}>\r\n                <input name=\"header\" type=\"text\" autoFocus value={this.state.txt} onChange={this.onChangeText}/>\r\n            </form>\r\n        )\r\n        return <div onClick={this.setEditing}><h2 className=\"proj-title btn\">{this.state.txt}</h2></div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getIsEditing()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { MemberList } from '../cmps/BoardHeader/MemberList';\r\n// import { Filter } from './Filter';\r\nimport { loadAllUsers } from '../store/actions/user-actions.js';\r\nimport { updateBoardTitle } from '../store/actions/board-actions.js';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\n// import { Notifications } from './Notifications';\r\n// import MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\nimport { BoardTitle } from '../cmps/BoardHeader/BoardTitle'\r\nexport class _BoardNav extends Component {\r\n    async componentDidMount() {\r\n        // await this.props.loadAllUsers()\r\n    }\r\n\r\n    onUpdateBoardTitle = (title) => {\r\n        this.props.updateBoardTitle(this.props.board, title)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board-header-container flex justify-space-between wrap\" >\r\n                <div className=\"board-nav-left flex align-center\">\r\n                    <BoardTitle titleTxt={this.props.board.title} onUpdate={this.onUpdateBoardTitle}></BoardTitle>\r\n                    <div className=\"members-container\">\r\n                        <MemberList members={this.props.members} allUsers={this.props.allUsers}/>\r\n                    </div>\r\n\r\n                    <div className=\"btn\"><span className=\"material-icons\">\r\n                        person_add</span>Invite</div>\r\n                   \r\n                </div>\r\n                <div className=\"board-nav-right flex \">\r\n                    <button>\r\n                    <NotificationsNoneIcon />\r\n                    </button>\r\n                    <button onClick={() => this.props.onToggleSidebar(true)}>\r\n                        <span className=\"material-icons\">more_horiz</span>Show menu\r\n                </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        allUsers: state.userModule.users\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadAllUsers,\r\n    updateBoardTitle\r\n};\r\n\r\nexport const BoardNav = connect(mapStateToProps, mapDispatchToProps)(_BoardNav);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setStyle, updateBoard } from '../../../store/actions/board-actions.js'\r\n\r\n\r\nexport class _ColorsGallery extends Component {\r\n\r\n    state = {\r\n        colorSelected: ''\r\n    }\r\n\r\n\r\n    colorSelected = (colorSelected) => {\r\n        if (this.state.colorSelected === colorSelected) return;\r\n        this.setState({ colorSelected })\r\n        const { board } = this.props;\r\n        board.style.bgImg = null;\r\n        board.style.boardColor = colorSelected;\r\n        this.props.style.bgImg = null;\r\n        this.props.style.boardColor = colorSelected;\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    render() {\r\n\r\n        const colors = [\r\n            \"rgb(0, 121, 191)\",\r\n            \"rgb(210, 144, 52)\",\r\n            \"rgb(81, 152, 57)\",\r\n            \"rgb(176, 70, 50)\",\r\n            \"rgb(137, 96, 158)\",\r\n            \"rgb(205, 90, 145)\",\r\n            \"rgb(75, 191, 107)\",\r\n            \"rgb(0, 174, 204)\",\r\n            \"rgb(131, 140, 145)\"\r\n        ]\r\n\r\n        return (\r\n\r\n            <section className=\"image-gallery\">\r\n\r\n                {colors.map((color) => <div className=\"image\" onClick={() => { this.colorSelected(color) }} style={{ backgroundColor: color }}></div>)}\r\n\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        style: state.boardModule.style\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setStyle,\r\n    updateBoard\r\n};\r\n\r\nexport const ColorsGallery = connect(mapStateToProps, mapDispatchToProps)(_ColorsGallery);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setStyle, updateBoard } from '../../../store/actions/board-actions.js'\r\n\r\n\r\nexport class _PhotosGallery extends Component {\r\n\r\n    state = {\r\n        imgSelected: ''\r\n    }\r\n\r\n\r\n    imgSelected = (imgSelected) => {\r\n        if (this.state.imgSelected === imgSelected) return;\r\n        this.setState({ imgSelected })\r\n        const { board } = this.props;\r\n        board.style.bgImg = imgSelected;\r\n        this.props.style.bgImg = imgSelected;\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    render() {\r\n\r\n        const imgs = [\r\n            \"url(http://avante.biz/wp-content/uploads/Tab-HD-Wallpapers/Tab-HD-Wallpapers-001.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-008.jpg}\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-033.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/THC-structure-wallpaper/THC-structure-wallpaper1.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-005.jpg\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-032.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Outer-space-wallpaper-for-mac/Outer-space-wallpaper-for-mac15.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Outer-space-wallpaper-for-mac/Outer-space-wallpaper-for-mac13.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-010.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-014.jpg)\"\r\n        ]\r\n\r\n\r\n        return (\r\n\r\n            <section className=\"image-gallery\">\r\n\r\n                {imgs.map((img) => <div className=\"image\" onClick={() => { this.imgSelected(img) }} style={{ backgroundImage: img }}></div>)}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        style: state.boardModule.style\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setStyle,\r\n    updateBoard\r\n};\r\n\r\nexport const PhotosGallery = connect(mapStateToProps, mapDispatchToProps)(_PhotosGallery);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ColorsGallery } from './ColorsGallery'\r\nimport { PhotosGallery } from './PhotosGallery'\r\n\r\n\r\n\r\nexport class _ChangeBackground extends Component {\r\n\r\n    state = {\r\n        chooseBackground: ''\r\n    }\r\n\r\n    onSelect = (chooseBackground) => {\r\n        this.setState({ chooseBackground })\r\n        console.log(chooseBackground);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"change-background-container\">\r\n                <hr className=\"side-menu-divider\" />\r\n\r\n                {this.state.chooseBackground === '' &&\r\n                    <div className=\"change-backgrounds-inier-container\">\r\n                        <div className=\"board-backgrounds-section-tile board-backgrounds-photos-tile\" onClick={() => { this.onSelect('Photos') }}>\r\n                            <div className=\"image\"></div>\r\n                            <div className=\"title\">Photos</div>\r\n                        </div>\r\n                        <div className=\"board-backgrounds-section-tile board-backgrounds-colors-tile\" onClick={() => { this.onSelect('Colors') }}>\r\n                            <div className=\"image\"></div>\r\n                            <div className=\"title\">Colors</div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.chooseBackground === 'Photos' && <PhotosGallery />}\r\n                {this.state.chooseBackground === 'Colors' && <ColorsGallery />}\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n};\r\n\r\nexport const ChangeBackground = connect(mapStateToProps, mapDispatchToProps)(_ChangeBackground);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { ChangeBackground } from './ChangeBackground.jsx';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n\r\nexport class _SideBar extends Component {\r\n\r\n    state = {\r\n        sideBarTitle: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // await this.props.loadAllUsers()\r\n        this.setState({ sideBarTitle: 'Menu' })\r\n    }\r\n\r\n    titleClicked = (title) => {\r\n        this.setState({ sideBarTitle: title })\r\n    }\r\n\r\n    DynamicCmp = () => {\r\n\r\n        const { sideBarTitle } = this.state;\r\n\r\n        switch (sideBarTitle) {\r\n            case 'Change background':\r\n                return <ChangeBackground />\r\n\r\n            case null:\r\n                return <React.Fragment></React.Fragment>\r\n            default:\r\n                return <React.Fragment></React.Fragment>\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"side-bar-container flex column align-center\" >\r\n                {console.log('side bar in')}\r\n                <div className=\"side-bar-header flex align-center\">\r\n                    {this.state.sideBarTitle !== 'Menu' &&\r\n                        <button className=\"Navigat-side-bar\" onClick={() => { this.titleClicked('Menu') }}><NavigateBeforeIcon /></button>}\r\n                    <h3 className=\"menu-title\">{this.state.sideBarTitle}</h3>\r\n                    <button className=\"close-side-bar\" onClick={() => { this.props.onToggleSidebar(false) }}><CloseIcon /></button>\r\n                </div>\r\n                <div className=\"side-bar-inside-container\">\r\n                    {this.state.sideBarTitle === 'Menu' &&\r\n\r\n                        <div className=\"side-bar-inside-menu-container\">\r\n                            <hr className=\"side-menu-divider\" />\r\n                            <ul className=\"side-menu-list clean-list\">\r\n                                <li onClick={() => { this.titleClicked('About this board') }}><span><InfoIcon/></span>About this board</li>\r\n                                <li onClick={() => { this.titleClicked('Change background') }}><span><WallpaperIcon/></span>Change background</li>\r\n                                <li onClick={() => { this.titleClicked('Board analysis') }}><span><AssessmentIcon/></span>Board analysis</li>\r\n                            </ul>\r\n                            <hr className=\"side-menu-divider\" />\r\n                        </div>\r\n                    }\r\n                    {this.DynamicCmp()}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        allUsers: state.userModule.users\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n\r\n};\r\nexport const SideBar = connect(mapStateToProps, mapDispatchToProps)(_SideBar);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupList } from '../cmps/groups/GroupList'\r\nimport { CardDetails } from '../cmps/cards/CardDetails'\r\nimport { BoardNav } from '../cmps/BoardNav'\r\nimport { loadBoard, onRemoveGroup, setStyle, updateBoard } from '../store/actions/board-actions'\r\nimport { loadAllUsers } from '../store/actions/user-actions.js'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { socketService } from '../services/socket-service.js';\r\nimport { SideBar } from '../cmps/BoardHeader/SideBar/SideBar'\r\n\r\nexport class _BoardApp extends Component {\r\n    state = {\r\n        lastReceivedUpdateAt: '',\r\n        isSidebarShowing: false\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        const { boardId } = this.props.match.params;\r\n        socketService.setup()\r\n        await this.props.loadBoard(boardId)\r\n        this.props.setStyle(this.props.board.style)\r\n        this.props.loadAllUsers()\r\n    }\r\n    \r\n    async componentDidUpdate() {\r\n      \r\n        \r\n        \r\n    }\r\n\r\n    onAddGroup = (txt) => {\r\n        return txt\r\n    }\r\n\r\n    onToggleSidebar = (isSidebarShowing) => {\r\n        this.setState({ isSidebarShowing });\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"board-app board-container flex column\">\r\n                    {(this.props.match.params.cardId) ?\r\n                        <CardDetails cardId={this.props.match.params.cardId} boardId={this.props.match.params.boardId} history={this.props.history} /> : <div></div>}\r\n\r\n                    <BoardNav title={board.title}\r\n                        members={board.members}\r\n                        onToggleSidebar={this.onToggleSidebar}\r\n                        // onFilter={this.onFilter}\r\n                        style={board.style}\r\n                        users={this.props.allUsers}\r\n                        lastUpdate={this.state.lastReceivedUpdateAt}\r\n                    />\r\n                    {this.state.isSidebarShowing && <SideBar onToggleSidebar={this.onToggleSidebar}/>}\r\n                    <GroupList groups={this.props.board.groups} onAddGroup={this.onAddGroup} history={this.props.history} style={board.style} />\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n        // loggedInUser: state.appModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    onRemoveGroup,\r\n    updateBoard,\r\n    loadAllUsers,\r\n    setStyle \r\n}\r\n\r\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp)","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { MemberPreview } from '../BoardHeader/MemberPreview'\r\n// import DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\n\r\n//add class templateto inside div?\r\nexport function BoardPreview(props) {\r\n\r\n    const board = props.board\r\n    const boardImg = props.board.style.bgImg\r\n    const boardColor = props.board.style.boardColor\r\n\r\n    return (\r\n\r\n        <Link to={`/board/${board._id}`}>\r\n            <div className=\"template\" style={boardImg ? { backgroundImage: boardImg } :\r\n                { backgroundColor: boardColor }}>\r\n                <span className=\"board-title-preview\">{board.title}</span></div>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards, removeBoard, addNewBoard } from '../store/actions/board-actions'\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { BoardPreview } from '../cmps/BoardPreview';\r\n\r\nexport class _Boards extends Component {\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadBoards()\r\n\r\n    }\r\n    // this.props.removeBoard()\r\n\r\n    fn() { }\r\n\r\n    render() {\r\n        const { boards } = this.props\r\n        console.log('propx koral', boards);\r\n        return (\r\n            <section className=\"boards-page-bg flex column \">\r\n                <div className=\"main-boards\">\r\n                    <div className=\"flex justify-space-between align-center\">\r\n                        <h3>Your Boards</h3>\r\n                    </div>\r\n\r\n                    <section className=\"select-board-container\">\r\n                        <div className=\"create-new-board\" onClick={() => { this.props.addNewBoard()}}>\r\n                            <div className=\"new-board-text flex align-center\">\r\n                                <AddBoxIcon />\r\n                                <p>Create new board</p>\r\n                            </div>\r\n                        </div>\r\n                        {boards.map((board) => <BoardPreview key={board._id} board={board} />)}\r\n                    </section>\r\n\r\n                    <h3 className=\"popular-title\">Popular templates</h3>\r\n\r\n                    <section className=\"select-board-container\">\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads/Tab-HD-Wallpapers/Tab-HD-Wallpapers-004.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads2/Autumn-City-Wallpapers-for-desktop-1/Autumn-City-Wallpapers-for-desktop-74.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads/Tab-HD-Wallpapers/Tab-HD-Wallpapers-027.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads2/Autumn-City-Wallpapers-for-desktop-1/Autumn-City-Wallpapers-for-desktop-11.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads2/Autumn-City-Wallpapers-for-desktop-1/Autumn-City-Wallpapers-for-desktop-2.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(https://picsum.photos/195/95?random=2)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(https://picsum.photos/195/95?random=1)\"\r\n                        }}><span>Template</span></div>\r\n                    </section>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards\r\n        // loggedInUser: state.appModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    removeBoard,\r\n    addNewBoard\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)","import { Home } from './pages/Home.jsx'\r\nimport { BoardApp } from './pages/BoardApp.jsx'\r\nimport { Boards } from './pages/Boards.jsx'\r\n\r\n\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/board/:boardId/card/:cardId',\r\n        component: BoardApp,\r\n    },\r\n    {\r\n        path: '/board/:boardId',\r\n        component: BoardApp,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: Boards,\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    }\r\n]","\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport React from 'react';\r\n\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport HeroImg from '../assets/imgs/homenew.jpg'\r\nimport Logo from '../assets/imgs/logo.png'\r\n\r\n\r\nexport function Home() {\r\n    return (\r\n        <section className=\"home flex column align-center justify-center\" >\r\n\r\n                <header className=\"home-pg-header flex justify-space-between align-center\">\r\n                     <img src={Logo} className=\"logo-img-left\"/>\r\n\r\n                    <div className=\"flex\">\r\n                        <NavLink to='/' className=\"login-btn\">Log in</NavLink>\r\n                        <NavLink to='/' className=\"signup-btn\">Sign up</NavLink>\r\n                    </div>\r\n                </header>\r\n                \r\n\r\n            <section className=\"hero flex justify-space-between\">\r\n                <div className=\"introduction slide-right\">\r\n                    <h1>Welcome to Treelo</h1>\r\n                    <div className=\"intro-text\">\r\n                        <p>Manage projects, organize tasks, and build team spirit—all in one place. Explore our many features of project and task oriented management for higher efficiency.</p>\r\n                    </div>\r\n                    <NavLink to={ `/board/` } className=\"tryit\">Try It now! &#x2192;</NavLink>\r\n                </div>\r\n                <div className=\"img-container\">\r\n                <img src={HeroImg} className=\"slide-left\" />\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"home-pg-text\">\r\n                <img src=\"https://i.ibb.co/BVwnK1J/kisspng-environmentally-friendly-recycling-image-sustainab-government-flooring-flooring-concepts-inc.png\" className=\"img-container earth-img\"></img>\r\n                <h2>Sick of replacing white board markers every week?</h2>\r\n                <h2>Lost in the paper-towers? Save a tree, and your time!</h2>\r\n                <h2>Be innovative, increase productivity by bringing new technology and tools into your organization.</h2>\r\n                <h2>Receive live updates from team-mates and make faster progress then ever.</h2>\r\n{/* https://hbr.org/2015/03/convincing-skeptical-employees-to-adopt-new-technology\r\nhttps://zapier.com/learn/project-management/kanban-board/ */}\r\n            </section>\r\n\r\n        <section className=\"about-wrapper flex column\">\r\n            <h2 className=\"about-us-title\">Contact us</h2>\r\n            <div className=\"about-us-container flex justify-center align-center wrap\">\r\n              \r\n                <div className=\"about-me-container\">\r\n                    <div className=\"about-me koral\"></div>\r\n                    <h3>Koral Sabbah</h3>\r\n                    <div className=\"links-container\">\r\n                        <a href=\"https://www.facebook.com/koral.benabu.5\" target=\"blank\"><FacebookIcon className=\"facebook-icon\" /></a>\r\n                        <a href=\"https://www.linkedin.com/in/%F0%9D%90%8A%F0%9D%90%A8%F0%9D%90%AB%F0%9D%90%9A%F0%9D%90%A5-%F0%9D%90%92%F0%9D%90%9A%F0%9D%90%9B%F0%9D%90%9B%F0%9D%90%9A%F0%9D%90%A1-%F0%91%81%8D-%F0%9D%90%81%F0%9D%90%9E%F0%9D%90%A7-%F0%9D%90%9A%F0%9D%90%9B%F0%9D%90%AE-%F0%91%81%8D-2b8172188/\" target=\"blank\"><LinkedInIcon className=\"linkedin-icon\" /></a>\r\n                        <a href=\"mailto:koral762@gmail.com\" target=\"blank\"><EmailIcon className=\"mail-icon\" /></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"about-me-container\">\r\n                    <div className=\"about-me miriam\"></div>\r\n                    <h3>Miriam Baranovska</h3>\r\n                    <div className=\"links-container\">\r\n                        <a href=\"https://www.facebook.com\" target=\"blank\"><FacebookIcon className=\"facebook-icon\" /></a>\r\n                        <a href=\"https://www.linkedin.com\" target=\"blank\"><LinkedInIcon className=\"linkedin-icon\" /></a>\r\n                        <a href=\"mailto:maryam1649@gmail.com\" target=\"blank\"><EmailIcon className=\"mail-icon\" /></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"about-me-container\">\r\n                    <div className=\"about-me ksenia\"></div>\r\n                    <h3>Ksenia Braginsky</h3>\r\n                    <div className=\"links-container\">\r\n                        <a href=\"https://www.facebook.com\" target=\"blank\"><FacebookIcon className=\"facebook-icon\" /></a>\r\n                        <a href=\"https://www.linkedin.com\" target=\"blank\"><LinkedInIcon className=\"linkedin-icon\" /></a>\r\n                        <a href=\"mailto:ksu0593@gmail.com\" target=\"blank\"><EmailIcon className=\"mail-icon\" /></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"contact-us\">k</div> */ }\r\n        </section>\r\n        </section>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n// import { AddNewBoard } from './BoardHeader/AddNewBoard'\r\n// import logoFutura from '../assets/icons/newLogoFutura.png'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { connect } from 'react-redux'\r\n// import { LoginDrawer } from './LoginDrawer'\r\nimport { onLogout } from '../store/actions/user-actions'\r\n// import { MemberPreview } from './BoardHeader/MemberPreview'\r\n// import { Dialog, IconButton } from '@material-ui/core'\r\n// import { Users } from './Users/UsersMain'\r\n\r\nimport { userService } from '../services/user-service'\r\n// import { CloseOutlined } from '@material-ui/icons'\r\n// import Logo from '../assets/imgs/light-trello.jpeg'\r\nimport Logo from '../assets/imgs/logo.png'\r\n\r\n\r\nexport class _AppHeader extends Component {\r\n\r\n    state = {\r\n        isNewBoardModalShown: false,\r\n        isLoginDrawerShown: false,\r\n        isUserDetailsOpen: false,\r\n        loggedinUser: null\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isNewBoardModalShown: !this.state.isNewBoardModalShown })\r\n    }\r\n\r\n    onCloseModal = () => {\r\n        this.setState({ isNewBoardModalShown: false })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loggedinUser: userService.getLoggedinUser() })\r\n    }\r\n\r\n    redirectPath = (id) => {\r\n        this.props.history.replace(`/`)\r\n        this.props.history.replace(`/board/${id}`)\r\n        this.onCloseModal()\r\n    }\r\n\r\n    showLoginDrawer = (ev) => {\r\n        ev.stopPropagation()\r\n        ev.nativeEvent.stopImmediatePropagation();\r\n        this.setState({ isLoginDrawerShown: true })\r\n    }\r\n\r\n    hideLoginDrawer = (ev) => {\r\n        if (ev) ev.stopPropagation()\r\n        this.setState({ isLoginDrawerShown: false })\r\n    }\r\n\r\n    onOpenUserDetails = () => {\r\n        console.log('open')\r\n        this.setState({ isUserDetailsOpen: true })\r\n    }\r\n\r\n    onCloseUserDetails = () => {\r\n        this.setState({ isUserDetailsOpen: false })\r\n    }\r\n\r\n    onLogout = async (ev) => {\r\n        ev.stopPropagation()\r\n        await this.props.logout()\r\n        this.setState({ isUserDetailsOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"flex justify-space-between app-header align-center\">\r\n\r\n                    <div className=\"right-side flex\">\r\n                    <div className=\"header-icons flex\">\r\n                        <div>\r\n                        <NavLink to='/'>\r\n                        <span className=\"material-icons btn\">\r\n                            home</span>\r\n                            </NavLink>\r\n                            </div>\r\n                        <div>\r\n                        <NavLink to='/board'>\r\n                        <button className=\"flex align-center btn\">\r\n                            <DashboardIcon/> \r\n                          <span className=\"boards-btn\">Boards</span>\r\n                            </button>\r\n                            </NavLink>\r\n                            </div>\r\n                    </div>\r\n                     <input className=\"btn board-nav-filter\" type=\"text\" placeholder=\"Filter here\"></input>\r\n                    </div>\r\n\r\n                    <img src={Logo} className=\"logo-img\"/>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // loggedinUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout\r\n}\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader);\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { routes } from './routes'\r\nimport { connect } from 'react-redux'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport { AppHeader } from './cmps/AppHeader'\r\nimport { onLogout } from './store/actions/user-actions.js'\r\nimport { boardService } from './services/board-service.js'\r\nimport { updatePosition, resetFilterBy, addActivity } from './store/actions/board-actions.js';\r\n\r\n// import { boardService } from './store/boardService.js'\r\n// import { createMuiTheme, ThemeProvider, } from '@material-ui/core'\r\n\r\nclass _App extends Component {\r\n\r\n  onDragStart = () => {\r\n    this.props.resetFilterBy(this.props.board._id)\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n\r\n    const { destination, source, draggableId, type } = result\r\n\r\n    if (!destination) return\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return\r\n    if (!draggableId) return\r\n\r\n    if (type === 'card') {\r\n      const startGroupIndex = this.props.board.groups.findIndex(group => group.id === source.droppableId)\r\n      const endGroupIndex = this.props.board.groups.findIndex(group => group.id === destination.droppableId)\r\n\r\n      // moving in the same group\r\n      if (source.droppableId === destination.droppableId) {\r\n\r\n        const currGroup = this.props.board.groups.find(group => group.id === source.droppableId)\r\n        const currCard = currGroup.cards.find(card => card.id === draggableId)\r\n        const newCardsGroup = Array.from(currGroup.cards)\r\n        newCardsGroup.splice(source.index, 1)\r\n        newCardsGroup.splice(destination.index, 0, currCard)\r\n        const newGroup = { ...currGroup, cards: newCardsGroup }\r\n        const newGroups = [...this.props.board.groups]\r\n        newGroups[startGroupIndex] = newGroup\r\n        const newBoard = { ...this.props.board, groups: newGroups }\r\n        this.props.updatePosition(newBoard)\r\n        return\r\n      }\r\n\r\n      // moving between groups\r\n      if (source.droppableId !== destination.droppableId) {\r\n        const destinationGroup = this.props.board.groups.find(group => group.id === destination.droppableId)\r\n        const formerGroup = this.props.board.groups.find(group => group.id === source.droppableId)\r\n        const newGroup = this.props.board.groups.find(group => group.id === destination.droppableId)\r\n        // try to find card in old group\r\n        let currCard = formerGroup.cards.find(card => card.id === draggableId)\r\n        // find card in new group (for some reason it is there after merge, probably groups update before this function is called)\r\n        if (!currCard) currCard = newGroup.cards.find(card => card.id === draggableId)\r\n        const formerCardIndex = formerGroup.cards.findIndex(card => card.id === draggableId)\r\n        const newCardsArray = Array.from(destinationGroup.cards)\r\n\r\n        // time analysis\r\n        const currCardTime = currCard.timeAnalysis\r\n\r\n        if (currCardTime) {\r\n          currCardTime.timeInGroupsMap[currCardTime.currGroup.groupId] =\r\n            currCardTime.timeInGroupsMap[currCardTime.currGroup.groupId] + (Date.now() - currCardTime.currGroup.enteredAt) ||\r\n            (Date.now() - currCardTime.currGroup.enteredAt)\r\n          currCardTime.currGroup = {\r\n            groupId: destinationGroup.id,\r\n            enteredAt: Date.now()\r\n          }\r\n        }\r\n\r\n        newCardsArray.splice(destination.index, 0, currCard)\r\n        formerGroup.cards.splice(formerCardIndex, 1)\r\n\r\n        const newGroups = [...this.props.board.groups]\r\n        newGroups[startGroupIndex] = formerGroup\r\n        newGroups[endGroupIndex].cards = newCardsArray\r\n\r\n        const newBoard = { ...this.props.board, groups: newGroups }\r\n        this.props.updatePosition(newBoard, draggableId)\r\n\r\n        // add activity\r\n\r\n        const cardTitle = boardService.getCardTitleById(draggableId, newBoard)\r\n        const partialActivity = {\r\n          \"txt\": 'moved the card',\r\n          \"commentTxt\": '',\r\n          \"card\": {\r\n            \"id\": draggableId,\r\n            \"title\": cardTitle\r\n          }\r\n        }\r\n\r\n        const activity = boardService.createActivity(partialActivity)\r\n        this.props.addActivity(newBoard, activity)\r\n        return\r\n      }\r\n    }\r\n\r\n    if (type === 'group') {\r\n      const newGroupsOrder = Array.from(this.props.board.groups)\r\n      const currGroup = this.props.board.groups.find(group => group.id === draggableId)\r\n      newGroupsOrder.splice(source.index, 1)\r\n      newGroupsOrder.splice(destination.index, 0, currGroup)\r\n\r\n      const newBoard = {\r\n        ...this.props.board,\r\n        groups: newGroupsOrder\r\n      }\r\n\r\n      this.props.updatePosition(newBoard)\r\n      // this.props.updateBoard(newBoard)\r\n      return\r\n\r\n    }\r\n  }\r\n  ///////////\r\n\r\n  render() {\r\n    const { onLogout, loggedinUser,style } = this.props\r\n    return (\r\n      // <ThemeProvider theme={theme}>\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <div className=\"app-bg\"\r\n          style={style.bgImg ? { backgroundImage: style.bgImg } :\r\n            { backgroundColor: style.boardColor}}>\r\n\r\n          <div className=\"main-container flex column full\" >\r\n            <AppHeader onLogout={onLogout} loggedinUser={loggedinUser} />\r\n            <Switch className=\"content\">\r\n              {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n      /* </ThemeProvider> */\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedinUser: state.userModule.loggedinUser,\r\n    board: state.boardModule.currBoard,\r\n    style: state.boardModule.style\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updatePosition,\r\n  resetFilterBy,\r\n  addActivity,\r\n  onLogout\r\n}\r\n\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    currBoard: {},\r\n    boards: [],\r\n    style: {},\r\n    fullLabel: false\r\n\r\n}\r\n\r\nconst defaultStyle = {\r\n    backgroundImage: null\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARD':\r\n            return { ...state, currBoard: action.board }\r\n        case 'SET_BOARDS':\r\n            return { ...state, boards: action.boards }\r\n        case 'REMOVE_BOARD':\r\n            return { ...state, currBoard: state.currBoard.filter(currBoard => currBoard._id !== action.currBoardId) }\r\n        case 'SET_DEFAULT_STYLE':\r\n            return {...state,style: defaultStyle}\r\n        case 'SET_STYLE':\r\n            return { ...state, style: action.style }\r\n        case 'TOGGLE_FULL_LABEL':\r\n            if (state.fullLabel) return { ...state, fullLabel: false }\r\n            return { ...state, fullLabel: true }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { userService } from '../../services/user-service.js'\r\n\r\n\r\nconst initialState = {\r\n    loggedinUser: userService.getLoggedinUser(),\r\n    users: [{\r\n        \"_id\": \"5f6a2528973d861c5d78c355\",\r\n        \"fullName\": \"Koral Sabbah\",\r\n        \"imgUrl\": \"https://www.linkpicture.com/q/koral.jpg\"\r\n      },\r\n      {\r\n        \"_id\": \"5f6a2528973d861c5d78c328\",\r\n        \"fullName\": \"Ksenia Braginsky\",\r\n        \"imgUrl\": \"https://www.linkpicture.com/q/ks.jpg\"\r\n      },\r\n      {\r\n        \"_id\": \"5f6a2528973d861c5d78c322\",\r\n        \"fullName\": \"Miriam Baranovska\",\r\n        \"imgUrl\": \"https://www.linkpicture.com/q/mir.jpg\"\r\n      },\r\n      {\r\n        \"_id\": \"5f6a2528973d861c5d78c323\",\r\n        \"fullName\": \"Avi Kohen\",\r\n        \"imgUrl\": \"../../imgs/miriam.jpg\"\r\n      }\r\n    ]\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        case 'SIGN_UP':\r\n            return { ...state, loggedinUser: action.user }\r\n        case 'LOGOUT_USER':\r\n            console.log(action.user);\r\n            return { ...state, loggedinUser: action.user }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/board-reducer';\r\nimport { userReducer } from './reducers/user-reducer'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    userModule: userReducer\r\n})\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App'\r\nimport reportWebVitals from './reportWebVitals';\r\n// import './assets/css/index.css'\r\nimport './assets/styles/styles.scss'\r\nimport { store } from \"./store/store.js\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","\r\nexport const utils = {\r\n    makeId,\r\n    delay,\r\n    getRandomInt\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\n","import io from 'socket.io-client'\r\nimport {httpService} from './http-service'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log(x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.on('lala', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n        \r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}"],"sourceRoot":""}