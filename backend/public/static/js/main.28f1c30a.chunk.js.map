{"version":3,"sources":["services/board-service.js","services/card-service.js","assets/imgs/homenew.jpg","assets/imgs/logo.png","store/actions/board-actions.js","cmps/groups/AddNewGroup.jsx","cmps/cards/card-sidebar/LabelEditModal.jsx","cmps/cards/card-sidebar/LabelPalette.jsx","cmps/BoardHeader/MemberPreview.jsx","services/storage-service.js","services/user-service.js","store/actions/user-actions.js","cmps/BoardHeader/AddMemberModal.jsx","cmps/cards/CardPreviewDueDate.jsx","cmps/cards/CardDueDateSetter.jsx","cmps/cards/CardMenu.jsx","cmps/cards/CardLabels.jsx","cmps/cards/CardPreview.jsx","cmps/NewItem.jsx","cmps/groups/GroupMenu.jsx","cmps/groups/GroupPreview.jsx","cmps/groups/GroupList.jsx","cmps/cards/CardDescription.jsx","cmps/cards/CardAddComment.jsx","cmps/cards/card-sidebar/ActivityLog.jsx","cmps/cards/CardTitle.jsx","cmps/cards/CardChecklistTodo.jsx","cmps/cards/CardChecklist.jsx","cmps/cards/CardChecklistContainer.jsx","cmps/cards/CardNewChecklist.jsx","cmps/BoardHeader/MemberList.jsx","cmps/cards/card-sidebar/CardSidebar.jsx","cmps/cards/CardDetailsAttachment.jsx","cmps/cards/CardImagesList.jsx","services/cloudService.js","cmps/cards/CardImgUpload.jsx","cmps/cards/CoverSelector.jsx","cmps/cards/CardDetails.jsx","cmps/BoardHeader/BoardTitle.jsx","cmps/BoardNav.jsx","cmps/BoardHeader/SideBar/ColorsGallery.jsx","cmps/BoardHeader/SideBar/PhotosGallery.jsx","cmps/BoardHeader/SideBar/ChangeBackground.jsx","cmps/BoardHeader/SideBar/SideBar.jsx","pages/BoardApp.jsx","cmps/BoardPreview.jsx","cmps/NewBoardColor.jsx","assets/bgColors/bgColors.js","cmps/AddNewBoard.jsx","pages/Boards.jsx","routes.js","pages/Home.jsx","cmps/AppHeader.jsx","App.jsx","reportWebVitals.js","store/reducers/board-reducer.js","store/reducers/user-reducer.js","store/store.js","index.js","services/utils-service.js","services/http-service.js","services/socket-service.js"],"names":["boardService","getBoardById","addNewBoard","updateBoard","createActivity","partialActivity","activity","utils","makeId","txt","commentTxt","Date","now","card","id","title","group","getCardTitleById","cardId","board","cardTitle","groups","forEach","cards","query","createImage","imgRef","type","src","createdAt","add","a","httpService","post","addedBoard","get","newBoard","socketService","emit","put","_id","boardName","boardColor","isArchived","description","labels","activities","createdBy","fullName","imgUrl","style","fontClr","bgImg","members","archivedAt","console","log","cardService","addCard","cardTxt","groupId","JSON","parse","stringify","newCard","dueDate","attachments","timeAnalysis","timeInGroupsMap","currGroup","enteredAt","byMember","map","push","require","loadBoard","dispatch","off","on","setStyle","onRemoveGroup","groupIdx","findIndex","splice","updateCard","find","cardIdx","unshift","addActivity","_AddNewGroup","state","newGroupTitle","handleChange","event","target","value","setState","onSubmit","ev","preventDefault","props","onAddNewGroup","this","className","onBlur","setNotEditing","closeNewGroup","placeholder","autoFocus","onChange","onMouseDown","onClick","Component","mapDispatchToProps","groupTitle","groupToPush","AddNewGroup","connect","boardModule","currBoard","LabelEditModal","label","action","setLabelEditId","onRemoveLabel","IconButton","size","name","defaultValue","color","Fragment","required","hidden","defaultChecked","htmlFor","_LabelPalette","labelEditId","onAddLabel","newLabel","labelName","newColor","addLabel","onEditLabel","labelColor","updatedLabel","updateLabel","labelId","removeLabel","onToggleLabelToCard","labelIdx","slice","isShownOnBoard","cardLabel","fontSize","updatedlabel","LabelPalette","MemberPreview","testImage","url","callback","timer","timeout","timedOut","img","Image","onerror","onabort","clearTimeout","onload","setTimeout","setImgResult","res","getStyle","backgroundImage","getName","newName","split","firstLetter","charAt","toUpperCase","secondLetter","length","_className","showBig","Tooltip","getInitials","storageService","load","key","localStorage","getItem","save","val","setItem","clear","gUsers","email","username","password","userService","login","logout","signup","getLoggedinUser","getUsers","remove","update","credentials","user","_saveLocalUser","userInfo","sessionStorage","userId","filter","userIndex","indexOf","_user","loadAllUsers","users","onLogout","_AddMemberModal","searchLetters","toggleUser","member","removeCardMember","onRemoveCardMember","removeMember","addCardMember","onAddCardMember","addToMembers","getMembers","search","allUsers","ClickAwayListener","onClickAway","onCloseModal","autoCorrect","autoComplete","includes","userToPush","memberIdx","AddMemberModal","userModule","CardPreviewDueDate","daysRemaining","date","month","toLocaleString","day","getDate","parsedDate","Math","abs","year","getFullYear","displayTime","hour","toLocaleTimeString","dueDateClass","CardDueDateSetter","isPopperOpen","anchor","setDefaultDate","openModal","closeModal","onSetDueDate","formDate","timestamp","getTime","submitDueDate","onUpdateDueDate","onRemoveDueDate","getDisplayDateBtn","alwaysShowButton","ref","applyStyle","fontWeight","parseDate","timeArray","getMonth","getHours","getMinutes","i","toString","React","createRef","prevProps","prevState","current","Popover","anchorOrigin","vertical","horizontal","transformOrigin","open","anchorEl","onClose","onBackdropClick","noValidate","TextField","InputLabelProps","shrink","_CardMenu","isOpen","offsetTop","offsetLeft","width","txtValue","isMemberListOpen","isLabelPaletteShown","submitCard","Promise","resolve","then","getParentPos","pos","parentElement","getBoundingClientRect","top","left","onKeyPress","onUpdateHeader","onDeleteCard","deleteddAt","onRemoveCard","onToggleLabelPaletteShown","toggleCardMembersMenu","onUpdateCardMembers","onChangeMembers","getCurrTitle","Dialog","stopPropagation","position","Button","textTransform","pplyStyle","allExistingUsers","CardMenu","CardLabels","cardLabels","boardLabels","displayLabel","boardLabel","preview","isFull","idx","onClickLabel","_CardPreview","isEditing","componentDidMount","getCardPreviewAttachments","cardAtt","Object","keys","getCardPreviewHoldDesc","cardDesc","getCardPreviewComments","cardComm","getCardPreviewChecklist","checklists","doneTodos","totalTodos","doneClass","checklist","todos","todo","isDone","getCardPreviewMembers","cardMembers","cardMembersEl","getCardPreviewAttrs","attrs","every","item","att","onDetails","history","onOpenCardActions","onSetEditing","onToggleLabels","toggleFullLabels","onSetNotEditing","getCardCover","cardCover","cover","backgroundColor","cardAttachStyle","draggableId","index","provided","draggableProps","dragHandleProps","innerRef","fullLabel","CardPreview","NewItem","setEditing","getIsEditing","onKeyDown","placeHolderTxt","addBtnTxt","addItemTxt","onAdd","border","_GroupMenu","removeGroup","toggleMenu","GroupMenu","_GroupPreview","currGroupName","currGroupId","isMenuShown","isChangeGroupShown","onAddCard","getAddItemTxt","handleChangeGroupName","setNewGroupName","isShown","closeChangeGroupName","openHeadrEdit","onOpenChangeGroupName","groupName","spellCheck","onFocus","select","droppableId","droppableProps","trim","newGroupName","replace","GroupPreview","GroupList","isNewGroupShown","onAddGroup","direction","CardDescription","setDescriptionFromProps","onSave","onUpdateDesc","getDescriptionTxt","CardAddComment","onAddComment","getNewCommentDisplay","placeholer","Accordion","expanded","classes","root","AccordionSummary","aria-controls","AccordionDetails","disabled","ActivityLog","boardId","displayMode","to","timeago","CircularProgress","CardTitle","onChangeText","onUpdate","titleTxt","CardChecklistTodo","isNew","removeText","getNewTodoDisplay","getTodoClassName","getTextBox","Checkbox","checked","onCheck","onRemove","updateChecklist","updateTodo","checkStatus","getActivityTxt","activityTxt","displayCompleted","CardChecklist","showDialog","tasksCompleted","totalTasks","setTasksStatus","toggleDisplayCompleted","getDisplayCheckedBtn","btnContent","onRemoveChecklist","closeDialog","openDialog","getTotalTasks","getCompletedTasks","checklistItem","getPercentCompleted","round","onUpdateChecklist","newTodo","todoIdx","LinearProgress","variant","DialogTitle","DialogContent","DialogContentText","DialogActions","CardChecklistContainer","CardNewChecklist","getNewChecklistDisplay","MemberList","isModalShown","onShowModal","renderMemberList","renderCardDetailsMemberList","class","CardSidebar","toggleLabelPalette","onUpdateChecklists","isUploading","toggleUploadDropzone","anchorRef","toggleCoverSelector","CardDetailsAttachment","updateAttFromProps","attachment","bool","CardImagesList","cloudService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","method","body","json","data","secure_url","CardImgUpload","setUploading","submitImage","onAddImage","files","acceptedFiles","cancelButtonText","submitButtonText","maxFileSize","toggleOpen","showPreviews","showFileNamesInPreview","CoverSelector","setCoverFromProps","colors","onSelectCover","onRemoveCover","getImageEls","imageEls","el","getColorEls","toggleList","_CardDetails","commentsOnly","isLabelPaletteShowing","isCoverSelectorShown","isUploadZoneOpen","getCardDetails","foundCard","onCloseCard","onUpdateCover","aria-label","newActivity","toggleCommentsOnly","getFilteredActivities","cardActivities","onUpdateTitle","newChecklist","getLabels","openEditLabelsModal","renderAttachments","urlImg","newImg","onUpdateAttachments","newAttachment","displayDate","toggleDisplayMembers","onArchiveCard","CardDetails","withRouter","BoardTitle","_BoardNav","onUpdateBoardTitle","updateBoardTitle","onToggleSidebar","boardTitle","BoardNav","_ColorsGallery","colorSelected","ColorsGallery","_PhotosGallery","imgSelected","PhotosGallery","_ChangeBackground","chooseBackground","onSelect","ChangeBackground","_SideBar","sideBarTitle","titleClicked","DynamicCmp","SideBar","_BoardApp","lastReceivedUpdateAt","isSidebarShowing","match","params","setup","lastUpdate","BoardApp","BoardPreview","boardImg","NewBoardColor","isSelected","onSetColor","allBoardColors","_AddNewBoard","selectedColor","newBoardName","setDefaultStyle","AddNewBoard","_Boards","isCreateBoardOpen","onRedirect","onCloseCreateBoard","openNewBoardModal","loadBoards","boards","redirectPath","removeBoard","routes","path","component","Logo","HeroImg","href","_AppHeader","isNewBoardModalShown","isLoginDrawerShown","isUserDetailsOpen","loggedinUser","toggleModal","showLoginDrawer","nativeEvent","stopImmediatePropagation","hideLoginDrawer","onOpenUserDetails","onCloseUserDetails","AppHeader","_App","onDragStart","resetFilterBy","onDragEnd","result","destination","source","startGroupIndex","endGroupIndex","currCard","newCardsGroup","Array","from","newGroup","newGroups","updatePosition","destinationGroup","formerGroup","formerCardIndex","newCardsArray","currCardTime","newGroupsOrder","route","exact","newBoardPositioning","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","defaultStyle","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","currBoardId","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","possible","floor","random","delay","ms","getRandomInt","min","max","ceil","BASE_URL","axios","Axios","create","withCredentials","endpoint","ajax","delete","dir","response","status","location","assign","socket","io","reconnection","eventName","cb","removeAllListeners","terminate","createSocketService"],"mappings":"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","file":"static/js/main.28f1c30a.chunk.js","sourcesContent":["import { httpService } from './http-service'\r\nimport { socketService } from './socket-service'\r\n// var cloudinary = require('cloudinary').v2;\r\nimport { utils } from './utils-service'\r\n\r\nexport const boardService = {\r\n    getBoardById,\r\n    addNewBoard,\r\n    updateBoard,\r\n    createActivity,\r\n    getCardTitleById,\r\n    query,\r\n    createImage,\r\n    add\r\n}\r\n\r\n\r\nasync function add(board) {\r\n    const addedBoard = await httpService.post(`board`, board);\r\n    return addedBoard\r\n}\r\n\r\nasync function getBoardById(id) {\r\n    return await httpService.get(`board/${id}`)\r\n}\r\n\r\nasync function query() {\r\n    return await httpService.get(`board`)\r\n}\r\n\r\nasync function updateBoard(newBoard) {\r\n    socketService.emit('updated board', newBoard)\r\n    return await httpService.put(`board/${newBoard._id}`, newBoard)\r\n}\r\n\r\nfunction createActivity(partialActivity) {\r\n    // const user = userService.getLoggedInUser()\r\n\r\n    const activity = {\r\n        \"id\": utils.makeId(),\r\n        \"txt\": partialActivity.txt,\r\n        \"commentTxt\": partialActivity.commentTxt,\r\n        \"createdAt\": Date.now(),\r\n        \"byMember\": {\r\n            // \"_id\": user._id,\r\n            // \"fullName\": user.fullName,\r\n            // \"imgUrl\": user.imgUrl\r\n        }\r\n    }\r\n    if (partialActivity.card) {\r\n        activity.card = {\r\n            \"id\": partialActivity.card.id,\r\n            \"title\": partialActivity.card.title\r\n        }\r\n    }\r\n    if (!partialActivity.group) {\r\n        activity.group = { ...partialActivity.group }\r\n    }\r\n\r\n    return activity\r\n}\r\n\r\nfunction getCardTitleById(cardId, board) {\r\n    let cardTitle;\r\n    board.groups.forEach(group => group.cards.forEach(card => {\r\n        if (card.id === cardId) {\r\n            cardTitle = card.title\r\n        }\r\n    }))\r\n    return cardTitle\r\n}\r\n\r\nfunction createImage(imgRef) {\r\n    const attachment = {\r\n        type: 'img',\r\n        id: utils.makeId(),\r\n        src: imgRef,\r\n        title: 'Image',\r\n        createdAt: Date.now()\r\n    }\r\n    return attachment\r\n}\r\n\r\nasync function addNewBoard(boardName, boardColor) {\r\n    const newBoard = {\r\n        title: boardName,\r\n        isArchived: false,\r\n        createdAt: Date.now,\r\n        description: 'Board\\'s description',\r\n        labels: [{\r\n            \"id\": \"l101\",\r\n            \"name\": \"Default\",\r\n            \"color\": \"green\"\r\n        },\r\n        {\r\n            \"id\": \"l102\",\r\n            \"name\": \"Default\",\r\n            \"color\": \"yellow\"\r\n        },\r\n        {\r\n            \"id\": \"l103\",\r\n            \"name\": \"Default\",\r\n            \"color\": \"orange\"\r\n        },\r\n        {\r\n            \"id\": \"l104\",\r\n            \"name\": \"Default\",\r\n            \"color\": \"red\"\r\n        },\r\n        {\r\n            \"id\": \"l105\",\r\n            \"name\": \"Default\",\r\n            \"color\": \"purple\"\r\n        },\r\n        {\r\n            \"id\": \"l106\",\r\n            \"name\": \"Default\",\r\n            \"color\": \"blue\"\r\n        }\r\n        ],\r\n        activities: [],\r\n        createdBy: { // update from currUser\r\n            // _id: 'u101', // update from user\r\n            fullName: 'Abi Abambi',\r\n            imgUrl: 'http://some-img'\r\n        },\r\n        style: {\r\n            // id: utils.makeId(),\r\n            fontClr: '#f9f9f9',\r\n            bgImg: null,\r\n            boardColor\r\n        },\r\n        members: [{ // update from currUser\r\n            _id: 'u101', // update from user\r\n            fullName: 'Abi Abambi',\r\n            imgUrl: 'http://some-img'\r\n        }],\r\n        groups: [{\r\n            id: utils.makeId(),\r\n            title: 'Add New Card Title',\r\n            description: \"description\",\r\n            archivedAt: false,\r\n            labels: [],\r\n            cards: []\r\n        }]\r\n    }\r\n\r\n    console.log(newBoard);\r\n\r\n    const addedBoard = await httpService.post(`board`, newBoard);\r\n    return addedBoard\r\n    // push new board to board collection and forword user to the new route\r\n}","\r\nimport { utils } from './utils-service'\r\nimport { boardService } from './board-service';\r\n\r\nexport const cardService = {\r\n    addCard\r\n}\r\n\r\n\r\nasync function addCard(board, cardTxt, groupId) {\r\n    console.log('groupId',groupId);\r\n    const newBoard = JSON.parse(JSON.stringify(board))\r\n    const newCard = {\r\n        id: utils.makeId(),\r\n        title: cardTxt,\r\n        description: '',\r\n        archivedAt: null,\r\n        members: [],\r\n        labels: [],\r\n        createdAt: Date.now(),\r\n        dueDate: null,\r\n        attachments: null,\r\n        timeAnalysis:{ \r\n            timeInGroupsMap:{},\r\n            currGroup: {\r\n                groupId,\r\n                enteredAt: Date.now()\r\n            }\r\n         },\r\n        byMember: {\r\n            // add user info here from session storage:\r\n            //                         \"byMember\": {\r\n            //                             \"_id\": \"u101\",\r\n            //                             \"username\": \"Tal\",\r\n            //                             \"fullname\": \"Tal Tarablus\",\r\n            //                             \"imgUrl\": \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n            //                         },\r\n        }\r\n    }\r\n    newBoard.groups.map(group => {\r\n        if (group.id === groupId) {\r\n            group.cards.push(newCard)\r\n            return group\r\n        }\r\n        return group\r\n    })\r\n\r\n    // const partialActivity = {\r\n    //     \"txt\": 'create this card',\r\n    //     \"commentTxt\": '',\r\n    //     \"card\": {\r\n    //       \"id\": newCard.id,\r\n    //       \"title\": cardTxt\r\n    //     }\r\n    //   }\r\n\r\n      \r\n    // const activity = boardService.createActivity(partialActivity)\r\n    //   if (!newBoard.activities) newBoard.activities = []\r\n    //   newBoard.activities.push(activity)\r\n    // await boardService.updateBoard(newBoard)\r\n    return newBoard\r\n}\r\n","export default __webpack_public_path__ + \"static/media/homenew.eed7a37b.jpg\";","export default __webpack_public_path__ + \"static/media/logo.5e046566.png\";","import { boardService } from '../../services/board-service'\r\nimport { socketService } from '../../services/socket-service';\r\nimport { utils } from '../../services/utils-service'\r\nconst { cardService } = require(\"../../services/card-service\");\r\n\r\n\r\nexport function loadBoard(id) {\r\n    return async dispatch => {\r\n\r\n        try {\r\n            const board = await boardService.getBoardById(id);\r\n            dispatch({ type: 'SET_BOARD', board })\r\n            socketService.emit('join board', id) // join('u101')\r\n            socketService.off('updated board')\r\n            socketService.on('updated board', board => {\r\n                dispatch({ type: 'SET_BOARD', board })\r\n            })\r\n            // socketService.on('task-updated', task => {\r\n            //     dispatch({ type: 'saveTask', task })\r\n            // })\r\n\r\n        } catch (err) {\r\n            console.log('boardStore: Error in loadBoard', err)\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoards() {\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.query()\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('ReviewActions: err in loadBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addNewBoard(boardName, boardColor = null) {\r\n    \r\n    return async dispatch => {\r\n      const newBoard = await boardService.addNewBoard(boardName, boardColor)\r\n      dispatch({ type: 'SET_BOARD', newBoard });\r\n      return newBoard\r\n    }\r\n  }\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            dispatch({ type: 'REMOVE_REVIEW', boardId })\r\n        } catch (err) {\r\n            console.log('ReviewActions: err in removeBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setStyle(style) {\r\n    return async dispatch => {\r\n        dispatch({ type: 'SET_STYLE', style })\r\n    }\r\n}\r\n\r\nexport function setDefaultStyle() {\r\n    return async dispatch => {\r\n        dispatch({ type: 'SET_DEFAULT_STYLE' })\r\n    }\r\n}\r\n\r\nexport function updateBoard(board) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onRemoveGroup(board, groupId) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const groupIdx = newBoard.groups.findIndex(group => groupId === group.id)\r\n            newBoard.groups.splice(groupIdx, 1)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error deleting card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onAddNewGroup(board, groupTitle) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const groupToPush = {\r\n                id: utils.makeId(),\r\n                title: groupTitle,\r\n                cards: [],\r\n                archivedAt: false,\r\n                style: {}\r\n            }\r\n            newBoard.groups.push(groupToPush)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('error adding new group', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addCard(board, cardTxt, groupId) {\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = await cardService.addCard(board, cardTxt, groupId)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard });\r\n            boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('ReviewActions: err in addCard', err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function updateCard(board, newCard, activity) {\r\n    return async dispatch => {\r\n        try {\r\n            // replicate board\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            // find the group idx\r\n            const groupIdx = newBoard.groups.findIndex(group => group.cards.find(card => card.id === newCard.id))\r\n            // find the card idx\r\n            const cardIdx = newBoard.groups[groupIdx].cards.findIndex(card => card.id === newCard.id)\r\n            // replace the card content\r\n            newBoard.groups[groupIdx].cards[cardIdx] = newCard\r\n\r\n            if (activity) {\r\n                if (!newBoard.activities) {\r\n                    newBoard.activities = []\r\n                }\r\n                newBoard.activities.unshift(activity)\r\n            }\r\n\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n\r\n        } catch (err) {\r\n            console.log('error updating card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onRemoveCard(board, cardId) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const groupIdx = newBoard.groups.findIndex(group => group.cards.find(card => card.id === cardId))\r\n            const cardIdx = newBoard.groups[groupIdx].cards.findIndex(card => card.id === cardId)\r\n            newBoard.groups[groupIdx].cards.splice(cardIdx, 1)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error deleting card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setNewGroupName(groupId, groupName, board) {\r\n    return async dispatch => {\r\n        try {\r\n            const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n            if (groupName === board.groups[groupIdx].title || !groupName.trim()) return\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const newGroupName = groupName.replace(/\\s+/g, \" \")\r\n            newBoard.groups[groupIdx].title = newGroupName.trim()\r\n            dispatch({\r\n                type: 'SET_BOARD',\r\n                board: newBoard\r\n            })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('error setting group name', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addActivity(board, activity) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            if (!newBoard.activities) newBoard.activities = []\r\n            newBoard.activities.unshift(activity)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n            console.log(newBoard)\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function toggleFullLabels() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_FULL_LABEL' })\r\n    }\r\n}\r\n\r\nexport function addLabel(board, newLabel) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            newLabel.id = utils.makeId()\r\n            if (!newBoard.labels) newBoard.labels = [];\r\n            newBoard.labels.push(newLabel)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error adding label', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeLabel(board, labelId) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            const labelIdx = newBoard.labels.findIndex(label => label.id === labelId)\r\n            newBoard.labels.splice(labelIdx, 1)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error removing label', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateLabel(board, updatedlabel) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(board))\r\n            newBoard.labels = newBoard.labels.map(label => {\r\n                if (label.id === updatedlabel.id) label = updatedlabel\r\n                return label\r\n            })\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error updating label', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeCardMember(board, card, id) {\r\n    return async dispatch => {\r\n        const newCard = JSON.parse(JSON.stringify(card))\r\n\r\n        if (!newCard.members) newCard.members = []\r\n\r\n        newCard.members = newCard.members.filter(user => user._id !== id)\r\n\r\n        // replicate board\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        // find the group idx\r\n        const groupIdx = newBoard.groups.findIndex(group => group.cards.find(card => card.id === newCard.id))\r\n        // find the card idx\r\n        const cardIdx = newBoard.groups[groupIdx].cards.findIndex(card => card.id === newCard.id)\r\n        // replace the card content\r\n\r\n        newBoard.groups[groupIdx].cards[cardIdx] = newCard\r\n\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\nexport function addCardMember(board, card, { _id, fullName, imgUrl }) {\r\n    return async dispatch => {\r\n        const userToPush = {\r\n            _id,\r\n            fullName,\r\n            imgUrl\r\n        }\r\n\r\n        const newCard = JSON.parse(JSON.stringify(card))\r\n\r\n        if (!newCard.members) newCard.members = []\r\n\r\n        newCard.members.push(userToPush)\r\n\r\n        // replicate board\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        // find the group idx\r\n        const groupIdx = newBoard.groups.findIndex(group => group.cards.find(card => card.id === newCard.id))\r\n        // find the card idx\r\n        const cardIdx = newBoard.groups[groupIdx].cards.findIndex(card => card.id === newCard.id)\r\n        // replace the card content\r\n\r\n        newBoard.groups[groupIdx].cards[cardIdx] = newCard\r\n\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\nexport function addToMembers({ _id, fullName, imgUrl }, board) {\r\n    return async dispatch => {\r\n        const userToPush = {\r\n            _id,\r\n            fullName,\r\n            imgUrl\r\n        }\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        newBoard.members.unshift(userToPush)\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\nexport function removeMember(id, board) {\r\n    return async dispatch => {\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        const memberIdx = newBoard.members.findIndex(member => member._id === id)\r\n        newBoard.members.splice(memberIdx, 1)\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\nexport function resetFilterBy(boardId) {\r\n    return async dispatch => {\r\n        const board = await boardService.getBoardById(boardId);\r\n        dispatch({ type: 'SET_BOARD', board });\r\n        dispatch({ type: 'RESET_FILTER_BY' })\r\n    }\r\n}\r\n\r\nexport function updatePosition(newBoardPositioning, cardId) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_BOARD', board: newBoardPositioning })\r\n            let newBoard = JSON.parse(JSON.stringify(newBoardPositioning))\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoardTitle(board, boardTitle) {\r\n    return async dispatch => {\r\n        let newBoard = JSON.parse(JSON.stringify(board))\r\n        newBoard.title = boardTitle\r\n        dispatch({ type: 'SET_BOARD', board: newBoard })\r\n        await boardService.updateBoard(newBoard) // updating the DB\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////\r\n// function makeId(length = 8) {\r\n//     let text = '';\r\n//     const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n//     for (let i = 0; i < length; i++) {\r\n//         text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n//     }\r\n\r\n//     return text;\r\n// }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { onAddNewGroup } from '../../store/actions/board-actions.js';\r\n\r\nexport class _AddNewGroup extends Component {\r\n\r\n    state = {\r\n        newGroupTitle: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ newGroupTitle: '' })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const title = event.target.value        \r\n        this.setState({ newGroupTitle: title })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.newGroupTitle) return\r\n        this.props.onAddNewGroup(this.props.board ,this.state.newGroupTitle)\r\n        this.setState({ newGroupTitle: '' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"new-group-form\">\r\n                    <form onBlur={this.setNotEditing} onSubmit={this.onSubmit} >\r\n                    <input onBlur={() => this.props.closeNewGroup()} \r\n                    placeholder=\"Enter list title\" \r\n                    type=\"text\" autoFocus onChange={this.handleChange} \r\n                        value={this.state.newGroupTitle ? this.state.newGroupTitle : ''}\r\n                    />\r\n                        <div className=\"save-btn-container\">\r\n                            <button className=\"save-btn\" onMouseDown={this.onSubmit}>Add List</button>\r\n                        <button onClick={ ()=> this.props.closeNewGroup() } >close</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onAddNewGroup\r\n};\r\n\r\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nexport function LabelEditModal({ label, action, setLabelEditId, onRemoveLabel, card }) {\r\n    const colors = ['green', 'yellow', 'orange', 'red', 'purple', 'blue', 'pink'];\r\n    return (\r\n        <div className=\"label-edit-modal\">\r\n            <IconButton className=\"close-modal\" size=\"small\"\r\n                onClick={() => setLabelEditId()}>\r\n                <CloseOutlinedIcon />\r\n            </IconButton>\r\n            <form onSubmit={(ev) => action(ev, label)}>\r\n                <input type=\"text\" name=\"labelName\"\r\n                    defaultValue={label ? label.name : ''}\r\n                    placeholder=\"Enter label's name...\" />\r\n                <div className=\"color-palette color-picker-container\">\r\n                    {colors.map(color => <React.Fragment key={color}>\r\n                        <input required hidden type=\"radio\" id={color} name=\"newColor\"\r\n                            value={color}\r\n                            defaultChecked={label ? color === label.color : 'pink'} />\r\n                        <label htmlFor={color}>\r\n                            <div className={`color-picker ${color}`}></div>\r\n                        </label>\r\n                    </React.Fragment>)}\r\n                </div>\r\n                <div className=\"save-cancel-btns\">\r\n                    <button className=\"save-btn\">Save</button>\r\n                    {label && <button className=\"cancel-btn\" onClick={() => onRemoveLabel(label.id)}>Delete</button>}\r\n                </div>\r\n            </form>\r\n        </div >\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { IconButton } from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { addLabel, updateLabel, removeLabel, updateCard } from '../../../store/actions/board-actions.js';\r\nimport { LabelEditModal } from './LabelEditModal.jsx';\r\n\r\n\r\nclass _LabelPalette extends Component {\r\n\r\n    state = {\r\n        labelEditId: null\r\n    }\r\n\r\n    setLabelEditId = (labelEditId = null) => {\r\n        this.setState({ labelEditId });\r\n    }\r\n\r\n    onAddLabel = (ev) => {\r\n        ev.preventDefault();\r\n        const newLabel = {\r\n            name: ev.target.labelName.value,\r\n            color: ev.target.newColor.value\r\n        }\r\n        this.props.addLabel(this.props.board, newLabel);\r\n        this.setLabelEditId();\r\n    }\r\n\r\n    onEditLabel = (ev, label) => {\r\n        ev.preventDefault();\r\n        const labelName = ev.target.labelName.value;\r\n        const labelColor = ev.target.newColor.value;\r\n        const updatedLabel = { ...label, name: labelName, color: labelColor }\r\n        this.props.updateLabel(this.props.board, updatedLabel);\r\n        this.setLabelEditId();\r\n    }\r\n\r\n    onRemoveLabel = (labelId) => {\r\n        this.props.removeLabel(this.props.board, labelId);\r\n        this.setLabelEditId();\r\n    }\r\n\r\n    onToggleLabelToCard = (card, labelId) => {\r\n        // console.log('card\\'s labels before:', card.labels);\r\n        const labelIdx = card.labels.findIndex(label => label.id === labelId);\r\n        card.labels = (labelIdx === -1)\r\n            ? [...card.labels, { id: labelId }]\r\n            : [...card.labels.slice(0, labelIdx), ...card.labels.slice(labelIdx + 1)];\r\n        // console.log('card\\'s labels after:', card.labels);\r\n\r\n        const activity = this.props.createActivity('updated a label')\r\n        this.props.updateCard(this.props.board, card, activity);\r\n    }\r\n\r\n    render() {\r\n        const { board, card } = this.props;\r\n        return <div className={this.props.isShownOnBoard ? \"card-preview-label-palette\" : \"card-details-label-palette\"} style={this.props.style}>\r\n        <ul className=\"clean-list\">\r\n            <div className=\"labels-modal flex column\">\r\n            <span className=\"labels-modal-header\">Labels</span>\r\n            {board.labels && board.labels.map(label => <li key={label.id} className=\"label\">\r\n                <div className=\"flex justify-space-between label\">\r\n                    <div className={`label-color ${label.color} flex justify-space-between`}\r\n                        onClick={card\r\n                            ? () => this.onToggleLabelToCard(card, label.id)\r\n                            : () => this.setLabelEditId(\r\n                                this.state.labelEditId === label.id\r\n                                    ? null\r\n                                    : label.id\r\n                            )}>\r\n                        <span>{label.name}</span>\r\n                        {card && card.labels.find(cardLabel => cardLabel.id === label.id) && <CheckIcon className=\"tick-symbol\" fontSize=\"small\" />}\r\n                    </div>\r\n                    <IconButton className=\"edit-label-btn\" onClick={() => this.setLabelEditId(\r\n                        this.state.labelEditId === label.id\r\n                            ? null\r\n                            : label.id\r\n                    )}>\r\n                        <EditOutlinedIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    {!card && <IconButton className=\"remove-label-btn\" onClick={() => this.onRemoveLabel(label.id)}>\r\n                        <DeleteOutlinedIcon fontSize=\"small\" />\r\n                    </IconButton>}\r\n                    {this.state.labelEditId === label.id && <LabelEditModal\r\n                        label={label}\r\n                        action={this.onEditLabel}\r\n                        onRemoveLabel={this.onRemoveLabel}\r\n                        setLabelEditId={this.setLabelEditId} />}\r\n                </div>\r\n            </li>)}\r\n            <li className=\"label add-label\">\r\n                <div className=\"label-color add-label\"\r\n                    onClick={() => this.setLabelEditId(\r\n                        this.state.labelEditId === 'addLabel'\r\n                            ? null\r\n                            : 'addLabel'\r\n                    )}>\r\n                    <div className=\"new-label-button btn\">Create a new label</div>\r\n                </div>\r\n                {this.state.labelEditId === 'addLabel' && <LabelEditModal\r\n                    action={this.onAddLabel}\r\n                    setLabelEditId={this.setLabelEditId} />}\r\n            </li>\r\n            </div>\r\n        </ul>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addLabel,\r\n    updateLabel,\r\n    removeLabel,\r\n    updateCard\r\n}\r\n\r\nexport const LabelPalette = connect(mapStateToProps, mapDispatchToProps)(_LabelPalette);","\r\nimport { Tooltip } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n\r\nexport class MemberPreview extends Component {\r\n\r\n    state = {\r\n        imgUrl: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.testImage(this.props.imgUrl, this.setImgResult)\r\n    }\r\n\r\n    testImage = (url, callback, timeout = 5000) => {\r\n\r\n        var timedOut = false, timer;\r\n        var img = new Image();\r\n        img.onerror = img.onabort = function () {\r\n            if (!timedOut) {\r\n                clearTimeout(timer);\r\n                callback(url, \"error\");\r\n            }\r\n        };\r\n        img.onload = function () {\r\n            if (!timedOut) {\r\n                clearTimeout(timer);\r\n                callback(url, \"success\");\r\n            }\r\n        };\r\n        img.src = url;\r\n        timer = setTimeout(function () {\r\n            timedOut = true;\r\n            // reset .src to invalid URL so it stops previous\r\n            // loading, but doesn't trigger new load\r\n            img.src = \"//!!!!/test.jpg\";\r\n            callback(url, \"timeout\");\r\n        }, timeout);\r\n    }\r\n\r\n    \r\n    getInitials(name) {\r\n        if (!name) return\r\n        const newName = name.split(' ')\r\n        const firstLetter = newName[0].charAt(0).toUpperCase()\r\n        let secondLetter = ''\r\n        if (newName.length > 1) {\r\n            secondLetter = newName[1].charAt(0).toUpperCase()\r\n        }\r\n        const initials = firstLetter + secondLetter\r\n        return initials\r\n    }\r\n\r\n    setImgResult = (url, res) => {\r\n        if (res === 'success') this.setState({ imgUrl: url })\r\n    }\r\n\r\n    getStyle = () => {\r\n        if (this.state.imgUrl) return { backgroundImage: `url(${this.props.imgUrl})` }\r\n        return {}\r\n    }\r\n\r\n    getName = () => {\r\n        if (this.props.name) return this.props.name\r\n        return ''\r\n    }\r\n\r\n    render() {\r\n        let _className = \"member-preview\" + (this.props.showBig ? \" member-preview-big\" : \"\")\r\n\r\n        return (\r\n            <Tooltip title={this.getName()}>\r\n                <div className={_className} style={this.getStyle()}>\r\n                    {(this.state.imgUrl) ? <React.Fragment /> : this.getInitials(this.props.name)}\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n","export const storageService = {\r\n\tload,\r\n\tsave,\r\n\tclear\r\n}\r\n\r\nfunction load(key) {\r\n\treturn JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nfunction save(key, val) {\r\n\tlocalStorage.setItem(key, JSON.stringify(val));\r\n}\r\n\r\nfunction clear(key){\r\n\tlocalStorage.clear(key)\r\n}","\r\nimport { storageService } from './storage-service'\r\nimport { httpService } from './http-service'\r\n\r\nvar gUsers = [\r\n    {\r\n        _id: '1',\r\n        email: 'miri@gmail.com',\r\n        username: 'miri',\r\n        password: 'miri123',\r\n        imgUrl: 'img.png'\r\n    }\r\n]\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getUsers,\r\n    // getById,\r\n    remove,\r\n    update,\r\n    // increaseScore\r\n}\r\n\r\n\r\nasync function login(credentials) {\r\n    try {\r\n        //await httpService.post('auth/login', credentials)\r\n        const user = gUsers.find(user => user.username === credentials.username)\r\n        if (user) return _saveLocalUser(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function signup(userInfo) {\r\n    try {\r\n        const user = {}//await httpService.post('auth/signup', userInfo)\r\n        return _saveLocalUser(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        sessionStorage.clear()\r\n        return //await httpService.post('auth/logout')\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser') || 'null')\r\n}\r\n\r\nasync function getUsers() {\r\n    return gUsers;\r\n    return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nasync function getById(userId) {\r\n    return gUsers.find(user => user._id === userId)\r\n\r\n    return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nasync function remove(userId) {\r\n    gUsers = gUsers.filter(user => user._id !== userId)\r\n\r\n    return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    let userIndex = gUsers.indexOf(_user => _user._id !== user.id);\r\n    gUsers.splice(userIndex, 1, user);\r\n\r\n    return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}","import { userService } from '../../services/user-service.js'\r\n\r\nexport function onLogin(credentials) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('UserActions: err in login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadAllUsers(){\r\n    return async dispatch=>{\r\n        const users = await userService.getUsers()\r\n        dispatch({ type: 'SET_USERS', users })\r\n    }\r\n}\r\n\r\nexport function onSignup(userInfo) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userInfo)\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('UserActions: err in signup', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.logout()\r\n            dispatch({ type: 'SET_USER', user: null })\r\n        } catch (err) {\r\n            console.log('UserActions: err in logout', err)\r\n        }\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { MemberPreview } from './MemberPreview'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { addToMembers, removeMember, addCardMember, removeCardMember } from '../../store/actions/board-actions.js';\r\nimport { loadAllUsers } from '../../store/actions/user-actions.js';\r\n\r\n\r\nexport class _AddMemberModal extends Component {\r\n\r\n    state = {\r\n        searchLetters: ''\r\n    }\r\n\r\n    toggleUser=(user)=>{\r\n        // Not a member\r\n        if (!this.props.members.find(member => member._id === user._id)) {\r\n            if (!this.props.card) {\r\n                this.props.addToMembers(user, this.props.board)\r\n            }\r\n            else {\r\n                this.props.addCardMember(this.props.board, this.props.card, user)\r\n                this.props.onAddCardMember(user)\r\n            }\r\n        } else {\r\n            \r\n            if (!this.props.card) {\r\n                this.props.removeMember(user._id, this.props.board)\r\n            }\r\n            else {\r\n                this.props.removeCardMember(this.props.board, this.props.card, user._id)\r\n                this.props.onRemoveCardMember(user)\r\n            }   \r\n        }\r\n    }\r\n \r\n    getMembers=(id)=>{\r\n        return this.props.members.find(member => {\r\n            if (member._id === id) return true\r\n            else return false\r\n        })\r\n    }\r\n\r\n    handleChange = ({ target }) =>{\r\n        const search = target.value\r\n        this.setState({ searchLetters: search })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { members, allUsers } = this.props\r\n        \r\n        if(!members) return <div>loading</div>\r\n        return (\r\n            <ClickAwayListener onClickAway={this.props.onCloseModal}>\r\n                <div className=\"add-member-modal\" style={this.props.style}>\r\n                    <h3>Members</h3>\r\n                    <input type=\"search\" onChange={this.handleChange} name=\"search-member\" id=\"\" autoCorrect=\"off\" autoComplete=\"off\"/>\r\n                    <div className=\"add-members-container\">\r\n                        {allUsers.filter(user => \r\n                        !this.state.searchLetters ? true : user.fullName.includes(this.state.searchLetters)).map(user => {\r\n                                return <div key={user._id} className=\"member-container\" onClick={() => this.toggleUser(user)}>\r\n                                    <MemberPreview name={user.fullName} imgUrl={user.imgUrl} /> \r\n                                    <p>{user.fullName}</p>\r\n                                    {this.getMembers(user._id) && <div><CheckIcon /></div>}\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ClickAwayListener>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        allUsers: state.userModule.users\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadAllUsers,\r\n    addToMembers,\r\n    addCardMember,\r\n    removeMember,\r\n    removeCardMember\r\n};\r\n\r\nexport const AddMemberModal = connect(mapStateToProps, mapDispatchToProps)(_AddMemberModal);\r\n","import React from 'react'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\r\n\r\nexport function CardPreviewDueDate(props) {\r\n    if (!props.dueDate) return <React.Fragment />\r\n    let daysRemaining = (props.dueDate - Date.now()) / 1000 / 60 / 60 / 24\r\n    \r\n    const date = new Date(props.dueDate)\r\n    \r\n    let month = date.toLocaleString(\"en-US\", { month: \"short\" })\r\n    let day = date.getDate()\r\n    \r\n    let parsedDate = `${month} ${day}`\r\n    if (Math.abs(daysRemaining) > 365) {\r\n        let year = date.getFullYear()\r\n        parsedDate += `, ${year}`\r\n    }\r\n    if (props.displayTime) {\r\n        let hour = date.toLocaleTimeString()\r\n        parsedDate += ` at ${hour}`\r\n     \r\n    }\r\n\r\n    let dueDateClass = 'card-preview-due-date-container card-preview-due-date-container-'\r\n    switch (true) {\r\n        case (daysRemaining > 7):\r\n            dueDateClass += 'long'\r\n            break\r\n        case (daysRemaining > 3):\r\n            dueDateClass += 'medium'\r\n            break\r\n        case (daysRemaining >= 0):\r\n            dueDateClass += 'due-soon'\r\n            break\r\n        default:\r\n            dueDateClass += 'overdue'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {dueDateClass}>\r\n            <AccessTimeIcon fontSize=\"inherit\" />\r\n              {parsedDate}\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { Popover, TextField, Button } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n// import { DatePicker } from '@material-ui/pickers'\r\nimport { CardPreviewDueDate } from './CardPreviewDueDate';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nexport class CardDueDateSetter extends Component {\r\n\r\n    state = {\r\n        date: null,\r\n        isPopperOpen: false,\r\n        anchor: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.anchor = React.createRef();\r\n        this.setState({ anchor: this.anchor })\r\n        this.setDefaultDate()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.dueDate !== this.props.dueDate) return this.setDefaultDate()\r\n    }\r\n\r\n    setDefaultDate = () => {\r\n        this.setState({ date: this.props.dueDate })\r\n    }\r\n    openModal = () => {\r\n        this.setState({ isPopperOpen: true })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isPopperOpen: false })\r\n    }\r\n\r\n    onSetDueDate = (ev) => {\r\n        const formDate = ev.target.value\r\n        const timestamp = new Date(formDate).getTime()\r\n        this.setState({ date: timestamp })\r\n    }\r\n\r\n    submitDueDate = () => {\r\n        this.props.onUpdateDueDate(this.state.date)\r\n    }\r\n\r\n    onRemoveDueDate = (ev) => {\r\n        this.setState({ date: null }, this.submitDueDate)\r\n        this.closeModal()\r\n    }\r\n\r\n    getDisplayDateBtn = () => {\r\n        if (!this.state.date || this.props.alwaysShowButton) return <button className=\"flex\" onClick={this.openModal} ref={this.anchor}><ScheduleIcon /><span style={this.props.applyStyle ? {fontWeight: '500'} : {}} className=\"sidebar-button-text\">Set due date</span></button>\r\n\r\n        return (\r\n            <div onClick={this.openModal} ref={this.anchor} className=\"set-due-date-expanded\">\r\n                <CardPreviewDueDate dueDate={this.state.date} displayTime={this.props.displayTime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    parseDate = () => {\r\n        let date = new Date(this.state.date)\r\n        if (!this.state.date) date = new Date(Date.now())\r\n        let year = date.getFullYear()\r\n        let month = (date.getMonth() + 1)\r\n        let day = date.getDate()\r\n        let hour = date.getHours()\r\n        let minute = date.getMinutes()\r\n        let timeArray = [year, month, day, hour, minute]\r\n        timeArray = timeArray.map(i => {\r\n            i = i.toString()\r\n            if (i.length === 1) i = `0${i}`\r\n            return i\r\n        })\r\n        const parsedDate = `${year}-${timeArray[1]}-${timeArray[2]}T${timeArray[3]}:${timeArray[4]}`\r\n        return parsedDate\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.anchor) return <React.Fragment />\r\n        return (\r\n            <>\r\n                {this.getDisplayDateBtn()}\r\n                {(!this.state.anchor.current) ? <React.Fragment /> :\r\n                    <Popover\r\n                        anchorOrigin={{\r\n                            vertical: 'center',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        open={this.state.isPopperOpen}\r\n                        anchorEl={this.state.anchor.current}\r\n                        onClose={this.closeModal}\r\n                        onBackdropClick={this.closeModal}\r\n                    >\r\n                        <form noValidate>\r\n                            <TextField\r\n                                onBlur={this.submitDueDate}\r\n                                onChange={this.onSetDueDate}\r\n                                id=\"datetime-local\"\r\n                                label=\"Set Due Date\"\r\n                                type=\"datetime-local\"\r\n                                value={this.parseDate()}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </form>\r\n                        <div className=\"remove-date-btn-container\">\r\n                            <button className=\"cancel-btn\" onClick={this.onRemoveDueDate}>Remove Due Date</button>\r\n                        </div>\r\n                    </Popover>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","// // Edit card preivew - should have edit labels, change memebers change due date and archive\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateCard, onRemoveCard, addActivity } from '../../store/actions/board-actions.js'\r\nimport { boardService } from '../../services/board-service.js'\r\nimport { LabelPalette } from '../cards/card-sidebar/LabelPalette';\r\nimport { AddMemberModal } from '../BoardHeader/AddMemberModal';\r\nimport { CardDueDateSetter } from './CardDueDateSetter';\r\nimport { Button, Dialog } from '@material-ui/core';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\n\r\n\r\n\r\nclass _CardMenu extends Component {\r\n\r\n    state = {\r\n        isOpen: false,\r\n        offsetTop: null,\r\n        offsetLeft: null,\r\n        width: null,\r\n        txtValue: '',\r\n        isMemberListOpen: false,\r\n        isLabelPaletteShown: false\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    submitCard = (card) => {\r\n        return new Promise(resolve => {\r\n            this.props.updateCard(this.props.board, card).then(() => {\r\n                this.onClose()\r\n            })\r\n        })\r\n    }\r\n\r\n    getParentPos = () => {\r\n        const pos = this.props.anchorEl.current.parentElement.getBoundingClientRect()\r\n        console.log('pos', pos);\r\n        this.setState({ offsetTop: pos.top, offsetLeft: pos.left, width: pos.width })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getParentPos()\r\n        this.getCurrTitle()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // if (prevState.isMemberListOpen) {\r\n        //     this.setState({ isMemberListOpen: prevState.isMemberListOpen })\r\n        // }\r\n    }\r\n\r\n\r\n    onChange = (ev) => {\r\n        const txtValue = ev.target.value\r\n        this.setState({ txtValue })\r\n    }\r\n\r\n    onKeyPress = (ev) => {\r\n        if (ev.key === 'Enter') return this.onUpdateHeader()\r\n    }\r\n\r\n    onUpdateHeader = () => {\r\n        let card = { ...this.props.props.card }\r\n        card.title = this.state.txtValue\r\n        this.submitCard(card)\r\n    }\r\n\r\n    onDeleteCard = () => {\r\n        let card = { ...this.props.props.card }\r\n        card.deleteddAt = Date.now()\r\n        this.props.onRemoveCard(this.props.board, card.id)\r\n    }\r\n\r\n\r\n    getCurrTitle() {\r\n        const txtValue = this.props.props.card.title\r\n        this.setState({ txtValue })\r\n    }\r\n\r\n    createActivity = (txt) => {\r\n        const activity = {\r\n            \"txt\": txt,\r\n            \"commentTxt\": '',\r\n            \"card\": {\r\n                \"id\": this.props.props.card.id,\r\n                \"title\": this.props.props.card.title\r\n            }\r\n        }\r\n\r\n        console.log('CREATING ACTIVITY FOR CARD ' + JSON.stringify(activity))\r\n\r\n        return boardService.createActivity(activity)\r\n    }\r\n\r\n    onToggleLabelPaletteShown = () => {\r\n        this.setState({ isLabelPaletteShown: !this.state.isLabelPaletteShown, isMemberListOpen: false })\r\n    }\r\n\r\n    toggleCardMembersMenu = () => {\r\n        this.setState({ isMemberListOpen: !this.state.isMemberListOpen, isLabelPaletteShown: false })\r\n    }\r\n\r\n    onUpdateCardMembers = async (card) => {\r\n        this.setState({ card }, () => {\r\n            const activity = this.createActivity('edited the card members')\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    onAddCardMember = (user) => {\r\n        var members = JSON.parse(JSON.stringify(this.props.props.card.members))\r\n        members.unshift(user)\r\n        this.onChangeMembers(members, \"added a member\")\r\n    }\r\n\r\n    onRemoveCardMember = (user) => {\r\n        var members = JSON.parse(JSON.stringify(this.props.props.card.members))\r\n        members = members.filter(_user => _user._id != user._id)\r\n        this.onChangeMembers(members, \"removed a member\")\r\n    }\r\n\r\n    onChangeMembers = (members, txt) => {\r\n        const card = { ...this.props.props.card }\r\n\r\n        card.members = members;\r\n        console.log(members)\r\n        this.setState({ card }, () => {\r\n            const activity = this.createActivity(txt)\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    onUpdateDueDate = async (dueDate) => {\r\n        let card = { ...this.props.props.card }\r\n        card.dueDate = dueDate\r\n\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated due date')\r\n            await this.submitCard(card, activity)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Dialog onClose={this.props.onClose} open={true} >\r\n\r\n                <div className=\"card-edit-container\" onClick={(ev) => ev.stopPropagation()} style={{\r\n                    left: `${this.state.offsetLeft}px`,\r\n                    top: `${this.state.offsetTop}px`,\r\n                    position: 'fixed'\r\n                }}>\r\n                    <div className=\"card-edit-left\">\r\n                        <div className=\"card-preview\" style={{ width: `${this.state.width}px` }}>\r\n\r\n                            <form>\r\n                                <textarea className=\"card-preview-title-edit\" autoFocus onKeyPress={this.onKeyPress} onChange={this.onChange} value={this.state.txtValue} />\r\n                            </form>\r\n                        </div>\r\n                        <button className=\"save-btn\" onClick={this.onUpdateHeader}>Save</button>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"card-edit-right\">\r\n                        <div className=\"card-preview-edit-actions-container\">\r\n\r\n                            <Button style={{textTransform: 'none'}} onClick={this.onDeleteCard}><ArchiveOutlinedIcon /> <span>Delete card</span></Button>\r\n                            <Button style={{textTransform: 'none'}} onClick={this.onToggleLabelPaletteShown}><LabelIcon /><span>Edit labels</span></Button>\r\n                            <Button style={{textTransform: 'none'}} ref={this.ref} onClick={this.toggleCardMembersMenu}><PeopleAltOutlinedIcon /><span>Edit members</span></Button>\r\n                            <CardDueDateSetter pplyStyle={true} dueDate={this.props.props.card.dueDate} onUpdateDueDate={this.onUpdateDueDate} alwaysShowButton={true} />\r\n                            <Button style={{textTransform: 'none'}} onClick={this.onClose}><CloseRoundedIcon /><span>Close</span></Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {this.state.isLabelPaletteShown && <LabelPalette\r\n                        createActivity={this.createActivity}\r\n                        card={this.props.props.card}\r\n                        isShownOnBoard={true}\r\n                        style={{\r\n                            left: `${-34}px`,\r\n                            top: `${58}px`,\r\n                            position: 'relative'\r\n                        }}/>}\r\n                    {(this.state.isMemberListOpen) ? <AddMemberModal \r\n                    ref={this.ref}\r\n                    onCloseModal={this.toggleCardMembersMenu} \r\n                    allExistingUsers={this.props.board.members} \r\n                    card={this.props.props.card} \r\n                    members={this.props.props.card.members}\r\n                    onAddCardMember={this.onAddCardMember}\r\n                    onRemoveCardMember={this.onRemoveCardMember} \r\n                    style={{\r\n                        left: `${92}px`,\r\n                        top: `${78}px`,\r\n                        position: 'relative'\r\n                    }}/> : <React.Fragment />}\r\n                </div>\r\n            </Dialog >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    updateCard,\r\n    onRemoveCard,\r\n    addActivity\r\n};\r\n\r\nexport const CardMenu = connect(mapStateToProps, mapDispatchToProps)(_CardMenu);\r\n","import React from 'react'\r\n\r\nexport function CardLabels(props) {\r\n    if (!props.cardLabels || !props.boardLabels) return <React.Fragment />\r\n    \r\n    function displayLabel(label) {\r\n        const boardLabel = props.boardLabels.find(boardLabel => boardLabel.id === label.id)\r\n        if (!props.preview) return (\r\n            <div className={`card-details-label ${boardLabel?.color}`}>\r\n                    {boardLabel?.name}\r\n            </div>\r\n        )\r\n        if (props.isFull) return (\r\n            <div className={`card-preview-full-label ${boardLabel?.color}`}>\r\n                    {boardLabel?.name}\r\n            </div>\r\n        )\r\n        return (\r\n            <div className={`card-preview-collapsed-label ${boardLabel?.color}`}>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-preview-labels flex\">\r\n            {props.cardLabels.map((label, idx) => {\r\n                return <div onClick={props.onClickLabel} key={idx} > {displayLabel(label)} </div>\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CardMenu } from './CardMenu'\r\nimport { CardPreviewDueDate } from './CardPreviewDueDate';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { CardLabels } from './CardLabels'\r\nimport { toggleFullLabels } from '../../store/actions/board-actions.js';\r\nimport { MemberPreview } from '../BoardHeader/MemberPreview';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport AttachFileOutlinedIcon from '@material-ui/icons/AttachFileOutlined';\r\nimport SubjectOutlinedIcon from '@material-ui/icons/SubjectOutlined';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\n\r\n\r\nclass _CardPreview extends Component {\r\n    state = {\r\n        isEditing: false\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    componentDidMount = () => {\r\n        console.log('des', this.props.card.attachments);\r\n\r\n    }\r\n    getCardPreviewAttachments = () => {\r\n        const cardAtt = this.props.card.attachments\r\n        if (!cardAtt || !Object.keys(cardAtt) || !cardAtt.length) return null\r\n        return <div key=\"0\" className=\"card-preview-attr\"><AttachFileOutlinedIcon style={{ fontSize: 16 }} /></div>\r\n    }\r\n\r\n    getCardPreviewHoldDesc = () => {\r\n        const cardDesc = this.props.card.description\r\n        if (!cardDesc || !Object.keys(cardDesc)) return null\r\n        return <div key=\"1\" className=\"card-preview-attr\"><SubjectOutlinedIcon style={{ fontSize: 16 }} /></div>\r\n    }\r\n\r\n    getCardPreviewComments = () => {\r\n        let activities = this.props.board.activities\r\n        if (!activities) return null\r\n        let cardComm = activities.filter(activity => activity.card.id === this.props.card.id)\r\n        cardComm = cardComm.filter(activity => {\r\n            if (activity.commentTxt) return activity\r\n            return null\r\n        })\r\n        if (!cardComm || !cardComm.length) return null\r\n\r\n        return <div key=\"3\" className=\"card-preview-attr\"><ChatBubbleOutlineRoundedIcon style={{ fontSize: 16 }} /> {cardComm.length}</div>\r\n    }\r\n\r\n    getCardPreviewChecklist = () => {\r\n        const checklists = this.props.card.checklists\r\n        if (!checklists || !checklists.length) return null\r\n\r\n        let doneTodos = 0\r\n        let totalTodos = 0\r\n\r\n        let doneClass = ''\r\n\r\n        checklists.forEach(checklist => {\r\n            checklist.todos.forEach(todo => {\r\n                if (todo.isDone) {\r\n                    doneTodos += 1\r\n                }\r\n                totalTodos += 1\r\n            })\r\n        })\r\n\r\n        if (!totalTodos) return null\r\n        if (doneTodos === totalTodos) {\r\n            doneClass = \" card-preview-checklist-counter-done\"\r\n        }\r\n        return <div key=\"2\" className={`card-preview-attr card-preview-checklist-counter${doneClass}`}><CheckBoxOutlinedIcon style={{ fontSize: 16 }} /> <span>{doneTodos}/{totalTodos}</span> </div>\r\n    }\r\n\r\n    getCardPreviewMembers = () => {\r\n        const cardMembers = this.props.card.members\r\n        if (!cardMembers || !cardMembers.length) return <React.Fragment />\r\n\r\n        const cardMembersEl = cardMembers.map((member, idx) => {\r\n            return <MemberPreview key={idx} name={member.fullName} imgUrl={member.imgUrl} />\r\n        })\r\n\r\n        return <div className=\"card-preview-members\">{cardMembersEl}</div>\r\n    }\r\n\r\n    getCardPreviewAttrs = () => {\r\n        // test all attributes\r\n        const attrs = [\r\n            this.getCardPreviewAttachments(),\r\n            this.getCardPreviewHoldDesc(),\r\n            this.getCardPreviewChecklist(),\r\n            this.getCardPreviewComments()\r\n        ]\r\n        // if at least one of them is true OR there are members assing to this card - render the card-preview-attrs div\r\n        if (this.getCardPreviewMembers() || !attrs.every(item => !item)) {\r\n            return (<div className=\"card-preview-attrs\">\r\n                {attrs.map((att, idx) => {\r\n                    if (att) return att\r\n                    return <React.Fragment key={idx} />\r\n                })}\r\n            </div>)\r\n        }\r\n    }\r\n\r\n\r\n    onDetails = (ev) => {\r\n        this.props.history.push(`/board/${this.props.board._id}/card/${this.props.card.id}`)\r\n    }\r\n\r\n    onOpenCardActions = (ev) => {\r\n        ev.stopPropagation()\r\n        this.onSetEditing()\r\n    }\r\n\r\n    onToggleLabels = (ev) => {\r\n        ev.stopPropagation()\r\n        return this.props.toggleFullLabels()\r\n    }\r\n\r\n    onSetEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    onSetNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    getCardCover = () => {\r\n\r\n        const cardCover = this.props.card.cover\r\n        if (!cardCover) return <React.Fragment />\r\n        if (!cardCover.src) return (\r\n            // if there is no src - this is a color\r\n            <div className=\"card-preview-cover-color\" style={{backgroundColor:cardCover.color}} />\r\n        )\r\n        return (\r\n            <div className=\"card-preview-cover-image\" style={{backgroundImage:`url(${cardCover.src})`}} /> \r\n        )\r\n    }\r\n\r\n    render() {\r\n        const card = this.props.card\r\n        const strStyle=\"url(\"+card.attachments+\")\"\r\n\r\n        const cardAttachStyle = {\r\n            backgroundImage: strStyle,\r\n        }\r\n\r\n        return (\r\n            <Draggable\r\n                draggableId={this.props.card.id}\r\n                index={this.props.index}>\r\n                {(provided) => (\r\n                    <section className=\"card-preview flex justify-space-between\"\r\n                        onClick={this.onDetails}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"attach-div\">\r\n                            <div className=\"card-preview-start\">\r\n                            {this.getCardCover()}\r\n                            {card.attachments && <img className=\"img-attach\" style={cardAttachStyle}/>}\r\n                                <CardLabels onClickLabel={this.onToggleLabels}\r\n                                    isFull={this.props.fullLabel}\r\n                                    cardLabels={card.labels}\r\n                                    boardLabels={this.props.board.labels}\r\n                                    preview={true}\r\n                                />\r\n                                <div className=\"card-preview-header\">\r\n                                    {card.title}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-preview-attrs\">\r\n                                <CardPreviewDueDate dueDate={card.dueDate} />\r\n                                {this.getCardPreviewAttrs()}\r\n                                {this.getCardPreviewMembers()}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"card-btn\" ref={this.ref} onClick={this.onOpenCardActions}>\r\n                            <EditOutlinedIcon fontSize=\"inherit\" />\r\n                            {(this.state.isEditing) ? <CardMenu anchorEl={this.ref} props={this.props} onClose={this.onSetNotEditing} /> : <React.Fragment />}\r\n                        </div>\r\n                        {provided.placeholder}\r\n                    </section>\r\n                )\r\n                }\r\n            </Draggable>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        fullLabel: state.boardModule.fullLabel\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleFullLabels\r\n};\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);","import React, { Component } from 'react'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport class NewItem extends Component {\r\n\r\n    state = {\r\n        isEditing: false,\r\n        txtValue: ''\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        const txtValue = ev.target.value\r\n        this.setState({ txtValue })\r\n    }\r\n\r\n    onKeyPress = (ev) => {\r\n        if (ev.key === 'Enter') this.onSubmit(ev)\r\n    }\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    getIsEditing = () => {\r\n        if (!this.state.isEditing) return (\r\n            <div className=\"new-item-btn\" onClick={this.setEditing}><AddIcon style={{ fontSize: \"20px\" }} />{this.props.addItemTxt}</div>\r\n        )\r\n\r\n        return (\r\n            <div className=\"new-item-form\">\r\n                <form\r\n                    onKeyDown={this.onKeyPress}\r\n                    onBlur={this.setNotEditing}\r\n                    onSubmit={this.onSubmit} >\r\n                    <textarea\r\n                    id=\"add-new-card\"\r\n                        placeholder={this.props.placeHolderTxt}\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        value={this.state.txtValue} />\r\n                    <div className=\"save-btn-container\">\r\n                        <button\r\n                            className=\"save-btn\"\r\n                            onMouseDown={this.onSubmit}>\r\n                            {this.props.addBtnTxt}\r\n                        </button>\r\n                        <CloseIcon className=\"close\" onClick={this.setNotEditing} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.txtValue) return\r\n        await this.props.onAdd(this.state.txtValue)\r\n        const isEditing = false\r\n        const txtValue = ''\r\n        this.setState({ isEditing, txtValue })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ border: \"0px\" }} className=\"new-item-container\">\r\n                {this.getIsEditing()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {onRemoveGroup} from '../../store/actions/board-actions.js'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nexport class _GroupMenu extends Component {\r\n\r\n    addCard = (ev) => {\r\n        // currently adding without moving to focus to new card\r\n        // need to focus on \"NewItem\" and set its state with the help of parent element (same parent)\r\n        ev.stopPropagation()\r\n        this.props.onAdd('New Card..')\r\n    }\r\n\r\n    removeGroup=(ev)=>{\r\n        ev.stopPropagation()\r\n        this.props.onRemoveGroup(this.props.board,this.props.groupId)\r\n        this.props.toggleMenu()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ClickAwayListener onClickAway={() => this.props.toggleMenu()}>\r\n                <div className=\"group-menu-container\">\r\n                    <div>List Actions</div>\r\n                    <div><hr /></div>\r\n                    <div onClick={this.addCard}  className=\"group-menu-item\">+ Add Card...</div>\r\n                    <div className=\"group-menu-item\" >Delete All Cards...</div>\r\n                    <div><hr /></div>\r\n                    <div className=\"group-menu-item\" onClick={this.removeGroup}>Delete This Group...</div>\r\n                </div>\r\n            </ClickAwayListener>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    onRemoveGroup,\r\n};\r\n\r\nexport const GroupMenu = connect(mapStateToProps, mapDispatchToProps)(_GroupMenu);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { CardPreview } from '../cards/CardPreview'\r\nimport { addCard, setNewGroupName } from '../../store/actions/board-actions.js'\r\nimport { NewItem } from '../NewItem'\r\nimport { GroupMenu } from '../groups/GroupMenu'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nclass _GroupPreview extends Component {\r\n    state = {\r\n        currGroupName: '',\r\n        currGroupId: null,\r\n        isMenuShown: false,\r\n        isChangeGroupShown: false\r\n    }\r\n\r\n    onAddCard = (txt) => {\r\n        console.log('group preview',this.props.group);\r\n        return this.props.addCard(this.props.board, txt, this.props.group.id)\r\n    }\r\n\r\n    getAddItemTxt = (txt) => {\r\n        if (this.props.group.cards.length) return 'Add another card'\r\n        return 'Add a card'\r\n    }\r\n\r\n    handleChangeGroupName = (ev) => {\r\n        this.setState({ currGroupName: ev.target.value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { currGroupId, currGroupName } = this.state\r\n        this.props.setNewGroupName(currGroupId, currGroupName, this.props.board)\r\n        this.setState({ isChangeGroupShown: false })\r\n    }\r\n\r\n    toggleMenu = (ev = null) => {\r\n        if (ev) ev.stopPropagation()\r\n        const isShown = !this.state.isMenuShown\r\n        this.setState({ isMenuShown: isShown })\r\n    }\r\n\r\n    onKeyPress = (ev) => {\r\n        if (ev === 'Enter') {\r\n            this.closeChangeGroupName(ev)\r\n        }\r\n    }\r\n\r\n    openHeadrEdit = (ev = null) => {\r\n        if (ev) ev.stopPropagation()\r\n        this.setState({ isChangeGroupShown: true })\r\n    }\r\n\r\n    closeChangeGroupName = (ev) => {\r\n        this.setState({ isChangeGroupShown: false })\r\n        this.onSubmit(ev)\r\n    }\r\n\r\n    onOpenChangeGroupName = (id, groupName) => {\r\n        this.setState({ currGroupId: id, currGroupName: groupName, isChangeGroupShown: true })\r\n    }\r\n    render() {\r\n        const group = this.props.group\r\n\r\n        return (\r\n            <Draggable draggableId={group.id} index={this.props.index}>\r\n                {(provided) => (\r\n                    <section\r\n                        className=\"card-list\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}>\r\n                        <div className=\"group-preview-header\" {...provided.dragHandleProps} >\r\n                            {!this.state.isChangeGroupShown\r\n                                && <div onClick={() =>\r\n                                    this.onOpenChangeGroupName(group.id, group.title)}>{group.title}</div>}\r\n                            {(this.state.isChangeGroupShown) ?\r\n                                <ClickAwayListener onClickAway={this.closeChangeGroupName}>\r\n                                    <form onSubmit={this.onSubmit} className=\"change-group-name\">\r\n                                        <input className=\"change-group-name-input\"\r\n                                            type=\"text\"\r\n                                            name=\"group-name\"\r\n                                            onKeyPress={this.onKeyPress}\r\n                                            onChange={this.handleChangeGroupName}\r\n                                            defaultValue={group.title}\r\n                                            autoFocus spellCheck=\"false\" autoComplete=\"off\"\r\n                                            onFocus={ev => ev.target.select()} />\r\n                                    </form>\r\n                                </ClickAwayListener> : ''}\r\n                            <span onClick={this.toggleMenu} className=\"list-header-extras material-icons dots-icon\">more_horiz</span>\r\n                            {this.state.isMenuShown\r\n                                && <GroupMenu\r\n                                    toggleMenu={this.toggleMenu}\r\n                                    groupId={group.id}\r\n                                    onAdd={this.onAddCard} />}\r\n                        </div>\r\n  \r\n                        <Droppable droppableId={group.id} type=\"card\">\r\n                            {(provided) => (\r\n                                <div className=\"cards-content-wrapper\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}>\r\n                                    {group.cards.map((card, index) => {\r\n                                        if (!card.archivedAt) {\r\n                                            return <CardPreview key={card.id} card={card} index={index} history={this.props.history} />\r\n                                        }\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                        <div className=\"new-card-btn-container\" id=\"add-btn\">\r\n                            <NewItem addItemTxt={this.getAddItemTxt()} placeHolderTxt='Add a card title..' addBtnTxt=\"Add Card\" onAdd={this.onAddCard} />\r\n                        </div>\r\n                    </section>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addCard,\r\n    setNewGroupName\r\n};\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview);","import React, { Component } from 'react'\r\nimport { AddNewGroup } from './AddNewGroup';\r\nimport { GroupPreview } from \"./GroupPreview\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\n\r\n\r\n\r\nexport class GroupList extends Component {\r\n    state = {\r\n        isNewGroupShown: false,\r\n        groups: null,\r\n    }\r\n\r\n    closeNewGroup = () => {\r\n        this.setState({ isNewGroupShown: false })\r\n    }\r\n\r\n    render() {\r\n        const { groups, onAddGroup } = this.props\r\n        if (!groups) return <h1>Loading...</h1>\r\n\r\n        return (\r\n            <section className=\"group-list flex\">\r\n                <Droppable droppableId=\"droppableGroupId\" direction=\"horizontal\" type=\"group\">\r\n                    {(provided) => (\r\n                        <div className=\"flex cards\"\r\n                        {...provided.droppableProps}\r\n                            ref={provided.innerRef}>\r\n\r\n                            {groups.map((group, index) =>\r\n                                <GroupPreview\r\n                                    key={group.id}\r\n                                    id={group.id}\r\n                                    group={group}\r\n                                    index={index}\r\n                                    history={this.props.history} />)}\r\n                            {/* whitespace that stays when we drag something out */}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )\r\n                    }\r\n                </Droppable>\r\n                <div className=\"new-group\" >\r\n                    {!this.state.isNewGroupShown &&\r\n                        <div className=\"add-new-group-text btn\"\r\n                            onClick={() => this.setState({ isNewGroupShown: true })}>\r\n                            <span className=\"material-icons\">add</span>Add another list</div>}\r\n\r\n                    {this.state.isNewGroupShown &&\r\n                        <AddNewGroup\r\n                            // groupId={groupId}\r\n                            closeNewGroup={this.closeNewGroup} />}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport SubjectIcon from '@material-ui/icons/Subject'\r\nexport class CardDescription extends Component {\r\n\r\n    state = {\r\n        description: '',\r\n        isEditing: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setDescriptionFromProps()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.description !== this.props.description) {\r\n            this.setDescriptionFromProps()\r\n        }\r\n    }\r\n\r\n    setDescriptionFromProps = () => {\r\n        let description = this.props.description\r\n        if (!description) description = ''\r\n        this.setState({ description })\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        const description = ev.target.value\r\n        this.setState({ description })\r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    onSave = () => {\r\n        this.props.onUpdateDesc(this.state.description)\r\n        this.setNotEditing()\r\n    }\r\n\r\n    getDescriptionTxt = () => {\r\n        if (!this.state.description) return 'Add a more detailed description…'\r\n        return this.state.description\r\n    }\r\n\r\n    //description-text-box\r\n\r\n    getIsEditing = () => {\r\n        if (!this.state.isEditing) return (\r\n            <pre className=\"description-text-box\" onClick={this.setEditing}>{this.getDescriptionTxt()}</pre>\r\n        )\r\n        return (\r\n            <div className=\"description-active-box flex column\">\r\n                <textarea value={this.state.description} autoFocus onChange={this.onChange}\r\n                    onBlur={this.onSave} placeholder=\"Enter a more detailed description here...\"\r\n                    className=\"modal-desc-textarea\" />\r\n                <button onClick={this.onSave}>Save</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // \r\n    render() {\r\n        // if (!this.state.isReady) return <div>Loading...</div>\r\n        return (\r\n            <div className=\"modal-description flex\">\r\n                <SubjectIcon />\r\n                <div className=\"description-txt flex column\">\r\n                    <h3 className=\"description-title\">Description</h3>\r\n                    {this.getIsEditing()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Accordion, AccordionDetails, AccordionSummary, Button } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport class CardAddComment extends Component {\r\n\r\n    state = {\r\n        isEditing: false,\r\n        txtValue: ''\r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n    onChange = (ev) => {\r\n        this.setState({ txtValue: ev.target.value })\r\n    }\r\n\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (this.state.txtValue) {\r\n            this.props.onAddComment(this.state.txtValue)\r\n            this.setNotEditing()\r\n            this.setState({txtValue:''})\r\n        }\r\n    }\r\n\r\n    onBlur = () => {\r\n        if (!this.state.txtValue) return this.setNotEditing()\r\n        \r\n    }\r\n\r\n    onSave = (ev) => {\r\n        this.onSubmit(ev)\r\n    }\r\n\r\n    getNewCommentDisplay = () => {\r\n        if (this.state.isEditing) return (\r\n            <div className=\"add-comment-editing-container\">\r\n                <form onBlur={this.onBlur} onSubmit={this.onSubmit}>\r\n                    <input className=\"add-comment-input\" type=\"text\" placeholer=\"Write a comment...\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                </form>\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"add-comment-editing-closed\">Write a comment...</div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editing-section-container\" >\r\n            <Accordion expanded={this.state.isEditing} onClick={this.setEditing}  classes={{expanded:'editing-container-expanded', root:'editing-container-collapsed'}}>\r\n                <AccordionSummary\r\n                          aria-controls=\"panel1a-content\"\r\n                          id=\"panel1a-header\"\r\n                        >\r\n                {this.getNewCommentDisplay()}\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n          <div>\r\n          <button className=\"save-btn\" disabled={!this.state.txtValue.length} onClick={this.onSave}>Add Comment</button>\r\n          </div>\r\n        </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as timeago from 'timeago.js';\r\nimport { MemberPreview } from '../../BoardHeader/MemberPreview';\r\n\r\nexport function ActivityLog({ boardId, displayMode, activities }) {\r\n    if (!activities) return <div><CircularProgress /></div>;\r\n    if (activities && activities.length > 15) activities = activities.slice(0, 14);\r\n\r\n\r\n\r\n    return (\r\n        <ul className=\"activity-list clean-list\">\r\n            {activities.map(activity => {\r\n                const byMember = activity.byMember\r\n\r\n                return <li className=\"whole-activity flex align-center\" key={activity.id}>\r\n                    {console.log(byMember)}\r\n                    {(displayMode !== 'user') ? <MemberPreview name={(byMember && byMember.fullName) ? byMember.fullName : \"Guest\"} imgUrl={byMember ? byMember.imgUrl : \"\"} /> : <React.Fragment />}\r\n                    <pre className=\"activity-details\">\r\n                        <div className=\"flex activity-text-box-text\">\r\n                            {(displayMode === 'user') ? <React.Fragment /> : (boardId) ? (<Link to={`/board/${boardId}`}>{byMember.fullName ? byMember.fullName : \"Guest\" + \" \"}</Link>) : `${byMember.fullName ? byMember.fullName : 'Guest'} `}\r\n                            <span>{activity.commentTxt ? 'commented:' : '' + activity.txt}</span>\r\n                            {activity.commentTxt && <div>\r\n                                {activity.commentTxt}\r\n                            </div>}\r\n                            {displayMode !== 'card' && <span>\r\n                                {'in '}\r\n                                {(boardId) ? <Link to={`/board/${boardId}/${activity.card.id}/`}>\r\n                                    {activity.card.title}\r\n                                </Link> : `${activity.card.title}`}\r\n                            </span>}\r\n                        </div>\r\n                        <span>{timeago.format(activity.createdAt)}</span>\r\n                    </pre>\r\n                </li>\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class CardTitle extends Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        isEditing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const txt=this.props.titleTxt\r\n        this.setState({txt})\r\n    }\r\n\r\n    onChangeText = (ev) => {\r\n        const txt = ev.target.value\r\n        this.setState({txt})\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.txt) return\r\n        this.setNotEditing()\r\n        this.props.onUpdate(this.state.txt)\r\n        \r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    getIsEditing = () => {\r\n        if (this.state.isEditing) return (\r\n            <form onBlur={this.setNotEditing} onSubmit={this.onSubmit}>\r\n                <input name=\"header\" type=\"text\" autoFocus value={this.state.txt} onChange={this.onChangeText}/>\r\n            </form>\r\n        )\r\n        return <div onClick={this.setEditing}><h2>{this.state.txt}</h2></div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getIsEditing()}\r\n            </div>\r\n        )\r\n    }\r\n}","import { Button, Checkbox } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport { utils } from '../../services/utils-service'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nexport class CardChecklistTodo extends Component {\r\n\r\n    state = {\r\n        isDone: false,\r\n        isEditing: false,\r\n        txtValue: '',\r\n        isNew: false\r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    removeText = () => {\r\n        this.setState({ txtValue: '' })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.title !== this.props.title || prevProps.isDone !== this.props.isDone) this.updateTodo()\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isNew) this.setState({ isNew: true })\r\n        this.updateTodo()\r\n    }\r\n\r\n    getNewTodoDisplay = () => {\r\n        if (this.state.isEditing) {\r\n            return (\r\n                <form onBlur={this.setNotEditing} onSubmit={this.onSubmit}>\r\n                    <input className=\"checkbox-text-edit\" type=\"text\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                </form>\r\n            )\r\n        }\r\n        return (\r\n            <button className=\"flex checklist-add-todo\" onClick={this.setEditing}>\r\n                <AddIcon className=\"add-icon\" />\r\n                Add an item\r\n            </button>\r\n        )\r\n    }\r\n\r\n    getTodoClassName = () => {\r\n        const doneClass = (this.state.isDone) ? 'todo-done' : 'todo-not-done'\r\n        return `flex justify-space-between checklist-todo-title ${doneClass}`\r\n    }\r\n    getTextBox = () => {\r\n        if (this.state.isEditing) return (\r\n            <React.Fragment>\r\n                <form onBlur={this.setNotEditing} onSubmit={this.onSubmit}>\r\n                    <Checkbox checked={this.state.isDone} onChange={this.onCheck} className=\"checkbox-todo\" />\r\n                    <input className=\"checkbox-text-edit\" type=\"text\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                    <button className=\"save-btn\" type=\"submit\">Save</button>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                <div className={this.getTodoClassName()} onClick={this.setEditing}>\r\n                    <div>\r\n                        <Checkbox checked={this.state.isDone} onChange={this.onCheck} className=\"checkbox-todo\" />\r\n                        {this.state.txtValue}\r\n                    </div>\r\n                    <Button onClick={this.onRemove}>\r\n                        <DeleteOutlineOutlinedIcon className=\"trash-bin-icon\" />\r\n                    </Button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        this.updateChecklist()\r\n    }\r\n\r\n    updateTodo = () => {\r\n\r\n        const todo = this.props.todo\r\n        if (!todo) return\r\n        const txtValue = todo.title\r\n        const isDone = todo.isDone\r\n\r\n        this.setState({ isDone, txtValue })\r\n    }\r\n\r\n    onChange = (ev) => {\r\n\r\n        this.setState({ txtValue: ev.target.value })\r\n    }\r\n\r\n    onCheck = (ev) => {\r\n        let checkStatus = ev.target.checked\r\n        this.setState({ isDone: checkStatus }, () => {\r\n            this.updateChecklist()\r\n        })\r\n    }\r\n\r\n    getActivityTxt = () => {\r\n        let txt;\r\n        if (this.state.isDone) {\r\n            txt = `completed ${this.state.txtValue}`\r\n        } else {\r\n            txt = `marked ${this.state.txtValue} incomplete`\r\n        }\r\n        return txt\r\n    }\r\n    onRemove = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ txtValue: '' }, this.updateChecklist)\r\n    }\r\n\r\n    updateChecklist = () => {\r\n        let id;\r\n        if (this.props.todo) {\r\n            id = this.props.todo.id\r\n        } else {\r\n            id = utils.makeId()\r\n        }\r\n        const todo = {\r\n            id,\r\n            isDone: this.state.isDone,\r\n            title: this.state.txtValue\r\n        }\r\n\r\n        const activityTxt = this.getActivityTxt()\r\n        if (this.state.isNew) {\r\n            this.props.onUpdate(todo)\r\n            this.setState({ txtValue: '' })\r\n        } else {\r\n            this.props.onUpdate(todo, activityTxt)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.displayCompleted && this.state.isDone) return <React.Fragment />\r\n        return (\r\n            <div className=\"checklist-todo\">\r\n                {(this.state.isNew) ? this.getNewTodoDisplay() : this.getTextBox()}\r\n            </div>\r\n        )\r\n    }\r\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, LinearProgress } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport { CardChecklistTodo } from './CardChecklistTodo'\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\nexport class CardChecklist extends Component {\r\n\r\n    state = {\r\n        displayCompleted: true,\r\n        showDialog: false,\r\n        tasksCompleted: 0,\r\n        totalTasks: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTasksStatus()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.checklist !== prevProps.checklist) this.setTasksStatus()\r\n    }\r\n\r\n    setTasksStatus = () => {\r\n        let tasksCompleted = 0\r\n        let totalTasks = 0\r\n\r\n        this.props.checklist.todos.forEach(todo => {\r\n            if (todo.isDone) tasksCompleted += 1\r\n            totalTasks += 1\r\n        });\r\n\r\n        this.setState({ tasksCompleted, totalTasks })\r\n    }\r\n\r\n    toggleDisplayCompleted = () => {\r\n        if (this.state.displayCompleted) return this.setState({ displayCompleted: false })\r\n        return this.setState({ displayCompleted: true })\r\n    }\r\n\r\n    getDisplayCheckedBtn = () => {\r\n        if (!this.state.tasksCompleted) return <React.Fragment />\r\n        let btnContent;\r\n        if (this.state.displayCompleted) {\r\n            btnContent = 'Hide Completed Items'\r\n        } else {\r\n            btnContent = `Show Checked Items (${this.state.tasksCompleted})`\r\n        }\r\n\r\n        return (\r\n            <button onClick={this.toggleDisplayCompleted}>{btnContent}</button>\r\n        )\r\n    }\r\n\r\n    onRemoveChecklist = async () => {\r\n        const checklist = { ...this.props.checklist }\r\n        checklist.title = ''\r\n        let activityTxt = `removed ${this.props.checklist.title}`\r\n        this.props.onUpdate(checklist, activityTxt)\r\n        this.closeDialog()\r\n\r\n    }\r\n\r\n\r\n    openDialog = () => {\r\n        this.setState({ showDialog: true })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ showDialog: false })\r\n    }\r\n\r\n    getTotalTasks = (checklist) => {\r\n        return checklist.todos.length\r\n    }\r\n\r\n    getCompletedTasks = (checklist) => {\r\n        return checklist.todos.filter(checklistItem => checklistItem.isDone).length\r\n    }\r\n\r\n    getPercentCompleted = (checklist) => {\r\n        if (this.getTotalTasks(checklist) == 0) return 100\r\n        const percent = Math.round((this.getCompletedTasks(checklist) / this.getTotalTasks(checklist)) * 100)\r\n        return percent\r\n    }\r\n\r\n    onUpdateChecklist = (newTodo, activityTxt) => {\r\n        // take the updated todo and insert it into the list\r\n        let todos = [...this.props.checklist.todos]\r\n        // find the todo index\r\n        const todoIdx = todos.findIndex(todo => todo.id === newTodo.id)\r\n        // if new title is blank - remove todo\r\n        if (!newTodo.title) {\r\n            todos.splice(todoIdx, 1)\r\n        } else if (todoIdx < 0) { //if the index is less than 0 - this is a new item\r\n            todos.push(newTodo)\r\n        } else {\r\n            todos[todoIdx] = newTodo\r\n        }\r\n        const checklist = { ...this.props.checklist }\r\n        checklist.todos = todos\r\n        this.props.onUpdate(checklist, activityTxt)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"flex justify-space-between\">\r\n                    <div className=\"flex\">\r\n                        <CheckBoxOutlinedIcon />\r\n                        <h3>{this.props.checklist.title}</h3>\r\n                    </div>\r\n                    <div>\r\n                        {this.getDisplayCheckedBtn()}\r\n                        <button className=\"checklist-delete-button\" onClick={this.openDialog}>Delete</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>%{this.getPercentCompleted(this.props.checklist)}</div>\r\n                    <LinearProgress value={this.getPercentCompleted(this.props.checklist)} variant=\"determinate\" />\r\n                </div>\r\n                <main>\r\n                    {this.props.checklist.todos.map(todo => <CardChecklistTodo key={todo.id} displayCompleted={this.state.displayCompleted} todo={todo} onUpdate={this.onUpdateChecklist} />)}\r\n                    <CardChecklistTodo isNew={true} onUpdate={this.onUpdateChecklist} />\r\n                </main>\r\n                <Dialog onClose={this.closeDialog} open={this.state.showDialog}>\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Remove this checklist?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Deleting a checklist is permanent.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.closeDialog} color=\"primary\">\r\n                            Disagree\r\n                        </Button>\r\n                        <Button onClick={this.onRemoveChecklist} color=\"primary\" autoFocus>\r\n                            Agree\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { CardChecklist } from './CardChecklist'\r\n\r\nexport function CardChecklistContainer(props) {\r\n    if (!props.checklists || !props.checklists.length) return <React.Fragment/>\r\n    return (\r\n        <div className=\"checklists-container\">\r\n           {props.checklists.map(checklist => <CardChecklist key={checklist.id} checklist={checklist} addActivity={props.addActivity} onUpdate={props.onUpdate}/>)} \r\n        </div>\r\n    )\r\n}","import { Button } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport { utils } from '../../services/utils-service'\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\n\r\nexport class CardNewChecklist extends Component {\r\n\r\n    state = {\r\n        isEditing: false,\r\n        txtValue: ''\r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n    onChange = (ev) => {\r\n        this.setState({ txtValue: ev.target.value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.txtValue) return this.setNotEditing()\r\n        const checklist = {\r\n            id: utils.makeId(),\r\n            \"title\": this.state.txtValue,\r\n            \"todos\": []\r\n        }\r\n        // const activity =  this.props.addActivity(`added the checklist ${this.state.txtValue}`)\r\n        const activity = `added the checklist ${this.state.txtValue}`\r\n        this.props.onUpdate(checklist, activity)\r\n        this.setState({ txtValue: '' })\r\n        this.setNotEditing()\r\n    }\r\n\r\n\r\n    getNewChecklistDisplay = () => {\r\n        if (this.state.isEditing) return (\r\n            <form className=\"new-checklist-form\" onBlur={this.setNotEditing} onSubmit={this.onSubmit} >\r\n                <input className=\"new-checklist-text\" type=\"text\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                <button className=\"save-btn\" onMouseDown={this.onSubmit}>Save</button>\r\n            </form>\r\n        )\r\n        return (\r\n            <button className=\"flex\" onClick={this.setEditing}><CheckBoxOutlinedIcon /><span className=\"sidebar-button-text\">New checklist</span></button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.getNewChecklistDisplay()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { MemberPreview } from './MemberPreview';\r\nimport { AddMemberModal } from './AddMemberModal';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\n\r\nexport class MemberList extends Component {\r\n\r\n    state = {\r\n        isModalShown: false\r\n    }\r\n\r\n    onShowModal = () => {\r\n        this.setState({ isModalShown: true })\r\n    }\r\n    \r\n    onCloseModal = () => {        \r\n        this.setState({ isModalShown: false })\r\n    }\r\n\r\n    renderMemberList = (members) => { \r\n        return (<div className=\"members-container\">\r\n                    <div className={\"member-preview add-member-btn\" + (this.props.showBig ? \" member-preview-big\" : \"\")} onClick={() => this.onShowModal()}><AddIcon className=\"members-list-add-button\"/></div>\r\n                    <div className=\"add-member-modal-container\">\r\n                        { this.state.isModalShown && <AddMemberModal onCloseModal={this.onCloseModal} allExistingUsers={this.props.allUsers} card={this.props.card} members={this.props.members}/>}\r\n                    </div>\r\n                    {members.map(member => {\r\n                        return <MemberPreview key={member._id}\r\n                            name={member.fullName} \r\n                            imgUrl={member.imgUrl}\r\n                            showBig={this.props.showBig}/>\r\n                    })}\r\n                </div>)}\r\n\r\n    renderCardDetailsMemberList = (members) => {\r\n        return (\r\n        <>\r\n            {this.state.isModalShown && <AddMemberModal onCloseModal={this.onCloseModal} allExistingUsers={this.props.allUsers} card={this.props.card} members={members} onAddCardMember={this.props.onAddCardMember} onRemoveCardMember={this.props.onRemoveCardMember}/>}\r\n            <button class=\"flex sidebar-button\" onClick={() => this.onShowModal()}>\r\n            <PeopleAltIcon/>\r\n            <span class=\"sidebar-button-text\">Members</span>\r\n            </button>\r\n        </>)\r\n    }\r\n    \r\n    render(){\r\n        const members = this.props.card ? this.props.card.members : this.props.members\r\n        if (!members) return <h4>Loading...</h4>\r\n        return !this.props.card ? this.renderMemberList(members) : this.renderCardDetailsMemberList(members)\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { CardDueDateSetter } from \"../CardDueDateSetter\"\r\nimport { CardNewChecklist } from \"../CardNewChecklist\"\r\nimport { MemberList } from '../../BoardHeader/MemberList'\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined'\r\nimport WebAssetOutlinedIcon from '@material-ui/icons/WebAssetOutlined'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile'\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nexport function CardSidebar(props) {\r\n    return (\r\n        <div className=\"card-sidebar-container flex column\">\r\n            <h3>Add to card</h3>\r\n        <div className=\"card-sidebar flex\">\r\n            <MemberList members={props.card.members} onAddCardMember={props.onAddCardMember} onRemoveCardMember={props.onRemoveCardMember} allUsers={props.allUsers} card={props.card} showBig={true} />\r\n            <button className=\"flex sidebar-button\" onClick={props.toggleLabelPalette}><LabelOutlinedIcon /><span className=\"sidebar-button-text\">Labels</span></button>\r\n            <CardNewChecklist addActivity={props.addActivity} onUpdate={props.onUpdateChecklists} />\r\n            <CardDueDateSetter dueDate={props.dueDate} onUpdateDueDate={props.onUpdateDueDate} alwaysShowButton={true} />\r\n            {(props.isUploading) ? <button disabled><CircularProgress size='14px' /></button> : <button className=\"flex\" onClick={props.toggleUploadDropzone}><AttachFileIcon /><span>Attachment</span></button>}\r\n            { !props.card.cover && <button className=\"sidebar-button\" ref={props.anchorRef} onClick={props.toggleCoverSelector}><WebAssetOutlinedIcon /><span>Cover</span></button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport * as timeago from 'timeago.js';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nexport class CardDetailsAttachment extends Component {\r\n    state = {\r\n        isEditing: false,\r\n        att: null,\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateAttFromProps()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.attachment !== prevProps.attachment) {\r\n            this.updateAttFromProps()\r\n        }\r\n        if (this.state.att !== prevState.att) {\r\n\r\n        }\r\n    }\r\n\r\n    updateAttFromProps = () => {\r\n        const att = { ...this.props.attachment }\r\n        const title = this.props.attachment.title\r\n\r\n        this.setState({ att, title })\r\n    }\r\n\r\n    setEditing = (bool) => {\r\n        if (bool) return this.setState({ isEditing: true })\r\n        return this.setState({ isEditing: false })\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        this.setState({ title: ev.target.value })\r\n    }\r\n\r\n    onRemove = (ev) => {\r\n        // if the update function receives a blank title - it removes the item\r\n        this.setState({ title: '' }, () => {\r\n            this.updateCard().then(() => {\r\n                this.setState({ att: null })\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        this.updateCard()\r\n    }\r\n\r\n    updateCard = () => {\r\n        return new Promise(resolve => {\r\n\r\n            const att = { ...this.state.att }\r\n            att.title = this.state.title\r\n            // console.log()\r\n            this.props.onUpdate(att)\r\n            this.setEditing(false)\r\n            resolve()\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const att = this.state.att\r\n        if (!att) return <React.Fragment />\r\n        return (\r\n            <div className=\"card-attachment flex\">\r\n                <div className=\"att-image\" style={{ backgroundImage: `url(${att.src})` }} />\r\n                <div className=\"att-details-container\">\r\n                    <div className=\"att-title\">\r\n                        {(this.state.isEditing) ?\r\n                            <form onSubmit={this.onSubmit} onBlur={() => { this.setEditing(false) }}><input autoFocus onChange={this.onChange} type=\"text\" value={this.state.title} required /></form>\r\n                            : <h5 onClick={() => { this.setEditing(true) }}>{this.state.title}</h5>}\r\n                    </div>\r\n                    <div className=\"att-date-added\">\r\n                        {timeago.format(att.createdAt)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"att-remove\">\r\n                    <IconButton onClick={this.onRemove}>\r\n                        <DeleteOutlineOutlinedIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { CardDetailsAttachment } from './CardDetailsAttachment'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nexport function CardImagesList(props) {\r\n    console.log(props)\r\n    \r\n    if (!props.attachments) return <React.Fragment />\r\n    return (\r\n        <div className=\"card-attachments-container\">\r\n        {/* <AttachFileIcon />  */}\r\n        <h3>Attachments</h3>\r\n      \r\n            {props.attachments.map(att => <CardDetailsAttachment key={att.id} onUpdate={props.onUpdate} attachment={att} />)}\r\n        </div>\r\n    )\r\n}","export const cloudService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(file) {\r\n    const CLOUD_NAME = \"dahthio8n\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n    // const file = ev.target.files[0]\r\n    console.log(file)\r\n    formData.append('file', file)\r\n    formData.append('upload_preset', 'ml_default');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        console.log(data)\r\n        return data.secure_url\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { cloudService } from '../../services/cloudService'\r\nimport { DropzoneDialog } from 'material-ui-dropzone'\r\n\r\nexport class CardImgUpload extends Component {\r\n\r\n    state = {\r\n        item: null\r\n    }\r\n\r\n    uploadImg = async (file) => {\r\n\r\n        await this.props.setUploading()\r\n        const imgUrl = await cloudService.uploadImg(file)\r\n        this.setState({ item: imgUrl }, this.submitImage)\r\n\r\n    }\r\n\r\n\r\n    submitImage = async () => {\r\n        // if no item - do nothing\r\n        if (!this.state.item) return\r\n        // else - wait for the image to be added to the array\r\n        await this.props.onAddImage(this.state.item)\r\n        // set the state back to null\r\n        this.setState({ item: null })\r\n    }\r\n    handleChange(files) {\r\n        this.uploadImg(files[0])\r\n    }\r\n    render() {\r\n        return (\r\n            <DropzoneDialog\r\n                acceptedFiles={['image/*']}\r\n                cancelButtonText={\"cancel\"}\r\n                submitButtonText={\"submit\"}\r\n                maxFileSize={512000}\r\n                open={this.props.isOpen}\r\n                onClose={() => this.props.toggleOpen()}\r\n                onSave={(files) => {\r\n                    this.handleChange(files)\r\n                    this.props.toggleOpen();\r\n                }}\r\n                showPreviews={true}\r\n                showFileNamesInPreview={false}\r\n            />\r\n        )\r\n    }\r\n}","import { Popover } from '@material-ui/core'\r\nimport { CloseOutlined } from '@material-ui/icons'\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport class CoverSelector extends Component {\r\n\r\n    state = {\r\n        cover: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setCoverFromProps()\r\n    }\r\n\r\n    setCoverFromProps = () => {\r\n        let cover = this.props.card.cover\r\n        if (!cover) cover = { id: null, value: null }\r\n        this.setState({ cover })\r\n    }\r\n\r\n    colors = [\r\n        { id: 101, value: '#cd9fcb' },\r\n        { id: 102, value: '#a7ead1' },\r\n        { id: 103, value: '#ffb787' },\r\n        { id: 104, value: '#f6c1d2' },\r\n        { id: 105, value: '#fd7967' },\r\n        { id: 106, value: '#8f79a8' },\r\n        { id: 107, value: '#b5daf6' },\r\n        { id: 108, value: '#a7a7a7' },\r\n        { id: 109, value: '#ab8597' },\r\n    ]\r\n\r\n    onSelectCover = async (value) => {\r\n\r\n        let cover = {\r\n            id: value.id,\r\n            color: value.value,\r\n            src: value.src\r\n        }\r\n\r\n        this.setState({ cover },\r\n            this.props.onUpdate(cover))\r\n    }\r\n\r\n    onRemoveCover = () => {\r\n        this.setState({ cover: null }, () => {\r\n            console.log(this.state.cover)\r\n            this.props.onUpdate(this.state.cover)\r\n        })\r\n    }\r\n\r\n    getImageEls = () => {\r\n        const att = this.props.card.attachments\r\n\r\n        if (!att)\r\n            return <React.Fragment />\r\n        const imageEls = att.map(el => {\r\n            let txt = \"single-image-choice\"\r\n            if (this.state.cover.id === el.id) {\r\n                txt += ' selected'\r\n            }\r\n            return <div key={el.id} className={txt} onClick={() => this.onSelectCover(el)} style={{ backgroundImage: `url(${el.src})` }}></div>\r\n        })\r\n\r\n        return <React.Fragment><h6>Images</h6><div className=\"image-choice\">{imageEls}</div></React.Fragment>\r\n    }\r\n\r\n    getColorEls = () => {\r\n        const colorEls = this.colors.map(el => {\r\n            let txt = \"color-choice\"\r\n            if (this.state.cover.id === el.id) {\r\n                txt += ' selected'\r\n            }\r\n\r\n            return <div key={el.id} className={txt} onClick={() => this.onSelectCover(el)} style={{ backgroundColor: el.value }}></div>\r\n        })\r\n        return colorEls\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.cover) return <React.Fragment />\r\n        return (\r\n            <Popover\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={true}\r\n                anchorEl={this.props.anchorEl.current}\r\n                onClose={this.props.toggleList}\r\n                onBackdropClick={this.props.toggleList}\r\n            >\r\n                <div className=\"cover-selector-container\">\r\n                    <div className=\"cover-selector-header flex justify-center\">\r\n                        <h5>Cover</h5>\r\n                        <CloseOutlined className=\"close-cover-modal\" onClick={this.props.toggleList} />\r\n                    </div>\r\n                    <div className=\"cover-selector-colors\">\r\n                        <h6>Colors</h6>\r\n                        <div className=\"color-selection\">\r\n                            {this.getColorEls()}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"cover-selector-images\">\r\n                        {this.getImageEls()}\r\n                    </div>\r\n                    <div className=\"cover-remove-container\">\r\n                        <button className=\"cancel-btn\" onClick={this.onRemoveCover}>Remove Cover</button>\r\n                    </div>\r\n                </div>\r\n            </Popover>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoard, updateCard, addActivity } from '../../store/actions/board-actions'\r\nimport { boardService } from '../../services/board-service'\r\nimport { CardDescription } from './CardDescription'\r\nimport { CardAddComment } from './CardAddComment'\r\nimport { ActivityLog } from './card-sidebar/ActivityLog'\r\nimport { CardTitle } from './CardTitle'\r\nimport { CardDueDateSetter } from './CardDueDateSetter'\r\nimport { CardChecklistContainer } from './CardChecklistContainer.jsx'\r\nimport { CardSidebar } from './card-sidebar/CardSidebar'\r\nimport { CardLabels } from './CardLabels'\r\nimport { LabelPalette } from './card-sidebar/LabelPalette'\r\nimport { CardImagesList } from './CardImagesList'\r\nimport { CardImgUpload } from './CardImgUpload';\r\nimport { withRouter } from 'react-router'\r\nimport { IconButton, Popover } from '@material-ui/core'\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListIcon from '@material-ui/icons/List'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport { CoverSelector } from './CoverSelector'\r\nimport WebAssetOutlinedIcon from '@material-ui/icons/WebAssetOutlined'\r\nclass _CardDetails extends Component {\r\n\r\n    state = {\r\n        card: null,\r\n        groupId: null,\r\n        groupName: null,\r\n        commentsOnly: false,\r\n        isLabelPaletteShowing: false,\r\n        isCoverSelectorShown: false,\r\n        isUploading: false,\r\n        isUploadZoneOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Did mount boardId: ' + this.props.boardId + ' cardId' + this.props.cardId)\r\n        if (this.props.boardId && this.props.cardId) {\r\n            this.props.loadBoard(this.props.boardId).then(() => {\r\n                console.log('After then')\r\n                this.getCardDetails()\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.cardId !== this.props.cardId) {\r\n            this.getCardDetails()\r\n        }\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    getCardDetails = () => {\r\n        console.log('Get card details ' + this.props.cardId)\r\n        let foundCard = false;\r\n        this.props.board.groups.forEach(group => {\r\n            group.cards.forEach(card => {\r\n                if (card.id === this.props.cardId) {\r\n                    const groupId = group.id\r\n                    const groupName = group.title\r\n                    foundCard = true\r\n                    console.log('Found card ' + this.props.cardId)\r\n                    this.setState({ groupId, groupName, card })\r\n                    return\r\n                }\r\n            })\r\n        })\r\n\r\n        if (!foundCard) {\r\n            console.log('Could not find card')\r\n        }\r\n    }\r\n\r\n    toggleCoverSelector = () => {\r\n        if (this.state.isCoverSelectorShown) return this.setState({ isCoverSelectorShown: false })\r\n        return this.setState({ isCoverSelectorShown: true })\r\n    }\r\n\r\n    onCloseCard = () => {\r\n        this.props.history.push(`/board/${this.props.board._id}`)\r\n    }\r\n\r\n    submitCard = (card, activity) => {\r\n        return new Promise(resolve => {\r\n            this.props.updateCard(this.props.board, card, activity).then(() => resolve())\r\n        })\r\n    }\r\n\r\n    onUpdateDesc = async (description) => {\r\n        const card = { ...this.state.card }\r\n        card.description = description\r\n\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated the description')\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    onUpdateCover = (cover) => {\r\n        const card = { ...this.state.card }\r\n        card.cover = cover\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated the cover')\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    onAddCardMember = (user) => {\r\n        var members = JSON.parse(JSON.stringify(this.state.card.members))\r\n        members.unshift(user)\r\n        this.onChangeMembers(members, \"added a member\")\r\n    }\r\n\r\n    onRemoveCardMember = (user) => {\r\n        var members = JSON.parse(JSON.stringify(this.state.card.members))\r\n        members = members.filter(_user => _user._id != user._id)\r\n        this.onChangeMembers(members, \"removed a member\")\r\n    }\r\n\r\n    onChangeMembers = (members, txt) => {\r\n        const card = { ...this.state.card }\r\n\r\n        card.members = members;\r\n        console.log(members)\r\n        this.setState({ card }, () => {\r\n            const activity = this.createActivity(txt)\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    getCardCover = () => {\r\n        const cover = this.state.card.cover\r\n        if (!cover) return <React.Fragment />\r\n\r\n        if (!cover.src) return (\r\n            // if there is no src - this is a color\r\n            <div className=\"card-details-cover-color\" style={{ backgroundColor: cover.color }}>\r\n                { cover &&\r\n                    <IconButton onClick={this.onCloseCard} aria-label=\"close\" className=\"card-details-cover-modal-close\">\r\n                        <CloseIcon />\r\n                    </IconButton>}\r\n                { cover && <button className=\"sidebar-button-with-cover\" ref={this.ref} onClick={this.toggleCoverSelector}><WebAssetOutlinedIcon /><span>Cover</span></button>}\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"card-details-cover-image\" style={{ backgroundImage: `url(${cover.src})` }} >\r\n                { cover &&\r\n                    <IconButton onClick={this.onCloseCard} aria-label=\"close\" className=\"card-details-cover-modal-close\">\r\n                        <CloseIcon />\r\n                    </IconButton>}\r\n                { cover && <button className=\"sidebar-button-with-cover\" ref={this.ref} onClick={this.toggleCoverSelector}><WebAssetOutlinedIcon /><span>Cover</span></button>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onAddComment = (txt) => {\r\n        const activity = {\r\n            \"txt\": \"\",\r\n            \"commentTxt\": txt,\r\n            \"card\": {\r\n                \"id\": this.state.card.id,\r\n                \"title\": this.state.card.title\r\n            }\r\n        }\r\n        const newActivity = boardService.createActivity(activity)\r\n        this.props.addActivity(this.props.board, newActivity)\r\n    }\r\n\r\n    createActivity = (txt) => {\r\n        const activity = {\r\n            \"txt\": txt,\r\n            \"commentTxt\": '',\r\n            \"card\": {\r\n                \"id\": this.state.card.id,\r\n                \"title\": this.state.card.title\r\n            }\r\n        }\r\n\r\n        console.log('CREATING ACTIVITY FOR CARD ' + JSON.stringify(activity))\r\n\r\n        return boardService.createActivity(activity)\r\n    }\r\n\r\n    toggleCommentsOnly = () => {\r\n        if (this.state.commentsOnly) return this.setState({ commentsOnly: false })\r\n        return this.setState({ commentsOnly: true })\r\n    }\r\n\r\n    getFilteredActivities = () => {\r\n        const card = this.state.card\r\n        const activities = this.props.board.activities\r\n        if (!activities) return []\r\n        let cardActivities = activities.filter(activity => activity.card.id === card.id)\r\n        if (this.state.commentsOnly) cardActivities = cardActivities.filter(activity => {\r\n            console.log(JSON.stringify(activity))\r\n            if (activity.commentTxt) return activity\r\n        })\r\n        // console.log(JSON.stringify(cardActivities))\r\n        return cardActivities\r\n    }\r\n\r\n    onUpdateTitle = async (txt) => {\r\n        let card = { ...this.state.card }\r\n        card.title = txt\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated the title')\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    onUpdateDueDate = async (dueDate) => {\r\n        let card = { ...this.state.card }\r\n        card.dueDate = dueDate\r\n\r\n        this.setState({ card }, async () => {\r\n            const activity = this.createActivity('updated due date')\r\n            await this.submitCard(card, activity)\r\n\r\n        })\r\n    }\r\n\r\n    onUpdateChecklists = (newChecklist, activityTxt) => {\r\n\r\n        const card = { ...this.state.card }\r\n        if (!card.checklists) {\r\n            card.checklists = []\r\n        }\r\n        // updating\r\n        const checklistIdx = card.checklists.findIndex(checklist => checklist.id === newChecklist.id)\r\n        if (checklistIdx >= 0) {\r\n            card.checklists = card.checklists.map(checklist => {\r\n                if (checklist.id === newChecklist.id) return newChecklist\r\n                return checklist\r\n            })\r\n        } else {\r\n            card.checklists.push(newChecklist)\r\n        }\r\n\r\n        // removing excess checklists\r\n        card.checklists = card.checklists.filter(checklist => {\r\n            if (checklist.title) return checklist\r\n        })\r\n\r\n        this.setState({ card }, () => {\r\n            if (activityTxt) {\r\n                let activity = this.createActivity(activityTxt)\r\n\r\n                this.submitCard(card, activity)\r\n            } else {\r\n                this.submitCard(card)\r\n            }\r\n        })\r\n    }\r\n\r\n    getLabels = () => {\r\n        const labels = this.state.card.labels\r\n        if (labels && labels.length) return (\r\n            <div className=\"card-details-label-container\">\r\n                <h4>Labels</h4>\r\n                <CardLabels\r\n                    onClickLabel={this.openEditLabelsModal}\r\n                    cardLabels={labels}\r\n                    boardLabels={this.props.board.labels}\r\n                    preview={false}\r\n                />\r\n            </div>\r\n        )\r\n        return <React.Fragment />\r\n    }\r\n\r\n    toggleLabelPalette = () => {\r\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\r\n    }\r\n\r\n    renderAttachments = (urlImg) => {\r\n        return (\r\n            <div>\r\n                <section class=\"flex justify-space-between\"><div class=\"flex\">\r\n                    <FileCopyIcon />\r\n                    <h3>Attachments</h3></div></section>\r\n                <img className=\"card-details-img-attach\" src={urlImg} />\r\n            </div>)\r\n    }\r\n\r\n    setUploading = () => {\r\n        return new Promise(resolve => {\r\n            this.setState({ isUploading: true }, resolve(true))\r\n        })\r\n    }\r\n\r\n    onAddImage = (imgRef) => {\r\n        const newImg = boardService.createImage(imgRef)\r\n        const card = { ...this.state.card }\r\n        if (!card.attachments) card.attachments = []\r\n        card.attachments.push(newImg)\r\n        const activity = this.createActivity('added an image')\r\n        this.setState({ card }, async () => {\r\n            await this.submitCard(card, activity)\r\n            this.setState({ isUploading: false })\r\n        })\r\n    }\r\n\r\n    onUpdateAttachments = async (newAttachment) => {\r\n        const card = { ...this.state.card }\r\n        const idx = card.attachments.findIndex(att => att.id === newAttachment.id)\r\n\r\n        if (!newAttachment.title.length) {\r\n\r\n            card.attachments.splice(idx, 1)\r\n        } else {\r\n            card.attachments[idx] = newAttachment\r\n        }\r\n\r\n        const activity = (newAttachment.title.length) ? this.createActivity('edited the title of an image') : this.createActivity('removed an image')\r\n\r\n        this.setState({ card }, () => {\r\n            this.submitCard(card, activity)\r\n        })\r\n    }\r\n\r\n    toggleUploadDropzone = () => {\r\n        if (this.state.isUploadZoneOpen) return this.setState({ isUploadZoneOpen: false })\r\n        return this.setState({ isUploadZoneOpen: true })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.card) {\r\n            return \"\"\r\n        }\r\n        // (this.state.card && this.state.card.attachments) ?\r\n\r\n        //         const urlImg = \"url(\" + (this.state.card && this.state.card.attachments) ? this.state.card.attachments : \"\" + \")\"\r\n\r\n        // console.log(this.state.card)\r\n        return (\r\n            <section className=\"card-details-modal flex column\">\r\n                <div className=\"modal-content\">\r\n                    {this.getCardCover()}\r\n                    <div className=\"card-details-modal-container\">\r\n                        <div className=\"card-modal-title flex justify-space-between\">\r\n                            <div className=\"card-details-title flex\">\r\n                                <SubtitlesIcon />\r\n                                <div>\r\n                                    <CardTitle titleTxt={this.state.card.title} onUpdate={this.onUpdateTitle} />\r\n                                    <div className=\"in-list\">\r\n                                    <span className=\"group-name\">in list <u>{this.state.groupName}</u></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {!this.state.card.cover &&\r\n                                <IconButton onClick={this.onCloseCard} aria-label=\"close\" id=\"modal-close\" className=\"modal-close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>}\r\n                        </div>\r\n                        <div className=\"flex justify-space-between modal-content-wrapper\">\r\n                            <section className=\"main-modal-section\">\r\n\r\n                                <div className=\"card-details-data\">\r\n                                    {this.getLabels()}\r\n                                    {(this.state.card.dueDate ? <div>\r\n                                        <h4>Due Date</h4>\r\n                                        <CardDueDateSetter onUpdateDueDate={this.onUpdateDueDate} dueDate={this.state.card.dueDate} displayDate={true} displayTime={true} />\r\n                                    </div> : <React.Fragment />)}\r\n                                </div>\r\n                                <div>\r\n                                    {/* { this.state.card.attachments ? JSON.stringify(this.state.card.attachments) : \"\"} */}\r\n                                    {/* {(this.state.card && this.state.card.attachments) ? this.renderAttachments(urlImg) : \"\"} */}\r\n                                    <CardImagesList onUpdate={this.onUpdateAttachments} attachments={this.state.card.attachments} />\r\n                                    <CardDescription onUpdateDesc={this.onUpdateDesc} description={this.state.card.description} />\r\n                                    <CardChecklistContainer checklists={this.state.card.checklists} onUpdate={this.onUpdateChecklists} />\r\n                                    <CardImgUpload onAddImage={this.onAddImage} setUploading={this.setUploading} toggleOpen={this.toggleUploadDropzone} isOpen={this.state.isUploadZoneOpen} />\r\n                                </div>\r\n                            </section>\r\n                            <CardSidebar\r\n                                anchorRef={this.ref}\r\n                                ref={this.ref}\r\n                                addActivity={this.createActivity}\r\n                                isUploading={this.state.isUploading}\r\n                                toggleCoverSelector={this.toggleCoverSelector}\r\n                                toggleUploadDropzone={this.toggleUploadDropzone}\r\n                                toggleDisplayMembers={this.toggleDisplayMembers}\r\n                                dueDate={this.state.card.dueDate}\r\n                                toggleLabelPalette={this.toggleLabelPalette}\r\n                                onUpdateDueDate={this.onUpdateDueDate}\r\n                                onArchiveCard={this.onArchiveCard}\r\n                                onUpdateChecklists={this.onUpdateChecklists}\r\n                                members={this.state.card.members}\r\n                                onAddCardMember={this.onAddCardMember} onRemoveCardMember={this.onRemoveCardMember}\r\n                                allUsers={this.props.allUsers}\r\n                                card={this.state.card}\r\n\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <section className=\"flex justify-space-between\">\r\n                                <div className=\"flex modal-activity-title\">\r\n                                    <ListIcon />\r\n                                    <h3>Activity</h3>\r\n                                </div>\r\n                                <button onClick={this.toggleCommentsOnly}>{(this.state.commentsOnly) ? 'Show Details' : 'Hide Details'}</button>\r\n                            </section>\r\n                            <CardAddComment onAddComment={this.onAddComment} />\r\n                            <ActivityLog\r\n                                boardId={this.props.board._id}\r\n                                displayMode=\"card\"\r\n                                activities={this.getFilteredActivities()} />\r\n                        </div>\r\n                        <Popover\r\n                            anchorOrigin={{\r\n                                vertical: 'center',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'center',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            open={this.state.isLabelPaletteShowing}\r\n                            anchorEl={this.ref.current}\r\n                            onClose={this.toggleLabelPalette}\r\n                            onBackdropClick={this.toggleLabelPalette}>\r\n                            <LabelPalette createActivity={this.createActivity} card={this.state.card} />\r\n                        </Popover>\r\n                        {this.state.isCoverSelectorShown && <CoverSelector card={this.state.card} anchorEl={this.ref} onUpdate={this.onUpdateCover} toggleList={this.toggleCoverSelector} />}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        allUsers: state.userModule.users,\r\n        members: state.boardModule.currBoard.members\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateCard,\r\n    addActivity\r\n};\r\n\r\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(connect(withRouter)(_CardDetails))\r\n","import React, { Component } from 'react'\r\n\r\nexport class BoardTitle extends Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        isEditing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const txt=this.props.titleTxt\r\n        this.setState({txt})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) { \r\n        if (prevProps.titleTxt != this.props.titleTxt) {\r\n            this.setState({txt: this.props.titleTxt})\r\n        }\r\n    }\r\n\r\n    onChangeText = (ev) => {\r\n        const txt = ev.target.value\r\n        this.setState({txt})\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.txt) return\r\n        this.setNotEditing()\r\n        this.props.onUpdate(this.state.txt)\r\n        \r\n    }\r\n\r\n    setEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    setNotEditing = () => {\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    getIsEditing = () => {\r\n        if (this.state.isEditing) return (\r\n            <form onBlur={this.setNotEditing} onSubmit={this.onSubmit}>\r\n                <input name=\"header\" type=\"text\" autoFocus value={this.state.txt} onChange={this.onChangeText}/>\r\n            </form>\r\n        )\r\n        return <div onClick={this.setEditing}><h2 className=\"proj-title btn\">{this.state.txt}</h2></div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getIsEditing()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { MemberList } from '../cmps/BoardHeader/MemberList';\r\n// import { Filter } from './Filter';\r\nimport { loadAllUsers } from '../store/actions/user-actions.js';\r\nimport { updateBoardTitle } from '../store/actions/board-actions.js';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\n// import { Notifications } from './Notifications';\r\n// import MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\nimport { BoardTitle } from '../cmps/BoardHeader/BoardTitle'\r\nexport class _BoardNav extends Component {\r\n    async componentDidMount() {\r\n        // await this.props.loadAllUsers()\r\n    }\r\n\r\n    onUpdateBoardTitle = (title) => {\r\n        this.props.updateBoardTitle(this.props.board, title)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board-header-container flex justify-space-between wrap\" >\r\n                <div className=\"board-nav-left flex align-center\">\r\n                    <BoardTitle titleTxt={this.props.board.title} onUpdate={this.onUpdateBoardTitle}></BoardTitle>\r\n                    <div className=\"members-container\">\r\n                        <MemberList members={this.props.members} allUsers={this.props.allUsers}/>\r\n                    </div>\r\n\r\n                    <div className=\"btn\"><span className=\"material-icons\">\r\n                        person_add</span>Invite</div>\r\n                   \r\n                </div>\r\n                <div className=\"board-nav-right flex \">\r\n                    <button className=\"notification-icon flex\">\r\n                    <NotificationsNoneIcon />\r\n                    </button>\r\n                    <button onClick={() => this.props.onToggleSidebar(true)}>\r\n                        <span className=\"material-icons\">more_horiz</span>Show menu\r\n                </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        allUsers: state.userModule.users\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadAllUsers,\r\n    updateBoardTitle\r\n};\r\n\r\nexport const BoardNav = connect(mapStateToProps, mapDispatchToProps)(_BoardNav);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setStyle, updateBoard } from '../../../store/actions/board-actions.js'\r\n\r\n\r\nexport class _ColorsGallery extends Component {\r\n\r\n    state = {\r\n        colorSelected: ''\r\n    }\r\n\r\n\r\n    colorSelected = (colorSelected) => {\r\n        if (this.state.colorSelected === colorSelected) return;\r\n        this.setState({ colorSelected })\r\n        const { board } = this.props;\r\n        board.style.bgImg = null;\r\n        board.style.boardColor = colorSelected;\r\n        this.props.style.bgImg = null;\r\n        this.props.style.boardColor = colorSelected;\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    render() {\r\n\r\n        const colors = [\r\n            \"rgb(0, 121, 191)\",\r\n            \"rgb(210, 144, 52)\",\r\n            \"rgb(81, 152, 57)\",\r\n            \"rgb(176, 70, 50)\",\r\n            \"rgb(137, 96, 158)\",\r\n            \"rgb(205, 90, 145)\",\r\n            \"rgb(75, 191, 107)\",\r\n            \"rgb(0, 174, 204)\",\r\n            \"rgb(131, 140, 145)\"\r\n        ]\r\n\r\n        return (\r\n\r\n            <section className=\"image-gallery\">\r\n\r\n                {colors.map((color) => <div className=\"image\" onClick={() => { this.colorSelected(color) }} style={{ backgroundColor: color }}></div>)}\r\n\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        style: state.boardModule.style\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setStyle,\r\n    updateBoard\r\n};\r\n\r\nexport const ColorsGallery = connect(mapStateToProps, mapDispatchToProps)(_ColorsGallery);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setStyle, updateBoard } from '../../../store/actions/board-actions.js'\r\n\r\n\r\nexport class _PhotosGallery extends Component {\r\n\r\n    state = {\r\n        imgSelected: ''\r\n    }\r\n\r\n\r\n    imgSelected = (imgSelected) => {\r\n        if (this.state.imgSelected === imgSelected) return;\r\n        this.setState({ imgSelected })\r\n        const { board } = this.props;\r\n        board.style.bgImg = imgSelected;\r\n        this.props.style.bgImg = imgSelected;\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    render() {\r\n\r\n        const imgs = [\r\n            \"url(http://avante.biz/wp-content/uploads/Tab-HD-Wallpapers/Tab-HD-Wallpapers-001.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-005.jpg\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-014.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads2/Summer-Nature-Desktop-HD-1/Summer-Nature-Desktop-HD-8.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads2/Summer-Nature-Desktop-HD-1/Summer-Nature-Desktop-HD-1.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-033.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-010.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads2/Summer-Nature-Desktop-HD-1/Summer-Nature-Desktop-HD-6.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Wonderful-Desktop-Wallpapers/Wonderful-Desktop-Wallpapers-032.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Outer-space-wallpaper-for-mac/Outer-space-wallpaper-for-mac15.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads/Outer-space-wallpaper-for-mac/Outer-space-wallpaper-for-mac13.jpg)\",\r\n            \"url(http://avante.biz/wp-content/uploads2/Autumn-Street-Wallpapers-Desktop-1/Autumn-Street-Wallpapers-Desktop-45.jpg)\"\r\n        ]\r\n\r\n\r\n        return (\r\n\r\n            <section className=\"image-gallery\">\r\n\r\n                {imgs.map((img) => <div className=\"image\" onClick={() => { this.imgSelected(img) }} key={img} style={{ backgroundImage: img }}></div>)}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        style: state.boardModule.style\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setStyle,\r\n    updateBoard\r\n};\r\n\r\nexport const PhotosGallery = connect(mapStateToProps, mapDispatchToProps)(_PhotosGallery);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ColorsGallery } from './ColorsGallery'\r\nimport { PhotosGallery } from './PhotosGallery'\r\n\r\n\r\n\r\nexport class _ChangeBackground extends Component {\r\n\r\n    state = {\r\n        chooseBackground: ''\r\n    }\r\n\r\n    onSelect = (chooseBackground) => {\r\n        this.setState({ chooseBackground })\r\n        console.log(chooseBackground);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"change-background-container\">\r\n                <hr className=\"side-menu-divider\" />\r\n\r\n                {this.state.chooseBackground === '' &&\r\n                    <div className=\"change-backgrounds-inier-container\">\r\n                        <div className=\"board-backgrounds-section-tile board-backgrounds-photos-tile\" onClick={() => { this.onSelect('Photos') }}>\r\n                            <div className=\"image\"></div>\r\n                            <div className=\"title\">Photos</div>\r\n                        </div>\r\n                        <div className=\"board-backgrounds-section-tile board-backgrounds-colors-tile\" onClick={() => { this.onSelect('Colors') }}>\r\n                            <div className=\"image\"></div>\r\n                            <div className=\"title\">Colors</div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.chooseBackground === 'Photos' && <PhotosGallery />}\r\n                {this.state.chooseBackground === 'Colors' && <ColorsGallery />}\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n};\r\n\r\nexport const ChangeBackground = connect(mapStateToProps, mapDispatchToProps)(_ChangeBackground);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { ChangeBackground } from './ChangeBackground.jsx';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n\r\nexport class _SideBar extends Component {\r\n\r\n    state = {\r\n        sideBarTitle: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // await this.props.loadAllUsers()\r\n        this.setState({ sideBarTitle: 'Menu' })\r\n    }\r\n\r\n    titleClicked = (title) => {\r\n        this.setState({ sideBarTitle: title })\r\n    }\r\n\r\n    DynamicCmp = () => {\r\n\r\n        const { sideBarTitle } = this.state;\r\n\r\n        switch (sideBarTitle) {\r\n            case 'Change background':\r\n                return <ChangeBackground />\r\n\r\n            case null:\r\n                return <React.Fragment></React.Fragment>\r\n            default:\r\n                return <React.Fragment></React.Fragment>\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"side-bar-container flex column align-center\" >\r\n                {console.log('side bar in')}\r\n                <div className=\"side-bar-header flex align-center\">\r\n                    {this.state.sideBarTitle !== 'Menu' &&\r\n                        <button className=\"Navigat-side-bar\" onClick={() => { this.titleClicked('Menu') }}><NavigateBeforeIcon /></button>}\r\n                    <h3 className=\"menu-title\">{this.state.sideBarTitle}</h3>\r\n                    <button className=\"close-side-bar\" onClick={() => { this.props.onToggleSidebar(false) }}><CloseIcon /></button>\r\n                </div>\r\n                <div className=\"side-bar-inside-container\">\r\n                    {this.state.sideBarTitle === 'Menu' &&\r\n\r\n                        <div className=\"side-bar-inside-menu-container\">\r\n                            <hr className=\"side-menu-divider\" />\r\n                            <ul className=\"side-menu-list clean-list\">\r\n                                <li onClick={() => { this.titleClicked('About this board') }}><span><InfoIcon/></span>About this board</li>\r\n                                <li onClick={() => { this.titleClicked('Change background') }}><span><WallpaperIcon/></span>Change background</li>\r\n                                <li onClick={() => { this.titleClicked('Board analysis') }}><span><AssessmentIcon/></span>Board analysis</li>\r\n                            </ul>\r\n                            <hr className=\"side-menu-divider\" />\r\n                        </div>\r\n                    }\r\n                    {this.DynamicCmp()}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        allUsers: state.userModule.users\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n\r\n};\r\nexport const SideBar = connect(mapStateToProps, mapDispatchToProps)(_SideBar);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupList } from '../cmps/groups/GroupList'\r\nimport { CardDetails } from '../cmps/cards/CardDetails'\r\nimport { BoardNav } from '../cmps/BoardNav'\r\nimport { loadBoard, onRemoveGroup, setStyle, updateBoard } from '../store/actions/board-actions'\r\nimport { loadAllUsers } from '../store/actions/user-actions.js'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { socketService } from '../services/socket-service.js';\r\nimport { SideBar } from '../cmps/BoardHeader/SideBar/SideBar'\r\n\r\nexport class _BoardApp extends Component {\r\n    state = {\r\n        lastReceivedUpdateAt: '',\r\n        isSidebarShowing: false\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        const { boardId } = this.props.match.params;\r\n        socketService.setup()\r\n        await this.props.loadBoard(boardId)\r\n        this.props.setStyle(this.props.board.style)\r\n        this.props.loadAllUsers()\r\n    }\r\n    \r\n    async componentDidUpdate() {\r\n      \r\n        \r\n        \r\n    }\r\n\r\n    onAddGroup = (txt) => {\r\n        return txt\r\n    }\r\n\r\n    onToggleSidebar = (isSidebarShowing) => {\r\n        this.setState({ isSidebarShowing });\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"board-app board-container flex column\">\r\n                    {(this.props.match.params.cardId) ?\r\n                        <CardDetails cardId={this.props.match.params.cardId} boardId={this.props.match.params.boardId} history={this.props.history} /> : <div></div>}\r\n\r\n                    <BoardNav title={board.title}\r\n                        members={board.members}\r\n                        onToggleSidebar={this.onToggleSidebar}\r\n                        // onFilter={this.onFilter}\r\n                        style={board.style}\r\n                        users={this.props.allUsers}\r\n                        lastUpdate={this.state.lastReceivedUpdateAt}\r\n                    />\r\n                    {this.state.isSidebarShowing && <SideBar onToggleSidebar={this.onToggleSidebar}/>}\r\n                    <GroupList groups={this.props.board.groups} onAddGroup={this.onAddGroup} history={this.props.history} style={board.style} />\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n        // loggedInUser: state.appModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    onRemoveGroup,\r\n    updateBoard,\r\n    loadAllUsers,\r\n    setStyle \r\n}\r\n\r\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp)","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { MemberPreview } from '../BoardHeader/MemberPreview'\r\n// import DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\n\r\n//add class templateto inside div?\r\nexport function BoardPreview(props) {\r\n\r\n    const board = props.board\r\n    const boardImg = props.board.style.bgImg\r\n    const boardColor = props.board.style.boardColor\r\n\r\n    return (\r\n\r\n        <Link to={`/board/${board._id}`} >\r\n            <div className=\"template board\" style={boardImg ? { backgroundImage: boardImg } :\r\n                { backgroundColor: boardColor }}>\r\n                <span className=\"board-title-preview\">{board.title}</span></div>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport React, { Component } from 'react'\r\n\r\nexport class NewBoardColor extends Component {\r\n    render() {  \r\n              \r\n        return (\r\n            <div className={`new-board-color ${this.props.isSelected ? 'colorSelected' : ''}`} \r\n            style={{ backgroundColor: `${this.props.color}` }}\r\n                onClick={()=>this.props.onSetColor(this.props.color) }\r\n            ></div>\r\n        )\r\n    }\r\n}\r\n\r\n","export const allBoardColors = [\r\n    {\r\n    \"id\": \"bc101\",\r\n    \"name\": \"green\",\r\n    \"color\": \"#519839\"\r\n}, {\r\n    \"id\": \"bc102\",\r\n    \"name\": \"yellow\",\r\n    \"color\": \"#D29034\"\r\n}, {\r\n    \"id\": \"bc103\",\r\n    \"name\": \"blue\",\r\n    \"color\": \"#0079BF\"\r\n}, {\r\n    \"id\": \"bc104\",\r\n    \"name\": \"brown\",\r\n    \"color\": \"#B04632\"\r\n}, {\r\n    \"id\": \"bc105\",\r\n    \"name\": \"purple\",\r\n    \"color\": \"#89609E\"\r\n}, {\r\n    \"id\": \"bc106\",\r\n    \"name\": \"pink\",\r\n    \"color\": \"#CD5A91\"\r\n}, {\r\n    \"id\": \"bc107\",\r\n    \"name\": \"lightGreen\",\r\n    \"color\": \"#4BBF6B\"\r\n}, {\r\n    \"id\": \"bc108\",\r\n    \"name\": \"teal\",\r\n    \"color\": \"#49A9D7\"\r\n}]","\r\n\r\nimport React, { Component } from 'react'\r\nimport { NewBoardColor } from './NewBoardColor'\r\nimport { connect } from 'react-redux';\r\nimport { allBoardColors } from '../assets/bgColors/bgColors.js';\r\nimport { addNewBoard, loadBoard, setDefaultStyle } from '../store/actions/board-actions.js';\r\nimport {  IconButton } from '@material-ui/core';\r\nimport { CloseOutlined } from '@material-ui/icons';\r\n\r\nexport class _AddNewBoard extends Component {\r\n\r\n    state = {\r\n        selectedColor: null,\r\n        newBoardName: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ selectedColor: null, newBoardName: '' })\r\n    }\r\n\r\n    onSetColor = (color) => {\r\n        this.setState({ selectedColor: color })\r\n    }\r\n\r\n    isSelected(color) {\r\n        if (this.state.selectedColor === color) return true\r\n        else return false\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ newBoardName: ev.target.value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        // const boardColor = this.state.selectedColor\r\n        // const boardName = this.state.newBoardName\r\n        // if (!boardName) return // add an error message when no name has been entered\r\n        // const newBoard = await this.props.addNewBoard(boardName, boardColor)\r\n        // this.props.redirectPath(newBoard._id)\r\n        // await this.props.loadBoard(newBoard._id)\r\n        // this.props.setDefaultStyle()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            \r\n                <div className=\"create-new-board\">\r\n                    <div className=\"notification-preview-header\">\r\n                        <div></div>\r\n                        <div><h6>Create Board</h6></div>\r\n                        <IconButton onClick={this.props.onCloseModal}>\r\n                            <CloseOutlined style={{color:\"rgb(54, 52, 52)\"}} />\r\n                        </IconButton>\r\n                    </div>\r\n                    <input onChange={this.handleChange} type=\"text\" placeholder=\"New Board's Name\" autoFocus />\r\n                    {/* description field */}\r\n                    <div className=\"new-board-colors-container\">\r\n                        {\r\n                            allBoardColors.map(boardColor => {\r\n                                return <NewBoardColor\r\n                                    color={boardColor.color}\r\n                                    key={boardColor.id}\r\n                                    onSetColor={this.onSetColor}\r\n                                    isSelected={this.isSelected(boardColor.color)}\r\n                                />\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <button onClick={this.onSubmit}>Add New Board</button>\r\n                </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n        board: state.boardModule.currBoard\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addNewBoard,\r\n    loadBoard,\r\n    setDefaultStyle\r\n}\r\n\r\nexport const AddNewBoard = connect(mapStateToProps, mapDispatchToProps)(_AddNewBoard)\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards, removeBoard, addNewBoard } from '../store/actions/board-actions'\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { BoardPreview } from '../cmps/BoardPreview';\r\nimport { Dialog, IconButton } from '@material-ui/core';\r\nimport { AddNewBoard } from './../cmps/AddNewBoard'\r\nimport { CloseOutlined } from '@material-ui/icons';\r\n\r\nexport class _Boards extends Component {\r\n\r\n    state = {\r\n        isCreateBoardOpen: false\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadBoards()\r\n\r\n    }\r\n\r\n    onRedirect = (id) => {\r\n        this.onCloseCreateBoard()\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    openNewBoardModal=()=>{\r\n        this.setState({ isCreateBoardOpen: true })\r\n    }\r\n\r\n    onCloseCreateBoard = () => {\r\n        this.setState({ isCreateBoardOpen: false })\r\n    }\r\n\r\n\r\n    // this.props.removeBoard()\r\n\r\n    fn() { }\r\n\r\n    render() {\r\n        const { boards } = this.props\r\n        return (\r\n            <section className=\"boards-page-bg flex column \">\r\n                <div className=\"main-boards\">\r\n                    <div className=\"flex justify-space-between align-center\">\r\n                        <h3>Your Boards</h3>\r\n                    </div>\r\n\r\n                    <section className=\"select-board-container flex wrap\">\r\n                        {/* onClose={this.onCloseCreateBoard}\r\n                                onBackdropClick={this.onCloseCreateBoard}\r\n                                open={this.state.isCreateBoardOpen}\r\n                                className=\"add-board-modal\">\r\n                                <AddNewBoard onCloseModal={this.onCloseCreateBoard} redirectPath={this.onRedirect} />\r\n                          */}\r\n                        <div className=\"create-new-board\" onClick={() =>{this.openNewBoardModal()}}>\r\n                            <div className=\"new-board-text flex align-center\">\r\n                                <AddBoxIcon />\r\n                                <p>Create new board</p>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.isCreateBoardOpen && <AddNewBoard onCloseModal={this.onCloseCreateBoard} redirectPath={this.onRedirect}/>}\r\n                        {boards.map((board) => <BoardPreview key={board._id} board={board} />)}\r\n                    </section>\r\n\r\n                    <h3 className=\"popular-title\">Popular templates</h3>\r\n\r\n                    <section className=\"select-board-container flex wrap\">\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads/Tab-HD-Wallpapers/Tab-HD-Wallpapers-004.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads2/Autumn-City-Wallpapers-for-desktop-1/Autumn-City-Wallpapers-for-desktop-74.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads/Tab-HD-Wallpapers/Tab-HD-Wallpapers-027.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads2/Autumn-City-Wallpapers-for-desktop-1/Autumn-City-Wallpapers-for-desktop-11.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(http://avante.biz/wp-content/uploads2/Autumn-City-Wallpapers-for-desktop-1/Autumn-City-Wallpapers-for-desktop-2.jpg)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(https://picsum.photos/195/95?random=2)\"\r\n                        }}><span>Template</span></div>\r\n                        <div className=\"template\" style={{\r\n                            backgroundImage: \"url(https://picsum.photos/195/95?random=1)\"\r\n                        }}><span>Template</span></div>\r\n                    </section>\r\n                </div >\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards\r\n        // loggedInUser: state.appModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    removeBoard,\r\n    addNewBoard\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)","import { Home } from './pages/Home.jsx'\r\nimport { BoardApp } from './pages/BoardApp.jsx'\r\nimport { Boards } from './pages/Boards.jsx'\r\n\r\n\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/board/:boardId/card/:cardId',\r\n        component: BoardApp,\r\n    },\r\n    {\r\n        path: '/board/:boardId',\r\n        component: BoardApp,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: Boards,\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    }\r\n]","\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport React from 'react';\r\n\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport HeroImg from '../assets/imgs/homenew.jpg'\r\nimport Logo from '../assets/imgs/logo.png'\r\n\r\n\r\nexport function Home() {\r\n    return (\r\n        <section className=\"home flex column align-center justify-center\" >\r\n\r\n                <header className=\"home-pg-header flex justify-space-between align-center\">\r\n                     <img src={Logo} className=\"logo-img-left\"/>\r\n\r\n                    <div className=\"flex\">\r\n                        <NavLink to='/' className=\"login-btn\">Log in</NavLink>\r\n                        <NavLink to='/' className=\"signup-btn\">Sign up</NavLink>\r\n                    </div>\r\n                </header>\r\n                \r\n\r\n            <section className=\"hero flex justify-space-between\">\r\n                <div className=\"introduction slide-right\">\r\n                    <h1>Welcome to Treelo</h1>\r\n                    <div className=\"intro-text\">\r\n                        <p>Manage projects, organize tasks, and build team spirit—all in one place. Explore our many features of project and task oriented management for higher efficiency.</p>\r\n                    </div>\r\n                    <NavLink to={ `/board/` } className=\"tryit\">Try It now! &#x2192;</NavLink>\r\n                </div>\r\n                <div className=\"img-container\">\r\n                <img src={HeroImg} className=\"slide-left\" />\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"home-pg-text\">\r\n                <img src=\"https://i.ibb.co/BVwnK1J/kisspng-environmentally-friendly-recycling-image-sustainab-government-flooring-flooring-concepts-inc.png\" className=\"img-container earth-img\"></img>\r\n                <h2>Sick of replacing white board markers every week?</h2>\r\n                <h2>Lost in the paper-towers? Save a tree, and your time!</h2>\r\n                <h2>Be innovative, increase productivity by bringing new technology and tools into your organization.</h2>\r\n                <h2>Receive live updates from team-mates and make faster progress then ever.</h2>\r\n{/* https://hbr.org/2015/03/convincing-skeptical-employees-to-adopt-new-technology\r\nhttps://zapier.com/learn/project-management/kanban-board/ */}\r\n            </section>\r\n\r\n        <section className=\"about-wrapper flex column\">\r\n            <h2 className=\"about-us-title\">Contact us</h2>\r\n            <div className=\"about-us-container flex justify-center align-center wrap\">\r\n              \r\n                <div className=\"about-me-container\">\r\n                    <div className=\"about-me koral\"></div>\r\n                    <h3>Koral Sabbah</h3>\r\n                    <div className=\"links-container\">\r\n                        <a href=\"https://www.facebook.com/koral.benabu.5\" target=\"blank\"><FacebookIcon className=\"facebook-icon\" /></a>\r\n                        <a href=\"https://www.linkedin.com/in/%F0%9D%90%8A%F0%9D%90%A8%F0%9D%90%AB%F0%9D%90%9A%F0%9D%90%A5-%F0%9D%90%92%F0%9D%90%9A%F0%9D%90%9B%F0%9D%90%9B%F0%9D%90%9A%F0%9D%90%A1-%F0%91%81%8D-%F0%9D%90%81%F0%9D%90%9E%F0%9D%90%A7-%F0%9D%90%9A%F0%9D%90%9B%F0%9D%90%AE-%F0%91%81%8D-2b8172188/\" target=\"blank\"><LinkedInIcon className=\"linkedin-icon\" /></a>\r\n                        <a href=\"mailto:koral762@gmail.com\" target=\"blank\"><EmailIcon className=\"mail-icon\" /></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"about-me-container\">\r\n                    <div className=\"about-me miriam\"></div>\r\n                    <h3>Miriam Baranovska</h3>\r\n                    <div className=\"links-container\">\r\n                        <a href=\"https://www.facebook.com\" target=\"blank\"><FacebookIcon className=\"facebook-icon\" /></a>\r\n                        <a href=\"https://www.linkedin.com\" target=\"blank\"><LinkedInIcon className=\"linkedin-icon\" /></a>\r\n                        <a href=\"mailto:maryam1649@gmail.com\" target=\"blank\"><EmailIcon className=\"mail-icon\" /></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"about-me-container\">\r\n                    <div className=\"about-me ksenia\"></div>\r\n                    <h3>Ksenia Braginsky</h3>\r\n                    <div className=\"links-container\">\r\n                        <a href=\"https://www.facebook.com\" target=\"blank\"><FacebookIcon className=\"facebook-icon\" /></a>\r\n                        <a href=\"https://www.linkedin.com\" target=\"blank\"><LinkedInIcon className=\"linkedin-icon\" /></a>\r\n                        <a href=\"mailto:ksu0593@gmail.com\" target=\"blank\"><EmailIcon className=\"mail-icon\" /></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"contact-us\">k</div> */ }\r\n        </section>\r\n        </section>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n// import { AddNewBoard } from './BoardHeader/AddNewBoard'\r\n// import logoFutura from '../assets/icons/newLogoFutura.png'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { connect } from 'react-redux'\r\n// import { LoginDrawer } from './LoginDrawer'\r\nimport { onLogout } from '../store/actions/user-actions'\r\n// import { MemberPreview } from './BoardHeader/MemberPreview'\r\n// import { Dialog, IconButton } from '@material-ui/core'\r\n// import { Users } from './Users/UsersMain'\r\n\r\nimport { userService } from '../services/user-service'\r\n// import { CloseOutlined } from '@material-ui/icons'\r\n// import Logo from '../assets/imgs/light-trello.jpeg'\r\nimport Logo from '../assets/imgs/logo.png'\r\n\r\n\r\nexport class _AppHeader extends Component {\r\n\r\n    state = {\r\n        isNewBoardModalShown: false,\r\n        isLoginDrawerShown: false,\r\n        isUserDetailsOpen: false,\r\n        loggedinUser: null\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isNewBoardModalShown: !this.state.isNewBoardModalShown })\r\n    }\r\n\r\n    onCloseModal = () => {\r\n        this.setState({ isNewBoardModalShown: false })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loggedinUser: userService.getLoggedinUser() })\r\n    }\r\n\r\n    redirectPath = (id) => {\r\n        this.props.history.replace(`/`)\r\n        this.props.history.replace(`/board/${id}`)\r\n        this.onCloseModal()\r\n    }\r\n\r\n    showLoginDrawer = (ev) => {\r\n        ev.stopPropagation()\r\n        ev.nativeEvent.stopImmediatePropagation();\r\n        this.setState({ isLoginDrawerShown: true })\r\n    }\r\n\r\n    hideLoginDrawer = (ev) => {\r\n        if (ev) ev.stopPropagation()\r\n        this.setState({ isLoginDrawerShown: false })\r\n    }\r\n\r\n    onOpenUserDetails = () => {\r\n        console.log('open')\r\n        this.setState({ isUserDetailsOpen: true })\r\n    }\r\n\r\n    onCloseUserDetails = () => {\r\n        this.setState({ isUserDetailsOpen: false })\r\n    }\r\n\r\n    onLogout = async (ev) => {\r\n        ev.stopPropagation()\r\n        await this.props.logout()\r\n        this.setState({ isUserDetailsOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"flex justify-space-between app-header align-center\">\r\n\r\n                    <div className=\"right-side flex\">\r\n                    <div className=\"header-icons flex\">\r\n                        <div>\r\n                        <NavLink to='/'>\r\n                        <span className=\"material-icons btn\">\r\n                            home</span>\r\n                            </NavLink>\r\n                            </div>\r\n                        <div>\r\n                        <NavLink to='/board'>\r\n                        <button className=\"flex align-center btn\">\r\n                            <DashboardIcon/> \r\n                          <span className=\"boards-btn\">Boards</span>\r\n                            </button>\r\n                            </NavLink>\r\n                            </div>\r\n                    </div>\r\n                     <input className=\"btn board-nav-filter\" type=\"text\" placeholder=\"Search...\"></input>\r\n                    </div>\r\n\r\n                    <img src={Logo} className=\"logo-img\"/>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // loggedinUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout\r\n}\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader);\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { routes } from './routes'\r\nimport { connect } from 'react-redux'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport { AppHeader } from './cmps/AppHeader'\r\nimport { onLogout } from './store/actions/user-actions.js'\r\nimport { boardService } from './services/board-service.js'\r\nimport { updatePosition, resetFilterBy, addActivity } from './store/actions/board-actions.js';\r\n\r\n// import { boardService } from './store/boardService.js'\r\n// import { createMuiTheme, ThemeProvider, } from '@material-ui/core'\r\n\r\nclass _App extends Component {\r\n\r\n  onDragStart = () => {\r\n    this.props.resetFilterBy(this.props.board._id)\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n\r\n    const { destination, source, draggableId, type } = result\r\n\r\n    if (!destination) return\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return\r\n    if (!draggableId) return\r\n\r\n    if (type === 'card') {\r\n      const startGroupIndex = this.props.board.groups.findIndex(group => group.id === source.droppableId)\r\n      const endGroupIndex = this.props.board.groups.findIndex(group => group.id === destination.droppableId)\r\n\r\n      // moving in the same group\r\n      if (source.droppableId === destination.droppableId) {\r\n\r\n        const currGroup = this.props.board.groups.find(group => group.id === source.droppableId)\r\n        const currCard = currGroup.cards.find(card => card.id === draggableId)\r\n        const newCardsGroup = Array.from(currGroup.cards)\r\n        newCardsGroup.splice(source.index, 1)\r\n        newCardsGroup.splice(destination.index, 0, currCard)\r\n        const newGroup = { ...currGroup, cards: newCardsGroup }\r\n        const newGroups = [...this.props.board.groups]\r\n        newGroups[startGroupIndex] = newGroup\r\n        const newBoard = { ...this.props.board, groups: newGroups }\r\n        this.props.updatePosition(newBoard)\r\n        return\r\n      }\r\n\r\n      // moving between groups\r\n      if (source.droppableId !== destination.droppableId) {\r\n        const destinationGroup = this.props.board.groups.find(group => group.id === destination.droppableId)\r\n        const formerGroup = this.props.board.groups.find(group => group.id === source.droppableId)\r\n        const newGroup = this.props.board.groups.find(group => group.id === destination.droppableId)\r\n        // try to find card in old group\r\n        let currCard = formerGroup.cards.find(card => card.id === draggableId)\r\n        // find card in new group (for some reason it is there after merge, probably groups update before this function is called)\r\n        if (!currCard) currCard = newGroup.cards.find(card => card.id === draggableId)\r\n        const formerCardIndex = formerGroup.cards.findIndex(card => card.id === draggableId)\r\n        const newCardsArray = Array.from(destinationGroup.cards)\r\n\r\n        // time analysis\r\n        const currCardTime = currCard.timeAnalysis\r\n\r\n        if (currCardTime) {\r\n          currCardTime.timeInGroupsMap[currCardTime.currGroup.groupId] =\r\n            currCardTime.timeInGroupsMap[currCardTime.currGroup.groupId] + (Date.now() - currCardTime.currGroup.enteredAt) ||\r\n            (Date.now() - currCardTime.currGroup.enteredAt)\r\n          currCardTime.currGroup = {\r\n            groupId: destinationGroup.id,\r\n            enteredAt: Date.now()\r\n          }\r\n        }\r\n\r\n        newCardsArray.splice(destination.index, 0, currCard)\r\n        formerGroup.cards.splice(formerCardIndex, 1)\r\n\r\n        const newGroups = [...this.props.board.groups]\r\n        newGroups[startGroupIndex] = formerGroup\r\n        newGroups[endGroupIndex].cards = newCardsArray\r\n\r\n        const newBoard = { ...this.props.board, groups: newGroups }\r\n        this.props.updatePosition(newBoard, draggableId)\r\n\r\n        // add activity\r\n\r\n        const cardTitle = boardService.getCardTitleById(draggableId, newBoard)\r\n        const partialActivity = {\r\n          \"txt\": 'moved the card',\r\n          \"commentTxt\": '',\r\n          \"card\": {\r\n            \"id\": draggableId,\r\n            \"title\": cardTitle\r\n          }\r\n        }\r\n\r\n        const activity = boardService.createActivity(partialActivity)\r\n        this.props.addActivity(newBoard, activity)\r\n        return\r\n      }\r\n    }\r\n\r\n    if (type === 'group') {\r\n      const newGroupsOrder = Array.from(this.props.board.groups)\r\n      const currGroup = this.props.board.groups.find(group => group.id === draggableId)\r\n      newGroupsOrder.splice(source.index, 1)\r\n      newGroupsOrder.splice(destination.index, 0, currGroup)\r\n\r\n      const newBoard = {\r\n        ...this.props.board,\r\n        groups: newGroupsOrder\r\n      }\r\n\r\n      this.props.updatePosition(newBoard)\r\n      // this.props.updateBoard(newBoard)\r\n      return\r\n\r\n    }\r\n  }\r\n  ///////////\r\n\r\n  render() {\r\n    const { onLogout, loggedinUser,style } = this.props\r\n    return (\r\n      // <ThemeProvider theme={theme}>\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <div className=\"app-bg\"\r\n          style={style.bgImg ? { backgroundImage: style.bgImg } :\r\n            { backgroundColor: style.boardColor}}>\r\n\r\n          <div className=\"main-container flex column full\" >\r\n            <AppHeader onLogout={onLogout} loggedinUser={loggedinUser} />\r\n            <Switch className=\"content\">\r\n              {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n      /* </ThemeProvider> */\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedinUser: state.userModule.loggedinUser,\r\n    board: state.boardModule.currBoard,\r\n    style: state.boardModule.style\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updatePosition,\r\n  resetFilterBy,\r\n  addActivity,\r\n  onLogout\r\n}\r\n\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    currBoard: {},\r\n    boards: [],\r\n    style: {},\r\n    fullLabel: false\r\n\r\n}\r\n\r\nconst defaultStyle = {\r\n    backgroundImage: null\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARD':\r\n            return { ...state, currBoard: action.board }\r\n        case 'SET_BOARDS':\r\n            return { ...state, boards: action.boards }\r\n        case 'REMOVE_BOARD':\r\n            return { ...state, currBoard: state.currBoard.filter(currBoard => currBoard._id !== action.currBoardId) }\r\n        case 'SET_DEFAULT_STYLE':\r\n            return {...state,style: defaultStyle}\r\n        case 'SET_STYLE':\r\n            return { ...state, style: action.style }\r\n        case 'TOGGLE_FULL_LABEL':\r\n            if (state.fullLabel) return { ...state, fullLabel: false }\r\n            return { ...state, fullLabel: true }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { userService } from '../../services/user-service.js'\r\n\r\n\r\nconst initialState = {\r\n    loggedinUser: userService.getLoggedinUser(),\r\n    users: [{\r\n        \"_id\": \"5f6a2528973d861c5d78c355\",\r\n        \"fullName\": \"Koral Sabbah\",\r\n        \"imgUrl\": \"https://www.linkpicture.com/q/koral.jpg\"\r\n      },\r\n      {\r\n        \"_id\": \"5f6a2528973d861c5d78c328\",\r\n        \"fullName\": \"Ksenia Braginsky\",\r\n        \"imgUrl\": \"https://www.linkpicture.com/q/ks.jpg\"\r\n      },\r\n      {\r\n        \"_id\": \"5f6a2528973d861c5d78c322\",\r\n        \"fullName\": \"Miriam Baranovska\",\r\n        \"imgUrl\": \"https://www.linkpicture.com/q/mir.jpg\"\r\n      },\r\n      {\r\n        \"_id\": \"5f6a2528973d861c5d78c323\",\r\n        \"fullName\": \"Avi Kohen\",\r\n        \"imgUrl\": \"../../imgs/miriam.jpg\"\r\n      }\r\n    ]\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        case 'SIGN_UP':\r\n            return { ...state, loggedinUser: action.user }\r\n        case 'LOGOUT_USER':\r\n            console.log(action.user);\r\n            return { ...state, loggedinUser: action.user }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/board-reducer';\r\nimport { userReducer } from './reducers/user-reducer'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    userModule: userReducer\r\n})\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App'\r\nimport reportWebVitals from './reportWebVitals';\r\n// import './assets/css/index.css'\r\nimport './assets/styles/styles.scss'\r\nimport { store } from \"./store/store.js\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","\r\nexport const utils = {\r\n    makeId,\r\n    delay,\r\n    getRandomInt\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n        \r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import io from 'socket.io-client'\r\nimport {httpService} from './http-service'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log(x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.on('lala', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n"],"sourceRoot":""}